node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3402
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3402
          }
        }
        tensor_content: "\000\000\000\000\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000 @\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000@@\000\000`@\000\000\200?\000\000\200?\000\000 @\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300?\000\000\200?\000\000\200?\000\000`@\000\000\200?\000\000\000\000\000\000\200?\000\000\200?\000\000\200@\000\000\000\000\000\000\000@\000\000\200?\000\000\200?\000\000\000\000\000\000@@\000\000\000@\000\000\000@\000\000`@\000\000@@\000\000\300?\000\000\000\000\000\000@@\000\000 @\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\000\000\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000 @\000\000\000@\000\000\200@\000\000 @\000\000\000\000\000\000\200?\000\000@@\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000@@\000\000\200?\000\000\000@\000\000\200?\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\200?\000\000\200?ff\006@\000\000\000@\000\000\200?\000\000\200?\000\000@@\000\000 @\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\340@\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\000\000\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000````@\000\000\300?\000\000\000\000\000\000\200@\000\000\240@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000\300?\000\000\200?\000\000\000@\000\000\200@\000\000\000@\000\000\200?\000\000@@\000\000\200?\000\000@@\000\000`@\000\000\200?\000\000\200@\000\000@@\000\000\200?\000\000\000@\000\000\200@\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\220@\000\000\000@\000\000\000\000\000\000\000\000\000\000\000@\000\000\200?\000\000@@\000\000\200?\000\000``@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000\300?\000\000`@\000\000\000@\000\000\200?\000\000\000\000\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300?\000\000\000@\000\000\200@\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\300?\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000@@\000\000\200@\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\300?\000\000\200@\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\000\000\000\000\000@\000\000@@\000\000\300?\000\000\200?\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\300?\000\000\000@\000\000\200?\000\000\200?\000\000@@\000\000\200?\000\000\200@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000`@\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000\000\000\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300?\000\000\000@\000\000\200?\000\000\300?\000\000@@\000\000\000@\000\000\200?\000\000 @\000\000\200?\000\000\200?\000\000\200?\000\000\220@\000\000`@ff\006@\000\000\240@\000\000@@\000\000\000@\000\000\000@\000\000\300@\000\000@@\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000\000\000\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000\240?\000\000 @\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\000\000\000\000\000@\000\000\200?\000\000`@\000\000\300?\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\200@\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000 @\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\000\000\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000@@\000\000 @\000\000 @\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000 @\000\000\300?\000\000\000@\000\000\200?\000\000\240@\000\000\000@\000\000 @\000\000\000@\000\000\000\000\000\000\000@\000\000@@\000\000\300?\000\000 @\000\000 @\000\000@@\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000@@\000\000\200?\000\000\200?\000\000\000\000\000\000\000@\000\000\200?\000\000\000@\000\000\300@\000\000\340@\000\000\000\000\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000\000\000\000\000@@\000\000\000@\000\000@@\000\000\200@\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\240@\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000@@\000\000\200?\000\000@@\000\000\000@\000\000\200?\000\000\300?\000\000@@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000\200@\000\000@@\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000@@\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000`````@\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\300?\000\000`@\000\000\000\000\000\000\200?\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000 @\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000 @\000\000\200?\000\000\200?\000\000\200?\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000\300?\000\000\000@\000\000\200?\000\000\200@\000\000\000\000\000\000\200?\000\000\000@\000\000``@\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000@@\000\000\000@\000\000 @\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000\000\000\000\000\000@\000\000@@\000\000\200?\000\000 @\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000@@\000\000``@\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000``@\000\000\000@\000\000\200?\000\000\200@\000\000\000\000\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000@@\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000\240@\000\000\200?\000\000@@\000\000\000@\000\000\000@\000\000\340@\000\000\200?\000\000\000@\000\000 @\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300@\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000 @\000\000\000@\000\000\000@\000\000\000@\000\000````@\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000 @\000\000\200?\000\000\200?\000\000\200?\000\000\300?\000\000\000@\000\000\000@\000\000\200@\000\000\200?\000\000 @\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\200@\000\000@@\000\000\000@\000\000\200@\000\000\300?\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000\000\000\000\000\220@\000\000\000@\000\000\000@\000\000\200?\000\000\000\000\000\000\200?\000\000\000@\000\000\000\000\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000@@\000\000\300?\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000 @\000\000@@\000\000@@\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000````@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000@@\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000\200@\000\000\000@\000\000\000@\000\000\200?\000\000\000\000\000\000\200?\000\000\000\000\000\000\200?\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000@@\000\000\200?\000\000\200?\000\000 @\000\000\000\000\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000\300?\000\000\200?\000\000\000@\000\000\200?\000\000@@\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000 @\000\000@@\000\000@@\000\000\000@\000\000\200?\000\000\200?\000\000\220@\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\000\000\000\000\000@\000\000@@\000\000\200?\000\000@@\000\000\200?\000\000\300?\000\000@@\000\000\000@\000\000\300?\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\300?\000\000\200?\000\000\200?\000\000\000@\000\000\240?\000\000@@\000\000\200?\000\000\200?\000\000\000\000\000\000\000@\000\000\200?\000\000\200?\000\000`@\000\000\200?\000\000\300@\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000@@\000\000\200?\000\000```@\000\000\000@\000\000\000@\000\000\000\000\000\000\000@\000\000\300?\000\000\000@\000\000@@\000\000\000@\000\000\200?\000\000\200?\000\000\300@\000\000\000@\000\000@@\000\000\200@\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000\300?\000\000\000@\000\000\200?\000\000\000\000\000\000\000\000\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\000\000\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\300@\000\000\000@\000\000\200?\315\314\214?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000@@\000\000\000@\000\000\200?\000\000\000@\000\000@@\000\000\200?\000\000\200@\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\300?\000\000\000\000\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000 @\000\000\300?\000\000\200?\000\000\200?\000\000\200?\000\000@@\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\000\000\000\000\200?\000\000\000@\000\000\000\000\000\000\000\000\000\000\200@\000\000\200@\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000 @\000\000@@\000\000\200?\000\000\000@\000\000 @\000\000\200?\000\000\300?\000\000\000@\000\000\200?\000\000\200?\000\000\300?\000\000\000@\000\000\000@\000\000\200?\000\000@@\000\000\200?\000\000\200?\000\000\200?\000\000\000\000\000\000\200@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000@@\000\000 @\000\000\000@\000\000\200?\000\000\000@\000\000@@\000\000\000@\000\000\300?\000\000\200?\000\000\200?\000\000\200?\000\000@@\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000@@\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000 @\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000\000\000\000\000@\000\000\300?\000\000@@\000\000\200?\000\000\200@\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000`@\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000\200@\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\300@\000\000\200?\000\000\300?\000\000\200?\000\000\000@\000\000\000@\000\000```@\000\000\200@\000\000`@\000\000\000@\000\000@@\000\000\000@\000\000\200@\000\000 @\000\000\300?\000\000\000@\000\000`@\000\000\000@\000\000\200?\000\000\200@\000\000\000@\000\000`@\000\000p@\000\000\200?\000\000 @\000\000\000@\000\000@@\000\000\200?\000\000\000\000\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000\200?\000\000@@\000\000 @\000\000 @\000\000\000@\000\000\000@\000\000`ff`@\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000@@\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\300?\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000\200?\000\000\200?\000\000\000\000\000\000\000@\000\000\000@\000\000\200?\000\000@@\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000 @\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000 @\000\000`@\000\000\200?\000\000\000@\000\000 @\000\000\200?\000\000@@\000\000\200?\000\000\000@\000\000\000@\000\000\200@\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000\300?\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000\000\000\000\000@@\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000\000\000\000\000\000@\000\000\200@\000\000`````@\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000\200?\000\000\000@\000\000\200@\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000 @\000\000@@\000\000\200?\000\000\200?\000\000@@\000\000\000@\000\000\300?\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\000\000\000\000`@\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\200?\000\000 @\000\000\000\000\000\000 @\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000`@\000\000\000@\000\000\200?\000\000\200?\000\000\200?\000\000 @"
      }
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3402
          }
        }
        tensor_content: "\000PkE\000\240\023E\000\340\230D\000\000CD\000@\265D\000@\234D\000@\203D\000\000\206D\000\000zD\000`\325D\000\300GD\000@\265D\000\2008D\000@\021D\000@\231D\000\200\324D\000@\037D\000\200\026D\000\200\242D\000\2005D\000\200\320C\000 \202D\000@\025E\000`\035E\000\200\266D\000\240\372D\000\000\202D\000\260\014E\000\340\340D\000@TE\000\220\036E\000\300\224D\000\300LD\000\000\310D\000\000\026E\000@mD\000\200\232D\000\200\021D\000\3001D\000\300\301D\000@\260D\000@{D\000\000\330C\000 4E\000\2000D\000 }E\000@0D\000\300\264D\000@lE\000\230\255E\000 \235D\000\240\214D\000\300ZD\000 cE\000\310\221E\000@\265D\000\000\230D\000\320-E\000@\027E\000@\252D\000\200\326C\000\200\352D\000\200\242D\000`QE\000\340\206D\000 \216D\000\200\361C\000@\361D\000\000(D\000\000\362C\000\000\341D\000@\236D\000@.D\000@wD\000\200\236D\000\300\217D\000 \277D\000\000GE\000@\216D\000\200ME\000\300-D\000\200\326D\000 \233D\000@ID\000\200yD\000\340\210D\000\200\236D\000 UE\000\200mD\000\000\304D\000\000CD\000\200;E\000\240\000E\000\300\004E\000\000/E\000@8D\000\300\214D\000\000\334D\000\200\247D\000\340\320D\000\000\356C\000\2404E\0000#E\000pYE\000\000|D\000\200;E\000\340\334D\000\200MD\000@\246D\000\300\217D\000`\205D\000h\241E\000@\201D\000\300\005E\000\300\206D\000\340\231D\000\340\235D\000\240\025E\000\300JD\000\200\253D\000 \201D\000\340\260D\000\000\241D\000\000\307D\000@NE\000\240\007E\000\340\220D\000@\243D\000\200\210D\000\340\266D\000`\335D\000\240\376D\000\300MD\000@MD\000\000ND\000@\252D\000`\237D\000@7D\000\000JD\000\300BD\000\300ZD\000\200TD\000\200\211D\000@gD\000\300\301D\000\000 D\000\000\226D\000@6D\000\200mD\000\300zD\000\300iD\000\300\327D\000\200\026D\000\000%D\000\260\031E\000\240>E\000\000\207E\000\000aD\000\2002D\000`\375D\000\000\300D\000\200;D\000\200,E\000\200\016E\000\300\316D\000\200TE\000@\326D\000\000\315D\000\300\032D\000 \233D\000@2D\000\340&E\000\000\214D\000@\030E\000\300\351D\000\300jD\000@\036D\000\0006D\000\000!D\000@\261D\000\340\253D\000@\234D\000\000\202D\000\200bD\000\000\321D\000@\003E\000\340VE\000\240\250D\000@\203D\000p\025E\000 \273D\000`\221D\000\300ZD\000\300\036E\000\300\237D\000\000 D\000\340\226D\000`jE\000 \367D\000\000\201D\000\200ND\000\300FD\000\000\231D\000\300~D\000\200\220D\000@\212D\000@\310D\000`\247D\000\200\334D\000\200\211D\000\340\223D\000\300\200D\000\200-D\000@\220D\000\000zD\000@\275D\000\240%E\000@\263E\000@\265D\000\200\"D\000\300\252D\000`\243D\000\360gE\000\240\214E\000\240\217D\0000\005E\000`\213D\000\200\356C\000@\334D\000@!D\000\200\361D\000\300\372D\000\200\223D\000@JD\000h\004F\000\200\023D\000\200\326D\000\000/E\000\300\250D\000\300\216D\000\300\224D\000\300aD\000\000\310D\000\200\246D\000\000HD\000\340\252D\0000LE\000\300\276D\000\300\271D\000@VD\000\340\232D\000\300\204D\000@\234D\000\000XD\000\240\245D\000 \233D\000\000\226D\000@\253D\000\000JD\000\300\357D\000\000zD\000\300\346D\000\340\321D\000 \320D\000\200ID\000\340\375D\000\300\252D\000\340\222D\000\000zD\000\340\222D\000\200\332C\000\200\016D\000\300\355D\000\300\347D\000 \357D\000\300KE\000\000zD\000P\005E\000\240\222D\000\000bD\000 #E\000\300DD\000\300\017D\000@\277D\000@\013D\000\240\357D\000\200\273D\000\300DD\000`\323D\000\240\271D\000`\350D\000\020BE\000@\234D\000@NE\000\240ME\000\020WE\000\200\273D\000\000\310D\000\000\026D\000\000\220D\000\200dD\000\2001D\000@MD\000\200\223D\000\300\212D\000@vD\000`\303D\000pDE\000`\000E\000\300^D\000p\024E\000\300LD\000\300\031E\000\200\036E\000\200;D\000 ZE\000\200\tE\000\300\017D\000\000=D\000@NE\000\300\315D\000\000\026D\000\000oD\000\000\272D\000\000\364D\000@\277D\000\300\203D\000\200\273D\000\200WD\000\000kD\000\300ZE\000@\271D\000`\231D\000\000[D\000\340\260D\000\200lD\00000E\000`\200D\000\000,E\000\000PD\000\000\031D\000`\003E\000\300\332D\000\000rD\000\200\350D\000@\214D\000\300\000E\000\200\204D\000\2001D\000\300\217D\000`*E\000@KD\000`\307D\000\000\226D\000\300\240D\000\300\220D\000\000\257D\000\340\314D\000\3007D\000\000\307D\000\000\227D\000 \200D\000 \222D\000\300:D\000\240\244D\000\200oD\000\000\257D\000\200jD\000@\245D\000 \321D\000 \365D\000@\252D\000\300\266D\000\300YD\000@\226D\000p\243E\000@QD\000\200rD\000\200\"D\000\200TD\000\000\372D\000@UD\000\000\025E\000\000\226D\000\240\201D\000@\273D\000\000kD\000\340\311D\000\300\263D\000\340\246D\000\200oD\000\300#D\000@2D\000\000=D\000\000hD\000@\267D\000\340\222D\000\340\034E\000 \317D\000@zD\000\000\375C\000`\202D\000\200\014D\000@\251D\000\200+D\000\200\tE\000\200\233D\000\200$D\000@?D\000\000\nD\000\300sD\000\000]D\000\000<D\000\240\225D\000\000\310D\000\320@E\000@zD\000\000\330D\000`\206D\000\300\361D\000\240\tE\000\200rD\000\300\313D\000\200\223D\000@QD\000\000\346D\000\200OE\000@\247D\000\300yD\000`\230D\000\000\215D\000\340\237D\000\3007D\000\300\021E\000 \306D\000\200\355D\000\200(E\000\2002D\000@\265D\000@OD\000@\234D\000\000\330C\000\300fD\000\200\300D\000@2D\000\300,E\000@MD\000\000\257D\000\000\327D\000@pD\000\200\242D\000\000\341D\000\000\301D\000\240,E\000\200\234D\000\300wD\000\200\326D\000 \305D\000\020\252E\000\000jD\000\220+E\000\000_D\000\000\327D\000\300\333D\000\300OD\000\000\201D\000\000aE\000\320=E\000\200\261D\000\240\214D\000\340\230D\000@\200D\000@zD\000@.D\000\000\326D\000\200\"D\000\340\262D\000\000\002E\000\300\031D\000\000\026D\000@ND\000@>D\000 \233D\000@zD\000\200*D\000`\321D\000\240\'E\000\340\304D\000\000\'D\000@\300D\000@\024D\000\200\013D\000@0D\000\200\216D\000`)E\000P\026E\000\2209E\000\310\257E\000\300\217D\000\300hD\000P\221E\000\000\026E\000\300\006D\000\000uD\000\000kD\000\200\211D\000\000\341D\000\000\356C\000\000\226D\000\000\341D\000\300FE\000@zD\000\240\271D\000\200\300D\000@]D\000\000\372D\000\020\037E\000\000 D\000`\357D\000\200\315C\000\200mD\000@5E\000\200@D\000@7D\000\000HD\000@1D\000\000\257D\000 \223D\000\000\357C\000\0004D\000z\215F\000`\221D\000\200OD\000\320JE\000\240\313D\000\300TD\000\200\220D\000\000ND\000\200\277D\000\200\324D\000\020\007E\000\200@D\000 \220D\000@\227D\000\300pD\000\200\227D\000\240\214D\000 \212D\000 \335D\000\200\350D\000\000/D\000\300\224D\000@\347D\000 \216D\000@zD\000\200+D\000\340\202D\000@\016E\000\200\377D\000\000rD\000\000\343C\000 \251D\000\000\241D\000\340\342D\000@\010E\000\300UD\000\300\232D\000\000\260D\000\000\350D\000\000:D\000\300\272D\000\240\321D\000\340\022E\000 \025E\000 \310D\000\000\212D\000@\024D\000\200LD\000\000\341C\000@:D\000\300pD\000@\273D\000\200YE\000\020\022E\000\340\235D\000@\027D\000\200\222D\000\300\217D\000\200DD\000\000zD\000\200\255D\000\200\324D\000\000\322D\000\300\310D\000\200\374D\000\300\206D\000\340\272D\000\000QD\000\0202E\000\200mD\000\000\257D\000 \341D\000\240 E\000@\202D\000@\330D\000\300\200D\000`\310D\000`\225D\000P\021E\000p\024E\000@\'D\000\200TD\000@!E\000 \210D\000\340\213D\000`\364D\000\000\364D\000\300\211D\000\300\217D\000\364\210F\000\000oD\000\300\227D\000\000\257D\000\000\257E\000\320\324E\000`\310D\000\220\005E\000\000pD\000`\207D\000@\203D\000\200;D\000@#D\000\300,D\000\000zD\000\200\025E\000\000oD\000 \235D\000\000\257D\000\300\260D\000@\210D\000\200\234D\000\340/E\000@vD\000\200\225D\000@gE\000\200\211D\000\200\'D\000\200\273D\000@AD\000\000cD\000`\353D\000\240\210D\000 \nE\000\240\243D\000`\257D\000 \203D\000\000\375D\000\000zD\000\300\177D\000\240\222D\000\300ZD\000\300\263D\000@\241D\000\200\362D\000\200\022D\000@gE\000 \247D\000\000PD\000 \204D\000\300\343D\000\000\326D\000\000\377C\000@\203D\000@\360D\000\200]D\000\000/D\000`\334D\000`\244D\000\240\214E\000@\327D\000\300\262D\000@zD\000\360\032E\000\240\274D\000\000=D\000\240\257D\000\000FD\000\000\257D\000`\263D\000\000\226D\000\000aD\000\200GD\000\200TD\000\000zD\000@dD\000\000/D\000@\'D\000\340%E\000\200\272D\000`#E\000\300!D\000\300\336D\000@QD\000\200\222D\000\000\234D\000\240\214D\000\330\275E\000 gE\000\246\204F\000\300ZD\000\240CE\000\240\321D\000`\241D\000\000aE\000\200/D\000\200\362D\000\3405E\000\240\366D\000\240\236D\000p\003E\000\200cE\000\200\204D\000@\272D\000\300\232D\000`\244D\000@\023E\000\300\322D\000\200nD\000\000aE\000@\316E\000@2D\000`\214D\000@\222D\000\0008E\000@\034E\000\300uD\000@SD\000\000/D\000pdE\000\000\006D\000\300\200D\000\200\367C\000@ND\000\340\270D\000\000aD\000\200\"D\000@\243D\000\240\266D\000@zD\000\000\357D\000\260\014E\000\000\257D\000 \214D\000\000hD\000\300ND\000 \231D\000`\213D\000@\375D\000\300\204D\000@\203E\000@\316D\000@\210D\000\020LE\000@\206D\000\000\300D\000\200DD\000\240\221D\000@\311D\000\200\273E\000\240\241D\000\000\226D\000\300\202D\000@\005E\000 \245D\000@VD\000\200\273D\000\240\222D\000@\313D\0000\030E\000`\363D\000\200QD\000P\001E\000\300\336D\000`\207D\000\240\214E\000@]D\000\000\372D\000\340\241D\000\000\305D\000\300\267D\000\000aD\000@)D\000\340\275D\000\300DD\000 \354D\000\000lD\000\300\226D\000\340\010E\000\000\202D\000\200\260D\000\200\273D\000@\234D\000\200-D\000`\204E\000 \371D\000 \201D\000\340\216D\000\200\021D\000\000dD\000\000\250D\000\340\227D\000@\234D\000\200\305D\000@\310D\000\200\277D\000\340\210D\000\200dD\000\000^D\000@\355D\000\200\317D\000 \262D\000\200\017E\000\000yD\000\300\nD\000`\216D\000\000\026D\000@MD\000@\234D\000\300\250D\000\300\224D\000\300\232D\000`2E\000\300TD\000\300}D\000\200\211D\000`\221D\000@\210D\000\300\000D\000\240\345D\000\000\202D\000\000\017D\000P\006E\000\340\253D\000\200TD\000\300SD\000\240\023E\000\200\314C\000\200YD\000\000/E\000\300fD\000\000\226D\000\000|D\000\000\341C\000@9D\000\300_D\000\3405E\000\300\246D\000\300\251D\000\240\214D\000 \350D\000`\233D\000\340\340D\000\200\036D\000\000\330C\000@\241E\000\020.E\000\000|D\000\340]E\000@1E\000\200\216D\000@ED\000 \247D\000\360\207E\000\340\265D\000\200PD\000\2005D\000\300<D\000\300dD\000\000\226D\000p E\000\300fD\000\000\226D\000  E\000\200\275D\000 \271D\000\2007E\000\000\327D\000\000\004E\000\200\213D\000 \256D\000\000]D\000\000HD\000@\204D\000\000\226D\000\300sD\000 \333D\000\200\201D\000\300\312D\000\200\211D\000\200\211D\000\200 D\000\000\266D\000\200\273D\000\000\010D\000\240\232D\000\020\017E\000\260eE\000\000zD\000\000AD\000 \325D\000\200\277D\000\240\265D\000@\302D\000 \313D\000`\016E\000\300?D\000\340\020E\000\200\242D\000\000\360D\000@\034E\000\200\327D\000\300?D\000\200@D\0000\247E\000\240\327D\000\000\222D\000\000\243D\000`\013E\000@\234D\000\200\377C\000\300\243D\000\200\227D\000\000OD\000@9D\000`\221D\000\000\204D\000\300MD\000\240\224D\000\200\332C\000\300$D\000\300\217D\000\000\223D\000\000\312C\000\0008D\000\000\271D\000@\256D\000\0004D\000\000\202D\000\000%E\000\340\272D\000\300mD\000\260|E\000\360\026E\000\300\205D\000@\207D\000@CD\000@\215D\000\000\200?\000\000\007E\000\300\tD\000\300OD\000\300<D\000@VE\000\320\024E\000\3406E\000\300\262D\000\000\267D\000\260\014E\000\000\021D\000@XD\000@\344D\000\000\234D\000`\020E\000\360RE\000\200 E\000\000\032D\000`\207D\000@zD\000\000\\D\000 JE\000\200\211D\000\300<D\000\200\213D\000\200\371D\000\300\324D\000`\274D\000\300rD\000\000\377D\000@\262D\000@\260D\000\300<D\000\000_D\000\200;D\000 2E\000\000OD\000\000zD\000\020\244E\000\000\375D\000`\243D\000\240\352D\000\300\367D\000\200$D\000\300dD\000\300\332D\000\000\204C\000\3003D\000\300~D\000\240\321D\000\240\265D\000 \306D\000@KD\000\200\204D\000@$D\000\300LD\000@\265D\000\340!E\000 \206D\000\300\325D\000\200\376D\000\300LD\000 \305D\000@\001D\000`\024E\000\000jD\000\000\214D\000@\003E\000\240\014E\000\240%E\000 \017E\000 \010E\000\200\221D\000\000JD\000@\363D\000`\363D\000\200\"D\000\200\242D\000\200^D\000\000=D\000\000\330C\000\200DD\000`\237D\000\200\033D\000\200\233D\000@\272D\000\340\200D\000\200\266D\000 \221D\000\200^E\000\000\315C\000`\006E\000\300\204D\000\300dD\000\200\242D\000\240\337D\000\220\001E\000\340\355D\000\340\311D\000\020\036E\000\000}D\000\200\204D\000\320\025E\000\000\376D\000\320\020E\000@\204D\000\200BD\000\300\262D\000\000aD\000@\343D\000\200\205D\000\300<E\000\000\372D\000\000=D\000\000\025E\000\000zD\000@\220D\000@\234D\000@\224D\000@&D\000\200\\D\000\000\375C\000\340\300D\000`\264D\000@\231D\000\200\261D\000\240\207D\000\240\222D\000\000yD\000\300\227D\000`\244D\000\000\025D\000\300\tE\000\300ND\000\200\031D\000\200\211D\000\300sD\000\300(E\000\200{D\000\320\023E\000\300\026D\000\200\204D\000\000XD\000\340\343D\000@\203D\000\000XD\000`\242D\000\000\341D\000\240\353D\000`\206D\000\200\026D\000\000\315C\000`\341D\000\300\177D\000\300LD\000\000\260C\000\300SD\000\300nD\000@\203D\000@zD\000\000/D\000@kD\000@\237D\000\000\306C\000\200\236D\000@_D\000\240\330D\000\200\035E\000@\260D\000\000\270D\000\000\016D\000\000|D\000@]D\000\200\240D\000\340\316D\000`\001E\000\000 E\000\200\300C\000\000LC\000\240\216D\000\320\021E\000@\344D\000\300MD\000@\316D\000\300\224D\000@\003E\000\000zD\000`\377D\000\200\tE\000\300,D\000 \307D\000\360UE\000\000PD\0000\006E\000\200;D\000\000\226D\000@\204D\000\000\026D\000\240\327D\000@\347D\000\000\257D\000\000zD\000\300=D\000\240\257D\000\200mD\000\000\377D\000p\306E\000@\354D\000\260\014E\000\000/D\000\000\372D\000\210\263E\000\340\252D\000\200\273D\000\240\340D\000\000\240D\000\000\365C\000\000/E\000 \023E\000`\234D\000\300\236D\000\000\230D\000\300\213D\000\300\262D\000\000KD\000@\315D\000@\330D\000\000zD\000\200\'D\000@\003E\000\200vD\000 \037E\000@6E\000\000\023E\000\240\241D\000\000ND\000\2001D\000\300OD\000\300AD\000\340\240D\000\200\216D\000\200\236D\000@\026D\000\200JD\000\000\232D\000\200\273D\000\000\303D\000\340\271D\000@zD\000\240\024E\000@ED\000\300~D\000\000/D\000\240\210D\000\200LD\000@~D\000@$D\000\300\303D\000\000/D\000\200\231D\000\200\364C\000`\206D\000\200\004E\000\000\214D\000\340\276D\000\000\221D\000\200\016E\000\000/D\000\200\204D\000\300\025E\000\200$D\000\200\tE\000`\276D\000\000\341D\000\000\021D\000\300\031E\000\200\337D\000\340\265E\000\240\203D\000\000\306D\000\200\"D\000\240\234D\000\240\310D\000\300\247D\000\000\323D\000\200YD\000\020\025E\000\300\250D\000\200WD\000\000XD\000@=D\000 \307D\0000\031E\000\300SD\000`\035E\000\240\203D\000\340\227D\000\000)D\000\000iD\000\360%E\000P|E\000\200cE\000 \221D\000\300ZD\000\0002D\000@\026D\000\200\253D\000\240\212D\000@dD\000\000\\D\000\200\023D\000@\267D\000\000\220E\000\200[D\000`\243D\000\300kD\000\000\002E\000\200OD\000@\206D\000\240\300D\000\000ED\000\000\\D\000\240\310D\000p7E\000\000\277D\000\000\213D\000\220\017E\000\300_E\000\240\220D\000`\226D\000\000OD\000`\001E\000\300\217D\000`\204D\000\340:E\000\200,D\000\200\356C\000@gD\000@vD\000\240\214D\000\240\244D\000\200\035D\000@gE\000\000%D\000@\203D\000\240\226D\000\200\264D\000@\342E\000\300<D\000`\250D\000\200\317D\000\200#D\000\300DD\000@\250D\000\340\212D\000\000PD\000 \221D\000@2D\000\200GD\000\000<D\000\200\242D\000 \311D\000\000\303D\000\300RD\000\240\226D\000\000\341D\000\300\221D\000\000QD\000\200[D\000\340\210D\000@7D\000\300SD\000@\243D\000\020\300E\000\340\332D\000\240%E\000\300FD\000\200wD\000\300:D\000@\033D\000\300dD\000 \006E\000`\206D\000\300\036E\000\300\205D\000\340\027E\000@\021D\000\200!D\000H\212E\000\300\023E\000\2003D\000 \367D\000\200\377C\000\340;E\000\340\222D\000\200\023E\000`\251D\000 \247D\000\200~D\000 \306D\000\200\367D\000\240\245D\000\300\212D\000\340\202D\000\340\272D\000\000\257D\000 \265D\000\000\275D\000@nD\000@ED\000 \345D\000@\346D\000 \310D\000 \244D\000@9D\000\240\273D\000`\307D\000h\224E\0000\261E\000@\027D\000 \232D\000\240\220D\000\000\327C\000\200uD\000PKE\000\240\214D\000\340\315D\000\300\275D\000\200\367D\000\000\266D\000\340\266D\000@=D\000@RD\000@\203D\000@sD\000\300\265D\000\300\262D\000\240 E\000\200\236D\0000\200E\000\2001D\000\300ZD\000 \003E\000\240\007E\000\000\001E\000\300\272D\000\240\244D\000\240\214D\000\300ND\000\320\216E\000\240\214D\000`8E\000\3603E\000\240\225D\000\200\242D\000 \314D\000 \262D\000\000\226D\000\240\272D\000\300\227D\000\200fD\000\200\227D\000\300\251D\000\200\351D\000@\037D\000\200\244D\000\240\271D\000@-D\000\000\341D\000`\233D\000\300\211D\000\300\237D\000@\304D\000\240\014E\000@\234D\000\000\226D\000\200\217D\000\200QD\000\300FD\000\340\265D\000\200^D\000\200OD\000 _E\000\200\355D\000\200\316D\000`\375D\000@0E\000\020VE\000\000\306D\000\000TD\000\000\206D\000\200uD\000\200rD\000\320,E\000\200\324D\000@vD\000@\233D\000\200\224D\000 \262D\000\300sD\000\340\225D\000\200 D\000\000\351D\000\000\202D\000@JD\000 \370D\000\240\311D\000p2E\000@\255D\000@zD\000P|E\000\300\262E\000\240gE\000\340\253D\000\200\374D\000\000QD\000\300#D\000 \323D\000\000\226D\000\000WE\000\000\264D\000 \214D\000@\234D\000\300LD\000\240\222D\000\240\214D\000\340\202D\000\200\212D\000\300\232D\000@\000E\000\300,D\000\200\223D\000@\203D\000@\'D\000@#D\000 \227D\000\200AD\000\240\214D\000@2D\000\000\341D\000@\335D\000\300\221D\000\2001D\000@\222D\000\240%E\000\340\232D\000\300\227D\000@CD\000`\315D\000\300\017E\000 \235D\000\360\237E\000\300\232D\000\200\242D\000\200TD\000\000aD\000\340\347D\000\000hD\000\300<D\000\200\210D\000pLE\000\340*E\000\300\306D\000\200\036D\000\200\203D\000\000\215D\000\240\277D\000\300JD\000\300LD\000\300\017D\000\300\324D\000\340\322D\000\300\264D\000\200;E\000\300\230D\000 \351D\000\200ED\000\300\217D\000@\034E\000\340\224D\000\300xD\000\200&D\000 \210D\000@\203D\000`\246D\000\300\235D\000\200oD\000\220\031E\000\370\216E\000\200\216D\000\000\274D\000\300PD\000\300`D\000 \231D\000\200MD\000\200\335C\000@9D\000\300\342D\000\300\200D\000\200\002E\000\340CE\000\000\225D\000\300\244D\000\000RD\000\000\354C\000\300\027D\000\000\327D\000@\006E\000\200\242D\000 \245D\000 \215D\000\000\226D\000\200\333D\000\240\301D\000\340\244D\000\240\214D\000\240\240D\000@(E\000\000\223D\000\300\310D\000\000\344D\000\000\353D\000\300,D\000@\234D\000\300=D\000@\006D\000\200\215D\000\200\277D\000P%E\000\340\262D\000\000\257D\000\200\233D\000\000\340D\000\200\tE\000\300AD\000\000\016D\000@AD\000\300YE\000\300\014D\000P$E\000\200\324D\000@\214D\000\300pD\000@BE\000\300\003E\000\020\016E\000\000PD\000@\200D\000\0004D\000@\234D\000\300-D\000\340\304D\000\240\205D\000\000\032D\000\300\217D\000\200\013D\000 \363D\000 \000E\000\300\224D\000\300ZE\000\300ZD\000\200\tE\000 \236D\000@\326D\000\200\315D\000\340\256D\000\300(D\000\000PD\000\000\364D\000`\264D\000\200\224D\000\300]D\000\200\006D\000\000`D\000\200\324D\000\020&E\000@\262D\0000TE\000@\234D\000 \211D\000@\203E\000\240\336D\000\340\236D\000\000\316C\000\300\221D\000\300\364D\000\300\206D\000\000\322D\000\300sD\000`\204D\000\200\344D\000@QD\000\240\026E\000\020$E\000 \305D\000`\206D\000`\244D\000\300\205D\000\200\022D\000\200\360C\000\200\370D\000`.E\000\000\226D\000\000\274D\000@ND\000\200\222D\000\000zD\000\000\215D\000\000/D\000@3E\000\000\013D\000\200,D\000\000\226D\000\300\177D\000\000HD\000\200|D\000\0009D\000\300=D\000\200hD\000\000HD\000`\370D\000\200mD\000\000\252D\000\300zD\000@zD\000@\224D\000@\331D\000\200hD\000\240\316D\000\200\311D\000\300\330D\000\000CD\000@ID\000\300\224D\000\000pD\000@\027D\000\000uD\000\000\275D\000\300uD\000@\370D\000\340\214D\000\240\315D\000`\245D\0000@E\000 \323E\000`\267D\000 \260D\000@\343D\000 \310D\000 \244D\000@\232D\000\000/D\000\300\200D\000\200\331D\000\200_D\000\020,E\000\200\246D\000\000RD\000\240\206D\000@\303D\000\240\227D\000 \332D\000@\214D\000`\255D\000`\254D\000@gD\000@4D\000\000*D\000\340\220D\000\300\321D\000\200AD\000@\'D\000`\350D\000\000\234D\000\240\243D\000@_D\000\000rD\000\340\260D\000\300\326D\000 \313D\000\240\216D\000\300\006D\000\020lE\000\000\032D\000\300\017E\000\340\220D\000\000\330C\000\000\303D\000\300hD\000P>E\000\3208E\000\260.E\000 \253D\000\000\240D\000\300<D\000\000LD\000@iD\000\000\327D\000\200mD\000\0009E\000\340\242D\000\200\tE\000@?D\000@\342D\000\300\301D\000`\312D\000 \255D\000\200gD\000\200\367C\000\300\007E\000\2608E\000\000fD\000\300\005D\000\340\261D\000\300\255D\000\300\352D\000@\237D\000P\003E\000\340\267D\000\200\rD\000@+D\000\000\005E\000\340\241D\000\000\302C\000\300\210D\000\000ZD\000\300\250D\000\200;D\000\300kD\000@\255D\0000\002E\000\340\212D\000\340YE\000\200\351D\000p\026E\000\200\312D\000\300HD\000\200\342D\000\240~E\000\300ZD\000\340\261D\000\000\351D\000@\234D\000\310\257E\000\300\224D\000\300xD\000\000rD\000\340\003E\000\260jE\000\000\266D\000\000*D\000@\234D\000\300\250D\000@zD\000\300\305D\000\200BD\000`\213E\000@0E\000\340\256D\000 \204D\000\000\310D\000\000\226D\000@\347D\000\200oD\000\300\224D\000\200\262D\000\300\031E\000 \231D\000\000\372D\000\200\324D\000\300(D\000@\201E\000\200\273D\000\200\216D\000@zD\000\300GD\000@\'D\000\000\002E\000@\034E\000@\333D\000\340\262D\000\000\226D\000\000gD\000\000$D\000\020AE\000 \003E\000\240\002E\000@\203D\000\000\226E\000\200\361D\000\200mD\000\000\007D\000\240-E\000\000%D\000`\233D\000\200\367C\000@\234D\000\2001D\000@\325D\000\240\200D\000\240\341D\000\240\346D\000\000\210D\000\300SD\000\300\276D\000\300\214D\000\340\023E\000\000/E\000\300\005D\000\000zD\000\000\210D\000\200\035D\000\000\214D\000@\272D\000 \266D\000\300\\E\000\300-D\000\240\252D\000\300\217D\000\000\265D\000\340\243D\000`\321D\000\000qD\000\000HD\000 \250D\000\200\202D\000\200\225D\000\340\373D\000 \217D\000`\221D\000\340\222E\000`\201D\000\300\236D\000@\306D\000\000\327D\000\000ED\000\000\215D\000P\000E\000\200\311D\000\000?D\000@\222D\000`\232D\000\340+E\000\200mD\000\300\344D\000\200;D\000\000\026E\000@ND\000@&E\000\240\200D\000\220\330E\000\000\333D\0000;E\000@\260D\000\000\226D\000@\265D\000\000HD\000\300LD\000\000\275D\000\300PD\000\200pD\000\300BD\000\000\257D\000\000RD\000@\034E\000\300yD\000\200\224D\000\200\331D\000 3E\000\240\226D\000@\270D\000\340\344D\000\000HD\000 \267D\000@jD\000 \365D\000P\002E\000\200:D\000\200BD\000\200%D\000\370\254E\000\240\303D\000\240\315D\000\200\273D\000\000qD\000\340\222E\000\240\356D\000\3602E\000\200\374D\000\200\242D\000@>D\000\340\255D\000\300ZE\000\300\250D\000@\206D\000\200;D\000\200\310D\000\300\244D\000 \nE\000\000\177E\000\300\005D\000\200;E\000\000\221D\000\240\253D\000\260\014E\000\200\233D\000\340\270D\000\340\250D\000 \337D\000\300\364D\000@\232D\000\000JD\000\300rD\000 \212D\000\000\323D\000 \244D\000\000zE\000\240\276D\000\200\201D\000\340IE\000`\216D\000\300\222D\000@AD\000\2202E\000\000\\D\000@\241E\000@\356D\000\240\304D\000\300\230D\000\300\217D\000\000\322D\000\350\200E\000\260eE\000@IE\000@\265D\000\360\207E\000\200@D\000 \256D\000\240\363D\000\320\tE\000\200\251D\000@PD\000\340\316D\000\200,D\000 \242D\000\200\266D\000\000:D\000\000nD\000\240\330D\000\200;D\000`\233D\000\300\332D\000@\"D\000\300+D\000\200\300D\000`\231D\000\000;C\000@\256D\0000\rE\000\2404E\000\240\243D\000@\027D\000\200\273D\000\200cD\000@#D\000 \203D\000@(D\000@ED\000`\250D\000\300SD\000@tD\000\300ZE\000@)D\000@\365D\000@OD\000@\177D\000\300ZD\000\000.D\000\200\356D\000\360\256E\000\000\nD\000\200;D\000 \231D\000\200YD\000 \240D\000\000\227D\000\000\026E\000\200\266D\000`CE\000\000\226D\000\000\210D\000\000*D\000\000\257D\000 2E\000`\031E\000@\324D\000\240\243D\000\000\372D\000p(E\000\200;E\000\260$E\000`\341D\000@\326D\000\300\242D\000\300\227D\000\2000D\000\000\375C\000\000&D\000\300\370D\000\240?E\000`\301D\000\000zD\000\200\231D\000\000\353D\000\000+D\000`\232D\000\300\212D\000\2003D\000\340\354D\000\030\242E\000\340\rE\000\000wD\000\340\223D\000`\001E\000`\314D\000\000\334D\000@\020E\000\300\006E\000\200\324D\000\0009D\000\300UD\000\300\337D\000\300dD\000\240\017E\000\300RD\000 \210D\000\340\005E\000\340\221D\000\000\226D\000@\203D\000\200\300C\000`\263D\000\000\026D\000@\260D\000\000HD\000\000\306B\000\000\277D\000\000\233D\000\200\"D\000\340\036E\000\300DD\000@\254D\000\240\202D\000`\314D\000\300\005D\000`\241D\000\200\223D\000\300qD\000 \227D\000\000\026E\000@\222D\000\220 E\000\300\275D\000\000\341D\000 \014E\000\200\'E\000 \313D\000\340\330D\000\000;D\000\200\377C\000 \335D\000@\234E\000\300JD\000\000tD\000\340\266D\000\240\267D\000@:D\000\200QD\000\020?E\000@tD\000\000\245D\000@2D\000\200\211D\000\300BD\000\240\274D\000\300\271D\000\300/E\000\200\274D\000@\261D\000 tE\000\000\263D\000`\201D\000\340\277D\000\220+E\000\000CE\000@/D\000\240\214D\000\370\032F\000\000\226D\000\340\300D\000\360(E\000@\253D\000\000cD\000\3006D\000 \237D\000\000 D\000\200\211D\000`\244D\000\240\220D\000\000eD\000@\000E\000\2004D\000@IE\000\200cD\000@\241D\000\200\324D\000\300sD\000@\315D\000@PD\000\300\241D\000\300\320D\000\200\211D\000\000VD\000\200\033D\000@\274D\000\200\246D\000\300uD\000\300\363E\000\200\216D\000@*D\000\200PD\000\000KD\000\000HD\000\240\337D\000\000zD\000\000hD\000\000lD\000\300\204D\000\000\017D\000@DE\000\020oE\000\000\246D\000\000\nD\000\000\322D\000\300\375D\000\000fD\000@\204E\000\200dD\000\240\245D\000\240\253D\000\300\236D\0000\'E\000\200dD\000@\252D\000\260\226E\000\200TD\000`\375D\000`\310D\000\000\310D\000@XD\000@\234D\000\300pD\000\000\325D\000@6D\000\000{D\000\300dD\000P7E\000\000<D\000`\256D\000\000\311D\000\000{D\000P\003E\000\200\242D\000\000(E\000@\234D\000\300\217D\000\300\233D\000\200\035D\000\340\257D\000@\237D\000\200cE\000\240\245D\000 \026E\000\240\217D\000\000vD\000@\204D\000\000\246D\000\200zD\000\200,D\000@\246D\000P\221E\000\300=D\000\200\300D\000\000\333D\000\000zD\000 \000E\000\300\232D\000\200YD\000\300\017D\000 \202D\000`\224D\000`\327D\000\200\320D\000 )E\000\300\031D\000@6D\000@$D\000\200_D\000p_E\000@\rE\000@rD\000\200\236D\000\340\221D\000@JD\000\240\013E\000\300\351D\000\340\346D\000\200~D\000\000\257D\000\340\356D\000\3007D\000\340\313D\000\200\273D\000\200;D\000\200\211D\000\200\"E\000@8D\000@\265D\000\240\260D\000\300OD\000\200uD\000\340\253D\000\200\270D\000\000/D\000\020\013E\000\000HD\000\200BD\000\000/D\000\200<D\000\200\"D\000\200\267D\000@\303D\000\000YD\000\300\234D\000\340\203D\000\300JD\000\000\252D\000\300\244D\0000\013E\000\200\223D\000\340\267D\0008\212E\000@zD\000@\230D\000\240\326D\000\000FD\000\240\326D\000\300aD\000\240\253D\000\300\212D\000@\rD\000\300FD\000\000HD\000\340\321D\000\200\035D\000\000^D\000 \200D\000\340\237D\000\240\330D\000\000\262D\000\240\240D\000@7D\000\200hD\000@5E\000\300\313D\000 \306D\000\000zD\000\2005D\000\200\337D\000`\244D\000\200\234D\000\260\232E\000\200;D\000 \345D\000\000HD\000\000\264D\000\240\245D\000pLE\000`\213D\000\200\242D\000\300\017D\000\000AD\000\340>E\000@\000E\000p\013E\000 \230D\000\200\037D\000\200\324D\000\020~E\000\200\354C\000\200\232D\000\000rD\000@\213D\000\200\332C\000\000\"D\000\340\200D\000\000\027E\000\340\227D\000\300\'D\000\200\013D\000\300sD\000\000\177D\000\200\300D\000\300\316D\000\000\270D\000\300\237D\000`\245D\000\300<D\000\340\303D\000\340\211D\000@gE\000\300xD\000\000\234D\000\300PD\000\000\226D\000`\213D\000\240\233D\000`0E\000@PD\000\300`D\000\300LD\000\360\256E\000`8E\000`\270E\000\300\356D\000\240\013E\000 \300D\000\000uD\000\200;E\000 \202D\000\300RD\000\0004E\000\300\022D\000\000\372D\0000[E\000\000zD\000\300pD\000\000\\D\000\300\215D\000\200\tD\000\000&D\000\240\200D\000\200\266D\000\300\301D\000 \306D\000@QD\000\000\272D\000`\253D\000\300\306D\000\320\211E\000\200\212D\0000\003E\000@\034E\000\340\253D\000@ID\000\340\222D\000@\277D\000`\253D\000\340\203D\000\240\347D\000 \365D\000`\312D\000\000\310D\000`\317D\000@\262D\000\240\310D\000\000\257D\000@\265D\000\200\224D\000\200\324D\000`\241D\000\340\231D\000\300PE\000\240\301D\000@zD\000\340\276D\000\200QD\000\000;D\000\000\000E\000\000\035D\000\200:D\000\000zD\000\340\240D\000\000zD\000 \304D\000\200\367C\000\300\006D\000@#D\000\000\265D\000`\263D\000\000HD\000\000hD\000\300\227D\000\200XD\000\200-D\000\240\306D\000 \237D\000 2E\000\200\223D\000\200\356C\000\200\222D\000\300KD\000@\361D\000@\231D\000\000\220D\000\240\302D\000\340\242D\000\200\240D\0000OE\000\000\375C\000\000\036D\000\200\300D\000@\003D\000\000\275D\000 \371D\000 \214D\000 \000E\000\2005D\000\300\232D\000\000\362C\000\300\306D\000\300\327D\000\200\273D\000\340\237D\000\260\001E\000\240\214E\000\360}E\000\000zD\000\340\277D\000\000UD\000\000cD\000\240\310D\000@\206D\000\000\376D\000\000)D\000\200\242D\000`\202D\000\200\206D\000\300\014D\000\000gD\000\300\301D\000\000\210D\000\000]D\000\340\270D\000\300\271D\000\320;E\000@\rE\000\200\260D\000\200\324D\000\200-D\000\000$D\000@\337D\000\000\231D\000\300\212D\000\3003E\000\200mE\000\240WE\000@!E\000`\275D\000P&E\000\000\203D\000pdE\000\220\003E\000\340\367D\000\200\274D\000\320\210E\000\240\261D\000\300hD\000\300\335D\000\340\371D\0000\024E\000\340]E\000 \210D\000 \023E\000\300pD\000 \311D\000\340\217D\000\000WD\000\340\010E\000@\302D\000`\221D\000@zD\000@|D\000\320\031E\000\200\324D\000\000HD\000\020=E\000\000\257D\000\200\254D\000@\003E\000\340\256D\000\2200E\000 \200D\000\000RD\000@zD\000 \200D\000\000SD\000@gD\000\300\320D\000\200KD\000 \211D\000\200\334D\000\300\332D\000\200\211D\000@\rD\000\300-E\000\000\227D\000@ZD\000\000\362D\000\200FD\000\300\264D\000`\321D\000 \200D\000\300ID\000\000\226D\000 \225D\000\340\235D\000 \302D\000`\233D\000\300,D\000\340\357D\000@\016D\000\240\245D\000\200\351D\000\000\202D\000\0003E\000\200\035D\000\000zD\000\260)E\000\200gD\000\000$D\000@{D\000 4E\000\220\005E\000@\241D\000@zD\000\340\257D\000\200\037E\000@?D\000 \034E\000 \214D\000@\"D\000\200cD\000\200\240D\000\300\365D\000\000\332D\000\030\202E\000\340\022E\000\300\306D\000\000\215D\000\300\332D\000 \033E\000 \216D\000@\331D\000\000\372D\000\2008D\000@PD\000\300\375D\000@\000E\000\300=D\000H\220E\000`\244D\000\240\300D\000@jD\000\200\211D\000\000\257D\000\300\005D\000\000\350D\000\300;D\000\200\270D\000\200\254D\000\000WD\000\300\247D\000@\307D\000\200\356C\000\000\251D\000 \200D\000\320\014E\000@\034E\000\340\267D\000\000\333C\000@\304D\000 \344D\000\300KE\000 \314D\000@\330D\000\000\316C\000\200\016D\000\200BD\000@:D\000`\352D\000\200UD\000@FD\000\200\001E\000\240\243D\000\200gD\000\200^D\000\200\211D\000\300\210D\000@\"D\000\200FD\000\200\263D\0000|E\000\300\203D\000@SD\000`\324D\000@SD\000@ND\000@\204D\000\000\223D\000\300ID\000\200\356C\000@\235D\000\240\276D\000\000\'D\000\200\'D\000\000\207D\000\200\"D\000@\206D\000\000\003D\000\000%D\000 \301D\000\240\201D\000@\347D\000\200;E\000\200gD\000\000PD\000@\226D\000\2006E\000\000\237D\000`\357D\000 \320D\000\000\336C\000\340\230D\000\300\200D\000\300\327D\000@\260D\000 \336D\000\300\214D\000\200\236D\000\000(E\000 \337D\000\000\226D\000\000\341C\000\300\244D\000\340\211D\000`\006E\000 \003E\000\300\230D\000\200\273D\000`\237D\000\300\217D\000`\247D\000@XE\000\300\017E\000\000\372D\000\200\206D\000\2005D\000\220\001E\000\000aD\000\200\"E\000\360\004E\000 \310D\000\360\007E\000\300\257D\000\340\204D\000@\334D\000\000\271D\000\2001D\000\340\220D\000\000AD\000\300\263D\000\360kE\000\300sD\000\200\211D\000\000aD\000@&D\000\300\223D\000\300,D\000\300SD\000\000\303D\000\220QE\000\000\257D\000\200\223D\000\000zE\000\340\014E\000\340\354D\000\240\244D\000@!D\000\340\305D\000 \201D\000\000\310D\000\300\305D\000\240\214D\000\000\322C\000\200\273D\000\340\227D\000\240\224D\000\240\217D\000@zD\000@\203D\000\300(D\000\000\'D\000\240\023E\000\300=D\000\000aD\000\300\032D\000\300PD\000\300GD\000`\206D\000@\305D\000\340\226D\000\300DD\000\240\337D\000@5D\000\200\324D\000\200\215D\000\300\250D\000\340\337D\000\240@E\000@MD\000\300\332D\000\300\217D\000@_D\000\300\206D\000\200\306D\000`\362D\000`\333D\000\300FD\000\300\205D\000\000QD\000\240\310D\000\000WD\000\240\225D\000\300JD\000\000\317D\000@nD\000@AD\000\200\355C\000`\250D\000\240\227D\000\000\246D\000\200\273D\000\000\345D\000\300\274D\000`\256D\000\000HD\000\000\214D\000\000HE\000\000<D\000\000|D\000\000\rD\000\200\211D\000@\203E\000\200\273D\000\300-E\000\000\240D\000\000\215D\000 \244D\000@\237D\000\200pD\000\000\372D\000\200\035D\000@]D\000\000\226D\000\240\020E\000\300\250D\000@.E\000`\377D\000\200\tE\000\000zD\000\200KD\000\310\221E\000\240:E\000\340\034E\000\000\035D\000\340%E\000@JD\000\240\273D\000 \244D\000\000\322D\000\000nD\000\200\355D\000@#D\000\020\006E\000@\234D\000\000}D\000@5D\000\000\310D\000`\206D\000`\206D\000 \221E\000 \224D\000\300\031E\000\240\226D\000p\002E\000\200^D\000\000\341C\000\000\345D\000\000\303D\000\200^D\0000\004E\000\200ED\000\000\372D\000`\365D\000\000\210E\000\300FD\000\300\342D\000\300\363D\000\340\362D\000\000HE\000\000\326D\000\340\255D\000\300\217D\000\000\330C\000\340\226D\000@JD\000\000UD\000\240=E\000\300MD\000 \225D\000\000\224D\000@$D\000 \215D\000\200FD\000\300\207D\000\000\310D\000`\321D\000\340\253D\000\200\242D\000\300,D\000\200TD\000\200\322D\000@lE\000@\211D\000\240\220D\000\200/E\000@XD\000\200\273D\000\2005D\000\000hD\000\340\017E\000\200\"D\000`\213D\000\300\332D\000\200\264D\000\200\301D\000\300\313D\000\000UE\000\200\225D\000@\034E\000\300\356D\000\200\300D\000\3001E\000@@D\000\300\241D\000\300\242D\000\320\024E\000\300\325D\000`\334D\000\200XD\000\300,D\000 \265D\000@zD\000\200;D\000\000\026E\000\000\276D\000`\253D\000\000\017D\000 \200D\000\240\244D\000\000<D\000 \271D\000\000\'D\000\300}D\000@pD\000\300FD\000\240HE\000\200WD\000@\234D\000@\335D\000@tD\000\200\tE\000 \263D\000 \031E\000\200\035E\000\000\272D\000\300\267D\000`\202D\000@\253D\000@\264D\000\000\207D\000\240\317D\000@1D\000@QD\000\220lE\000`\245D\000\000>D\000\000\324D\000`\265D\000@\rD\000@NE\000\240\243D\000`\216D\000`\217D\000\300AE\000\000HD\000\300ZE\000\200\340D\000\300iE\000\300>E\000\300\211D\000\200\250D\000\300ED\000@\177D\000\240\271D\000@\324D\000@\242D\000\300\031D\000\000\220D\000@\013E\000\200\210D\000@\025D\000\000uD\000`\362D\000\200\273D\000\000\206D\000\000%D\000@\234E\000@\235D\000\300\257D\000@\266D\000\200$D\000\200ED\000\300aD\000\300\267D\000\200uD\000\340\027E\000\200ND\000\240\300D\000\000zD\000\240\276D\000@\003D\000\000\220D\000\240\373D\000\240\214D\000@SD\000\300\351D\000\240\316D\000\000\330C\000 HE\000\240>E\000@\260D\000\000zD\000\300\021E\000\200\245D\000\200;D\000@\334D\000\200\355D\000pPE\000\200;D\000 \351D\000@\314D\000\000DD\000\200;D\000@\227D\000\200;D\000@bD\000\200\211D\000@\277D\000@\002E\000`\314D\000\200eD\000@UD\000\300\211D\000\300ZE\000\000zD\000\300\024E\000\200\367C\000\300\360D\0000<E\000\240\013E\000@\201D\000\000/D\000\300LD\000\3002E\000 \211D\000P4E\000\200\223D\000@zD\000@\013D\000\300KD\000@\211D\000\240\226D\000\240[E\000\2001D\000\200*D\000@\203D\000\200\026D\000 \214D\000\300(D\000\200\"D\000 \034E\000\240\207D\000\0004D\000\000\026E\000@<D\000\000 E\000 \"E\000\300(E\000\000aD\000\000\226D\000\200\'D\000\000ND\000@]E\000@qD\000\000\365C\000`\276D\000\240\214D\000\200:D\000\300QD\000\340\257D\000\200\351D\000@QD\000@zD\000\340\317D\000\300\320D\000\000\021E\000\000\tD\000\200\254D\000`\376D\000\340+E\000\300\264D\000 \240D\000\200\254D\000 \031E\000\300#D\000\200/D\000\300\177D\000P,E\000`\232D\000`\343D\000\240\234D\000\200mD\000\000fD\000\340_E\000\000\270D\000\300\336D\000\260\213E\000@\335D\000\000YD\000@zD\000\200\242D\000\000\201D\000@lD\000\300\326D\000\000VD\000pCE\000\000`D\000\000\"D\000\000\310D\000\000\006D\000\240\244D\000\200\022D\000\300\232D\000`\370D\000@\303D\000\000\216D\000\340\211D\000\000\004D\000\000\226D\000\300cD\000\300\342D\000\000eD\000\200\273D\000p&E\000\200\247D\000\340\022E\000\200\004D\000\000YD\000\200\204D\000\000\243D\000\200\260D\000\340\000E\000\000\210D\000@\227D\000 \377D\000\300kD\000@\370D\000\000\226D\000\300DD\000\300\035E\000\000/D\000\000WD\000\200\273D\000\000JD\000\0004D\000\300\267D\000\200\271D\000\200zD\000\240\347D\000 \004E\000\300\nE\000\000\372C\000\300ZE\000\200aD\000\200;E\000\300\234D\000\000CD\000 \267D\000`\222D\000\340\277D\000\200\235D\000\200\263D\000@.E\000`\227D\000\000\365D\000@cD\000\300\332D\000`\333D\000\240\221D\000 \211D\000\300\252D\000@0E\000\0002D\000\300\202D\000@xD\000\200\224D\000\000SD\000\000\334D\000\260\345E\000\300\212D\000\340\314D\000@\216D\000\200cD\000\320\025E\000 \200D\000@\006D\000\000\273D\000\300\261D\000\340\230D\000`\013E\000\340\020E\000 \242D\000 \311D\000\340&E\000\000zD\000\360\014E\000\300\020D\000\000\177D\000`8E\000\300pD\000\200\tD\000\200\'D\000\200\363D\000 \201D\000\000\\D\000@\234D\000\000\220D\000\340\022E\000@\003E\000\000\374D\000\300\'D\000\240\014E\000 \313D\000\000\234D\000\000\341C\000\000\221D\000\200WD\000\200\300D\000`\221D\000`\267D\000\200\276D\000\000\'D\000P\032E\000\000zD\000`\005E\000\200WD\000\200\336C\000\300rD\000\340\253D\000\200\030E\000\200\316D\000 \200D\000\240\014E\000\300\017E\000\300\244D\000\350\200E\000P\216E\000\300mD\000 \205E\000\200\273D\000\200,D\000\300\017D\000\000HD\000@!D\000 \231D\000\000\377C\000\000aE\000`\353D\000\300ED\000\340\256D\000\300AE\000`#E\000\200\226D\000\200\223D\000\000PD\000\000\355C\000\000sD\000@\316D\000@\034E\000@\221D\000`\375D\000\000JD\000\000/D\000\200\245D\000\340\253D\000\000\'D\000`\233D\000`\224D\000\240\214E\000\340\237D\000 \210D\000\240\346D\000\240\200D\000\000\220D\000`\343D\000\000\370C\000\000\372D\000\000cD\000\300\347D\000\300(D\000@9D\000\000\315D\000 \202D\000@zD\000\000PD\000\000\253D\000\370\216E\000`\233D\000\300\210D\000\300\225D\000`\013E\000@PD\000@\265D\000\200FD\000@2D\000`\245D\000\240\214D\000\200\212D\000`\252D\000\300\262D\000`\320D\000@!E\000\240\033E\000\200\271D\000\300\364D\000\200GD\000\200zD\000\200\211D\000\300\246D\000\240\232D\000\200hE\000`\221D\000@\351D\000 \016E\000\340\316D\000\300,D\000\200mE\000 \333D\000`\256D\000\300\336D\000@}D\000\200\022E\000\200\350D\000@\326D\000 \325D\000\000RE\000`\213D\000\300\213D\000\000hD\000\200\006D\000\000\030D\000\000\357C\000\000\320C\000 \233D\000@\033E\000@\234D\000@\273D\000\000\227D\000 \217D\000 \212D\000\340\272D\000\2001D\000\340\220D\000\2006D\000\000/D\000\340\310D\000\000\216D\000\300\320D\0000&E\000\300sD\000\000YD\000\340\\E\000 \245D\000\200}D\000\200wD\000\200\240D\000\000HD\000@\227D\000\200GD\000\000UD\000\300AE\000\260ME\000\200\332C\000\000UD\000\300ZD\000\000\177D\000\000\233D\000\000VD\000\200\252D\000\200mD\000\000\252D\000\240\331D\000\000%D\000\300uD\000\240\240D\000 \222D\000\0007E\000\200\266D\000\200\373C\000\000\261D\000@!D\000\200hE"
      }
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3402
          }
        }
        tensor_content: "UU\265@\253\252\252@\253\252\nA\000\000\200@\000\000\000A\253\252\nA\000\000\340@UU\225@\000\000\300@\253\252\252@\000\000\200@UU\265@\253\252\352@\000\000\200@\000\000\340@\253\252\352@\000\000\200@\000\000\300@\253\252\352@\253\252j@\000\000\240@UU\005A\253\252\312@UU\225@\253\252\252@UU\365@UU\005AUU\005A\253\252j@\253\252\312@\253\252\352@UU\365@\253\252\212@\253\252\252@\000\000\020AUU\005AUU\005AUU\365@\253\252\312@\253\252\nA\253\252\312@\253\252\252@\253\252\212@\000\000\300@UU\005AUU\265@UU\005A\253\252\352@UU\365@\000\000\200@UU\005A\000\000\340@\000\000\020A\253\252j@\000\000\020A\000\000\020A\000\000\200@\253\252\312@UU\005A\000\000\000A\253\252\352@\000\000\000A\253\252\312@UU\005AUU\265@\253\252\252@\253\252j@\253\252\312@\000\000\340@\000\000\200@\253\252j@\253\252\352@UU\365@\000\000\000A\253\252\212@UU\005AUU\325@\253\252\352@\000\000\200@\253\252\212@\000\000\200@UU\365@\253\252\352@\253\252\312@\000\000\200@\253\252\252@\000\000\300@\253\252\nA\000\000\200@\253\252\212@\253\252*@UU\005A\000\000\200@UU\365@\000\000\020A\253\252j@\000\000\020A\000\000\300@\253\252\212@UU\265@\253\252j@\000\000\000A\253\252\032A\000\000\200@\253\252\312@\253\252\032A\000\000\300@\000\000\200@UU\365@\253\252\252@UU\225@\000\000\020A\253\252\212@\000\000\200@\000\000\300@\253\252\312@\000\000\240@\000\000@@\253\252\212@\253\252\252@UU\005A\000\000\200@\253\252\312@\253\252\252@\000\000\000A\253\252\212@UU\025A\253\252\212@\000\000\200@UU\365@UU\365@\000\000\000AUU\005AUU\265@UU\365@\253\252\212@UU\225@\000\000\200@\253\252\212@\000\000\200@UU\005A\000\000\000A\253\252\312@\253\252j@\000\000\300@\253\252j@\253\252j@\000\000\300@\000\000\340@\000\000\300@\000\000\240@\000\000\340@UU\225@UU\005AUU\365@\253\252\032AUU\365@\000\000\340@UU\005A\253\252\352@UU\365@UU\005A\253\252\032A\253\252\212@\000\000\020AUU\005A\253\252\212@\000\000\200@\000\000\200@\000\000\000AUU\005AUU\265@\000\000\000A\000\000\300@\253\252\312@\253\252\212@UU\365@\000\000\200@UU\005A\000\000\000A\000\000\000AUU\225@\000\000\000A\000\000\240@\000\000\340@\253\252\nAUU\265@\253\252\312@\000\000\240@UU\365@\000\000\200@\253\252\212@\000\000\020A\000\000\240@\253\252\212@\253\252\032AUU\225@UU\005AUU\365@UU\365@UU\005A\253\252\312@UU\005A\253\252\212@\000\000\200@\253\252\212@UU\005AUU\365@\253\252\252@\000\000\200@UU\365@UU\005A\000\000\200@UU\005A\000\000\200@\000\000\020A\253\252\032A\253\252\032A\000\000\000AUU\005A\253\252\032A\253\252\212@\253\252\312@\000\000\300@\253\252\252@UU\005A\000\000\200@UU\005A\000\000\020A\253\252\352@\253\252\nAUU\005A\253\252\212@\000\000\200@\000\000\020A\253\252\032A\253\252\312@\000\000\200@\253\252j@\253\252\032AUU\025A\000\000\200@\000\000\020AUU\265@\253\252\212@\253\252\312@\253\252\252@\000\000\200@UU\265@\253\252\032A\253\252\212@UU\365@UU\365@UU\005A\000\000\200@UU\265@\253\252\352@UU\005A\000\000\200@\253\252\032A\253\252\352@\253\252\312@\253\252\212@\253\252\312@UU\005A\253\252\312@\253\252\212@UU\265@\253\252\032A\253\252\352@\253\252\352@\253\252\nA\000\000\200@\000\000\000A\253\252\nA\253\252\nA\000\000\200@\000\000\240@\253\252\312@UU\365@\253\252\252@\000\000\200@\253\252\352@\253\252j@\000\000\200@UU\365@\253\252\212@\000\000\200@UU\265@UU\365@\253\252\352@\000\000\000A\253\252\312@\000\000\240@\000\000\000AUU\365@\253\252j@\000\000\240@\253\252\nA\253\252\312@UU\005A\253\252\212@UU\365@\253\252\312@\000\000\200@\000\000\020A\253\252\212@\253\252\nA\000\000\000AUU\005AUU\005A\253\252\212@\253\252\352@UU\365@\253\252j@\253\252\032AUU\365@\253\252\352@UU\265@UU\005A\253\252j@\253\252\352@UU\265@\000\000\200@\000\000\200@\253\252\312@\000\000\200@\253\252\nAUU\005A\000\000\340@\000\000\020A\253\252\352@\253\252\312@\253\252\312@\253\252\032A\253\252*@\253\252\212@UU\365@\253\252j@\253\252\212@UU\005A\253\252\252@UU\225@\253\252j@\000\000\000A\000\000\200@\000\000\020AUU\005A\253\252\032AUU\005A\000\000\240@UU\265@\253\252\212@UU\265@\000\000\200@\253\252j@\253\252\312@\253\252\212@\000\000\020A\000\000\200@\000\000\200@\000\000\200@\253\252j@UU\365@\253\252\212@\000\000\000A\253\252j@\253\252j@\253\252\212@\000\000\200@\253\252\352@UU\005A\000\000\000AUU\365@\000\000\000AUU\365@UU\005A\000\000\340@UU\265@\000\000\340@\253\252\252@\000\000\200@UU\005A\000\000\200@\253\252j@UU\365@UU\005A\253\252\312@\000\000\240@\000\000\200@UU\265@\253\252\352@\253\252\212@\253\252\032A\000\000\000AUU\365@UU\365@\253\252\252@\000\000\340@\253\252j@\253\252\212@\253\252\212@\000\000\000A\000\000\240@\000\000\200@\000\000\200@\000\000\200@UU\005AUU\365@\253\252j@UU\225@\253\252\352@\000\000\200@\000\000\200@\253\252\nA\253\252\352@\253\252j@UU\365@UU\005A\253\252j@\253\252\032A\000\000\200@UU\225@\000\000\200@\253\252\212@UU\005A\000\000\300@\000\000\020A\253\252\312@\253\252\nAUU\365@\000\000\000AUU\005A\000\000\300@UU\005AUU\365@UU\005AUU\365@\253\252\252@UU\005AUU\365@\253\252\212@\253\252\312@\253\252\252@\253\252\212@UU\025A\253\252\212@\253\252j@\253\252\312@UU\265@UU\025A\000\000\200@UU\365@\253\252\nA\253\252\032A\253\252\352@UU\365@\000\000\200@UU\265@UU\365@UU\005A\253\252\352@UU\005AUU\265@\000\000\000A\253\252\312@UU\365@UU\365@\253\252\312@UU\325@\000\000\020AUU\365@\253\252j@UU\365@\253\252\252@\000\000\200@UU\365@\000\000\200@\253\252\312@\253\252\352@\253\252\252@\000\000\020AUU\005A\253\252j@\000\000\200@\253\252\312@\253\252\032AUU\005A\253\252\212@UU\005A\253\252\212@UU\005A\253\252\352@UU\265@UU\365@\000\000\300@UU\025AUU\005A\253\252\312@\000\000\200@UU\005A\253\252\032A\253\252\212@UU\005A\253\252\312@UU\005AUU\325@\253\252j@UU\005A\000\000\300@\253\252\nA\253\252j@\253\252\212@\253\252\312@UU\005AUU\365@UU\265@\000\000\300@\000\000\000A\253\252\352@UU\005A\000\000\020A\253\252\212@\253\252\212@UU\365@\253\252\212@UU\365@\000\000\200@\000\000\300@UU\365@UU\005A\253\252\212@\000\000\200@UU\005A\253\252\312@\253\252\312@UU\225@\253\252\212@UU\365@\000\000\200@\253\252\312@\000\000\240@UU\005A\253\252\312@\253\252j@UU\005AUU\365@UU\365@UU\365@UU\365@UU\265@UU\265@UU\005A\000\000\340@\253\252j@\000\000\200@\253\252\nAUU\265@\000\000\300@\000\000\200@\000\000\200@UU\365@\253\252\312@\000\000\340@\253\252\352@\000\000\200@\000\000\200@\253\252\212@\253\252\352@\253\252\312@\253\252\312@\253\252\212@\253\252\212@UU\365@\253\252\212@\253\252\352@\000\000\000A\000\000\000A\000\000\200@UU\005A\253\252j@UU\005A\000\000\000AUU\365@UU\005A\253\252\212@UU\365@\253\252\312@UU\005A\000\000\200@UU\325@UU\005A\253\252\252@\000\000@@\253\252\252@UU\365@\253\252*@\000\000\200@\000\000\300@\253\252\312@UU\365@\000\000\240@\000\000\200@\253\252\212@\000\000 A\000\000\200@UU\005AUU\005AUU\025A\000\000\020A\253\252\212@\000\000\200@\000\000\200@\253\252\352@\253\252\352@\253\252\212@\253\252\212@\253\252j@UU\325@UU\005A\000\000\200@UU\365@\000\000\000AUU\005A\000\000\020A\000\000\240@\253\252\nA\000\000\240@\253\252\212@\253\252j@\000\000\000AUU\005A\253\252\212@UU\005A\000\000\020A\253\252\252@UU\365@\253\252\nAUU\365@UU\325@UU\365@\000\000\020A\253\252j@\000\000\340@\253\252\nAUU\365@UU\005A\000\000\020A\253\252\212@\000\000\200@\000\000\200@\000\000\340@\253\252\252@\253\252\212@UU\005AUU\365@\000\000\000AUU\365@\000\000\300@\000\000\340@\000\000\240@\253\252\312@UU\365@\253\252\352@UU\005A\253\252\312@UU\365@\253\252\352@\000\000\200@\253\252\252@\253\252\312@\000\000\020A\000\000\200@UU\325@\000\000\200@UU\025A\000\000\240@\253\252\nAUU\365@\253\252\312@\253\252\352@\253\252j@\253\252\352@\253\252\032A\253\252\352@UU\005A\000\000\200@UU\365@\253\252\312@\253\252\312@UU\265@\253\252\212@\000\000\340@UU\365@\000\000\240@\000\000\300@\253\252\212@UU\005A\253\252\312@UU\005AUU\005A\253\252\nA\253\252\212@UU\365@UU\265@UU\225@\000\000\240@\253\252\nAUU\005A\000\000\200@UU\365@UU\005AUU\005AUU\005A\000\000\200@\253\252\032A\253\252\312@UU\365@\000\000\240@\000\000\000A\253\252\212@UU\005A\000\000\000AUU\005A\253\252\252@\000\000\020AUU\265@\253\252\212@\000\000\020A\000\000\340@\000\000\000A\000\000\200@UU\365@\253\252j@\000\000\020A\000\000\000AUU\265@\000\000\240@\253\252j@\000\000\200@\253\252\252@\000\000\200@\000\000\000A\253\252\212@\000\000\300@\000\000\200@\253\252\312@UU\365@\253\252j@\253\252\352@UU\005AUU\005AUU\265@\253\252\352@\253\252\212@UU\005AUU\005A\253\252\252@UU\005AUU\365@\000\000\020A\253\252\312@\000\000\020A\000\000\200@\253\252\nA\000\000\200@UU\005A\253\252\212@UU\005A\000\000\240@UU\365@UU\005A\000\000\340@\253\252\nA\000\000\200@UU\005A\253\252\312@\253\252\252@\253\252\312@\000\000\200@\000\000\200@UU\365@\253\252\352@\000\000\200@\253\252\252@UU\225@\253\252j@\253\252\252@\000\000\200@\000\000\020A\000\000\240@\253\252\352@\253\252\252@\000\000\200@UU\325@UU\365@\000\000\200@\000\000\340@UU\005A\000\000\200@\000\000\020AUU\005A\253\252\212@\253\252\312@UU\005A\253\252\252@\253\252\352@\253\252\212@\000\000\200@\000\000\200@\253\252\212@\253\252\212@\253\252\252@UU\005AUU\365@UU\005AUU\005AUU\365@\000\000\020A\000\000\020A\253\252\312@\000\000\340@\253\252\312@\000\000\200@\253\252j@\253\252\352@\253\252\312@\000\000\340@\253\252\nA\000\000\200@\253\252\212@\000\000\020A\000\000\200@UU\005AUU\365@\253\252\312@UU\005AUU\005AUU\265@\253\252\312@\253\252\212@UU\365@\253\252\312@\253\252j@UU\005A\253\252\212@\000\000\200@\253\252*@\000\000\200@UU\005AUU\225@UU\365@\253\252\352@\000\000\000A\000\000\000AUU\265@\000\000\020A\000\000\200@\253\252\312@UU\005A\000\000\240@UU\265@\000\000\020AUU\265@UU\005A\253\252j@\253\252j@\253\252\212@\000\000\000AUU\225@UU\365@\000\000\300@UU\005A\253\252\032A\253\252j@\253\252j@\253\252\212@\000\000\200@\253\252\312@UU\365@UU\365@\000\000\300@\000\000\200@\253\252\312@\253\252\212@UU\365@\253\252\352@UU\365@UU\005A\253\252\252@\253\252\352@\253\252\nA\000\000\200@UU\265@UU\005A\253\252\252@\253\252\212@\000\000\200@UU\365@\000\000\340@\253\252j@\253\252\nA\000\000\240@\000\000\240@\000\000\020AUU\365@UU\365@UU\265@\000\000\200@UU\005AUU\365@\000\000\200@\000\000\000A\000\000\200@UU\005A\253\252\312@UU\365@\000\000\000A\253\252\nAUU\365@\253\252\nA\253\252j@UU\005A\253\252\312@\253\252\352@\000\000\340@\253\252\252@\253\252\212@UU\005A\253\252\352@\253\252\352@UU\265@\253\252\212@\253\252\352@\253\252\212@\253\252\352@\000\000\200@UU\265@\253\252\352@\253\252\212@\000\000\340@\253\252\212@\253\252j@\253\252\312@UU\005A\253\252\032AUU\365@UU\005A\253\252\352@\253\252\352@UU\365@\000\000\300@UU\365@UU\325@UU\365@UU\365@\000\000\000AUU\005AUU\365@UU\005A\253\252\352@\253\252\212@\000\000\000AUU\265@UU\005A\000\000\300@UU\005AUU\005A\000\000\200@\000\000\300@\253\252\252@\000\000\000A\253\252\032A\253\252\252@UU\265@\253\252\352@\253\252\212@\253\252j@\253\252\312@\253\252\252@UU\265@\253\252\212@UU\005AUU\005AUU\005A\253\252\212@\000\000\200@UU\365@\000\000\200@\000\000\200@\253\252\212@\253\252\252@UU\005A\253\252\032A\253\252\212@\253\252*@\000\000\020AUU\365@\253\252\312@UU\005AUU\365@UU\005A\000\000\340@\000\000\000A\000\000\200@UU\365@\253\252\212@UU\225@UU\365@UU\005AUU\005AUU\005A\000\000\000A\253\252\212@\253\252\nA\253\252\252@\253\252\312@\000\000\000A\000\000\020AUU\225@\253\252\252@\000\000\240@UU\365@\253\252j@\000\000\340@\253\252\252@UU\365@\253\252\252@\000\000\020A\000\000\020AUU\005A\253\252\312@UU\265@\253\252\212@UU\005A\000\000\300@UU\005A\253\252\352@\253\252\312@UU\005AUU\005AUU\365@\000\000\200@\000\000\200@\000\000\200@UU\265@\000\000\200@UU\225@\000\000\200@UU\005AUU\365@\000\000\200@\000\000\340@UU\005A\253\252\032A\000\000\000A\253\252\212@\253\252\312@\000\000\200@UU\005AUU\005A\000\000\300@UU\365@UU\005AUU\005AUU\365@\000\000\200@\000\000\020AUU\265@UU\265@\000\000@@UU\005A\000\000\020AUU\005A\253\252j@\000\000\200@\000\000\000A\000\000\200@\000\000\200@\253\252\212@\253\252\252@UU\365@\000\000\200@UU\005A\000\000\240@UU\005A\253\252\252@\253\252\352@\253\252\212@\253\252\312@\000\000\020A\253\252\212@UU\365@UU\365@\253\252*@UU\265@UU\005AUU\365@UU\365@UU\005AUU\265@\000\000\200@\000\000\200@\000\000\200@\253\252\032A\000\000\240@\000\000\200@UU\005A\000\000\300@\000\000\200@\000\000\240@\253\252j@\253\252\212@\000\000\240@\253\252j@\253\252\252@UU\325@\253\252j@UU\005A\253\252\212@\000\000\000A\000\000\000A\253\252\212@\253\252\352@\253\252\032A\000\000\300@UU\005A\000\000\200@\253\252\212@\253\252j@UU\005A\253\252\252@\000\000\340@\253\252\252@UU\325@\253\252j@UU\005A\000\000\020AUU\365@UU\005A\000\000\200@\253\252\212@UU\005A\000\000\200@UU\005A\253\252\nA\253\252\252@\253\252\212@UU\005A\253\252\032A\253\252\212@\253\252\312@UU\365@UU\265@UU\005A\000\000\200@\000\000\200@\000\000\020A\000\000\000A\000\000\200@\000\000\200@\000\000\000A\253\252\312@\000\000\000A\253\252\032A\253\252\252@UU\005A\000\000\200@\000\000\200@\000\000\200@\000\000\200@\000\000\300@\253\252\352@\253\252\312@\253\252\nA\000\000\020A\253\252\212@\253\252\032A\000\000\020A\000\000\200@\253\252\212@UU\365@\253\252\252@UU\365@\000\000\300@\253\252\352@UU\005AUU\225@\000\000\200@\000\000\200@UU\365@UU\005A\000\000\200@\000\000\200@\253\252\352@UU\005A\253\252\352@\253\252\212@UU\265@\253\252\212@\000\000\340@UU\005AUU\325@UU\005A\000\000\200@\253\252j@\253\252j@\000\000\340@UU\365@\000\000\200@UU\005A\000\000\340@\000\000\300@UU\365@\253\252\312@\000\000\200@\253\252j@UU\005A\000\000\200@\000\000\200@\000\000\200@\253\252\312@\000\000\200@\253\252\252@\253\252\252@\253\252\252@UU\265@\000\000\200@UU\365@UU\325@\253\252\212@\000\000\000A\000\000\200@\000\000\020A\253\252\252@\253\252\nA\000\000\000AUU\365@\000\000\200@\253\252j@\000\000\020A\000\000\000A\253\252\352@UU\005A\253\252\nA\253\252\032A\253\252jj@\000\000\340@\000\000\000A\253\252\352@\000\000\240@UU\365@\253\252\352@\000\000\240@UU\005A\000\000\300@\253\252\212@UU\005A\253\252\312@UU\005AUU\005AUU\265@\000\000\000A\253\252\312@\253\252\312@\000\000\200@\253\252\nAUU\365@\000\000\200@UU\225@\000\000\200@\000\000\000A\253\252\312@\253\252\212@\000\000\200@\253\252\252@\000\000\300@\253\252\032AUU\225@\253\252\212@\253\252\312@UU\005A\253\252\312@\253\252\212@\000\000\340@\000\000\200@\253\252\212@\253\252j@\000\000\200@\253\252\nA\253\252\312@\253\252\352@\253\252\212@\000\000\300@\000\000\200@\000\000\020A\253\252\352@\000\000\200@\000\000\200@\000\000\200@\000\000\200@UU\225@\000\000\200@\253\252j@\000\000\020AUU\365@\000\000\000A\253\252\352@\253\252\352@\000\000\240@UU\265@\253\252\312@\000\000\300@\253\252\312@\253\252\252@\253\252j@UU\005A\000\000\000A\000\000\240@\253\252\252@\000\000\300@UU\005A\253\252\312@\000\000\200@UU\365@UU\365@\253\252\212@\000\000\200@\253\252\312@\000\000\000A\000\000\000AUU\005A\253\252\312@UU\365@\000\000\020AUU\005AUU\365@\000\000\200@UU\365@\000\000\200@\253\252\032AUU\265@\000\000\200@UU\005A\253\252j@\000\000\200@\000\000\000A\253\252\312@\253\252\212@\253\252\252@\000\000\200@\000\000\000A\253\252\252@\000\000\000A\253\252\312@\000\000\000A\000\000\200@UU\265@UU\005A\253\252\252@UU\265@UU\005A\253\252\212@\253\252\312@\000\000\000A\000\000\020A\253\252\312@\000\000\020A\253\252\252@UU\005A\000\000\000A\253\252\032AUU\265@UU\265@\253\252\212@\253\252\352@\000\000\200@UU\365@\253\252\312@\253\252\352@\000\000\200@\253\252\212@\253\252\nA\000\000\200@\000\000\340@\000\000\240@\253\252\212@\253\252\212@UU\365@UU\365@\000\000\340@UU\365@\000\000\200@\253\252\212@\253\252\212@\253\252\252@\000\000\200@UU\365@\253\252j@\253\252\312@\253\252\212@\253\252\352@\000\000\020A\253\252\nAUU\365@\253\252\312@UU\005A\000\000\200@\253\252\nA\253\252\352@\000\000\020AUU\005AUU\365@UU\265@\000\000\340@\253\252j@\253\252\032A\000\000\340@\253\252j@UU\265@\253\252j@UU\005AUU\005AUU\365@UU\325@\253\252j@\253\252\nA\000\000\200@UU\265@\000\000\200@UU\005A\253\252\212@\000\000\200@UU\005A\000\000\300@UU\265@\000\000\200@UU\265@\000\000\300@\253\252\212@\253\252\312@\000\000\300@\000\000\200@\000\000\000A\253\252\212@\253\252\352@\000\000\200@\253\252\212@\000\000\340@\253\252\212@\000\000\200@\000\000\020AUU\365@\253\252j@\253\252\212@\000\000\200@UU\005A\253\252\312@UU\005AUU\365@UU\225@\253\252\212@\253\252\352@\000\000\340@UU\365@\253\252\nAUU\225@\000\000\000A\253\252\212@UU\365@UU\005A\000\000\000AUU\265@\000\000\200@\253\252\212@\000\000\200@UU\005A\000\000\200@UU\365@\000\000\200@\000\000\200@UU\265@\253\252\312@UU\005A\253\252\212@UU\005A\253\252\nA\253\252\312@\000\000\300@UU\365@UU\005AUU\265@\253\252\032AUU\365@\000\000\240@\253\252\352@\253\252\212@\253\252\212@\000\000\200@\000\000\200@\253\252\212@\000\000\300@\253\252j@\000\000\020A\253\252\032A\000\000\000A\000\000\340@\000\000\200@\253\252\032A\000\000\200@\253\252\nA\000\000\000A\000\000\240@\253\252\312@UU\005A\000\000\000AUU\365@UU\225@\253\252\212@\253\252\312@\000\000\300@UU\365@UU\005A\000\000\200@\000\000\020A\000\000\200@\253\252\252@\000\000\020A\253\252\312@UU\025A\000\000\200@UU\265@UU\005AUU\265@\000\000\340@UU\005A\253\252\312@\000\000\020A\253\252\212@\000\000\340@\253\252\312@\000\000\200@UU\225@UU\365@UU\005AUU\365@\000\000\200@\000\000\240@\000\000\200@UU\325@UU\325@\253\252\312@\253\252\212@UU\005AUU\005AUU\005AUU\005A\000\000\200@UU\365@\000\000\200@\253\252\252@\253\252\352@\000\000\200@UU\005AUU\365@\253\252\312@\000\000\000AUU\005AUU\005A\253\252\352@UU\005A\000\000\200@\253\252\352@\253\252\252@UU\025A\253\252\032A\000\000\340@\253\252j@\000\000\200@\253\252\212@\253\252\312@\253\252\252@UU\005A\253\252\212@\253\252\212@UU\365@\000\000\340@\000\000\300@\253\252\212@\253\252j@UU\265@UU\265@\253\252j@\253\252\252@UU\365@\253\252\032AUU\365@\253\252\312@\000\000\200@\000\000\200@\253\252\212@\000\000\340@UU\265@\253\252\nA\253\252\252@UU\005A\000\000\340@\253\252\212@UU\005AUU\365@\000\000\240@\253\252\312@UU\005A\000\000\000AUU\005AUU\365@\253\252\212@\000\000\200@\253\252\352@UU\005A\000\000\000A\000\000\020A\253\252\312@\253\252\212@UU\005A\253\252\nA\253\252j@UU\005A\253\252\252@\253\252j@\000\000\340@\000\000\200@UU\005AUU\005A\253\252j@UU\365@\253\252\312@\000\000\000A\253\252*@\000\000\000A\253\252\312@UU\365@UU\265@\253\252\312@\000\000\300@UU\365@UU\365@UU\365@\000\000\000AUU\005A\000\000\000A\253\252\212@UU\325@UU\005A\253\252\212@\000\000\340@\253\252\212@\253\252\032A\253\252\212@UU\365@UU\005A\000\000\200@\000\000\340@\000\000\020AUU\005A\253\252\252@\000\000\000AUU\265@UU\365@\253\252j@UU\265@UU\225@\000\000\000AUU\265@\253\252\252@\253\252\352@\253\252\312@\253\252\352@UU\365@\000\000\300@\253\252\212@\000\000\200@\000\000\200@UU\365@\253\252\312@\253\252\312@UU\005A\253\252\212@UU\365@UU\005A\253\252\212@\253\252\312@\253\252j@UU\005AUU\365@\253\252\nA\000\000\200@\253\252\212@\253\252\252@\253\252\352@UU\265@\253\252\212@\253\252\212@\000\000\200@\000\000\200@\000\000\020A\000\000\020A\000\000\300@\000\000\200@\000\000\340@\253\252\212@UU\005A\253\252\212@\253\252\352@\000\000\300@\000\000\300@\000\000\020A\253\252\252@UU\365@\253\252\032AUU\225@\000\000\200@\253\252\212@\253\252\312@\000\000\200@\000\000\240@\000\000\200@\253\252\032A\000\000\200@UU\365@UU\365@\000\000\240@UU\005A\253\252\212@UU\005A\253\252\212@\253\252j@\253\252j@\253\252\312@UU\265@\253\252\212@UU\005AUU\005A\000\000\200@\253\252\212@\000\000\200@UU\225@\000\000\200@\253\252\032A\253\252\312@\000\000\020AUU\265@\253\252\032A\253\252\212@UU\265@UU\265@\000\000\020AUU\365@\253\252\352@\253\252\312@\000\000\000A\253\252\212@\253\252j@\000\000\000A\000\000\300@UU\005A\000\000\200@\253\252\352@UU\265@\000\000\340@UU\005A\253\252\312@UU\005A\000\000\020AUU\005A\000\000\200@\253\252\312@\000\000\300@\253\252\032A\253\252\212@\253\252\nA\253\252\032A\253\252\nA\253\252\252@UU\225@\253\252\032A\253\252\212@UU\265@\000\000\200@\000\000\200@\253\252\312@\253\252\212@\000\000\240@\000\000\200@UU\365@\000\000\020A\253\252\252@UU\005A\253\252\032A\253\252\352@\253\252\252@UU\005A\000\000\240@\253\252\312@\253\252\032AUU\005A\000\000\200@UU\005A\253\252j@\253\252\312@\000\000\200@\253\252\212@UU\005A\253\252\212@\253\252\nA\000\000\200@\000\000\200@\253\252\212@UU\365@UU\005A\000\000\020A\000\000\200@\000\000\200@\253\252\032A\000\000\240@\253\252j@UU\365@UU\005A\000\000\300@UU\005A\000\000\200@UU\005A\000\000\240@\000\000\000AUU\005A\000\000\020A\253\252j@\253\252j@UU\265@UU\265@\000\000\300@UU\365@\253\252\212@UU\225@\000\000\200@\253\252\212@\000\000\000A\253\252\312@UU\265@\000\000\200@\253\252j@\253\252\312@UU\365@\253\252\312@UU\005A\000\000\240@\253\252j@\000\000\020A\253\252\212@\253\252\212@UU\365@UU\265@UU\005A\000\000\240@UU\005A\253\252\032A\000\000\240@UU\025A\253\252\032AUU\365@\253\252\312@\253\252\352@\253\252\312@\253\252\212@\000\000\340@\253\252j@\000\000\200@UU\365@\000\000\200@\253\252\312@\000\000\020A\253\252\312@UU\365@\000\000\200@\253\252\252@\000\000\200@\253\252\212@\000\000\300@UU\005AUU\365@UU\365@\253\252\352@UU\365@\253\252j@UU\325@\000\000\200@\253\252\312@\000\000\000A\253\252\312@\000\000\000AUU\005AUU\265@\253\252j@\253\252\352@\253\252j@\000\000\020A\253\252\312@\000\000\020AUU\365@\000\000\000A\000\000\200@\253\252j@UU\005AUU\265@UU\365@UU\265@\253\252\352@UU\365@\253\252*@UU\365@UU\005A\000\000\020A\000\000\020AUU\265@UU\005AUU\265@\000\000\200@\000\000\200@\253\252\312@\253\252j@UU\005A\000\000\240@\253\252j@UU\325@\000\000\340@\253\252\352@\253\252j@\253\252\032A\253\252\nAUU\005AUU\005AUU\005AUU\005A\000\000\340@UU\265@UU\025A\000\000\000AUU\265@UU\005A\000\000\240@\253\252\312@\253\252j@\000\000\200@\000\000\340@\253\252\312@\253\252\032A\253\252\212@UU\005AUU\225@\000\000\020A\253\252\032A\000\000\000A\253\252\352@UU\005A\253\252\212@UU\005A\000\000\200@\253\252j@\000\000\200@UU\265@\000\000\000A\253\252\312@\253\252\312@UU\365@\253\252\312@UU\365@\253\252\212@\000\000\200@\253\252\212@\000\000\200@\253\252\312@\000\000\200@UU\005A\253\252\312@UU\005A\253\252\212@UU\005A\253\252\312@\253\252\352@UU\005A\253\252\312@\253\252\252@\253\252\212@UU\365@UU\005AUU\265@\253\252\312@UU\325@UU\365@\253\252\212@\253\252\032A\253\252\252@UU\225@UU\005A\000\000\200@\253\252\nA\253\252\212@UU\005A\253\252\312@\000\000\000A\253\252\352@UU\005A\253\252\212@\253\252\252@\000\000\020A\253\252\312@\253\252\252@\000\000\240@\253\252\212@UU\265@\253\252\252@\253\252\352@\253\252\212@UU\005A\253\252\252@\253\252\nA\253\252\nA\000\000\000A\253\252\252@UU\265@UU\005AUU\005AUU\265@\000\000\200@UU\025A\000\000\240@\000\000\200@\000\000\200@\000\000\200@\253\252\nAUU\005A\000\000\300@\253\252\312@\253\252\252@\000\000\300@UU\005AUU\005AUU\365@\000\000\340@\000\000\340@\253\252\212@\000\000\300@\000\000\340@UU\365@\000\000\200@UU\265@\253\252j@\000\000\200@\000\000\340@UU\265@\000\000\020AUU\005AUU\265@UU\365@\000\000\240@UU\265@\000\000\240@UU\005A\000\000\200@\000\000\020A\000\000\200@UU\005AUU\005A\253\252\312@\000\000\340@UU\265@UU\005A\253\252j@UU\365@\253\252\312@UU\225@\253\252j@\253\252j@\000\000\200@\000\000\200@UU\005AUU\005AUU\365@\000\000\200@\253\252\312@UU\005AUU\005A\253\252\nA\253\252\212@UU\025A\000\000\240@\253\252\312@\253\252\212@\000\000\200@UU\365@UU\005A\000\000\200@\253\252\nAUU\365@\253\252\212@UU\005A\253\252\212@\000\000\020AUU\365@UU\365@UU\005A\000\000\240@\253\252\212@UU\005A\253\252\212@\253\252\312@\253\252\nAUU\225@\000\000\200@\253\252\212@\000\000\340@\253\252j@\253\252\312@\253\252\252@\253\252\312@UU\365@\253\252\352@UU\365@UU\005A\253\252\212@UU\365@\000\000\020A\253\252j@\000\000\200@\253\252\212@UU\005A\000\000\020AUU\365@\000\000\200@\000\000\200@UU\225@\000\000\020A\253\252\352@\000\000\240@\253\252*@\000\000\200@\000\000 A\000\000\300@UU\365@UU\325@UU\365@\000\000\200@UU\365@UU\365@\000\000\200@UU\005AUU\365@\253\252\212@\253\252j@\253\252\212@\000\000\000A\000\000\200@UU\365@\000\000\200@\253\252\nAUU\365@UU\365@UU\365@UU\005AUU\365@UU\005A\253\252\252@\253\252\352@UU\005AUU\005AUU\005A\000\000\200@UU\265@\000\000\020AUU\005A\253\252\312@\253\252\352@\000\000\020A\000\000\200@\000\000\020A\253\252\252@UU\005A\000\000\340@\000\000\300@\000\000\020A\000\000\340@UU\325@\000\000\200@UU\365@\000\000\000A\253\252\212@\253\252\352@UU\225@\000\000\200@UU\005AUU\265@\000\000\340@\253\252\212@\000\000\340@\000\000\000A\000\000\240@UU\005A\253\252\312@UU\365@\253\252\212@UU\005A\253\252j@UU\005A\253\252\252@\253\252\352@UU\365@\253\252\312@UU\005A\000\000\020A\253\252\212@\000\000\000A\000\000\020A\253\252\352@\000\000\200@\000\000\020AUU\265@\000\000\200@\253\252\212@UU\365@\253\252j@UU\225@UU\265@\253\252\312@UU\005A\253\252\212@\253\252\252@\000\000\200@\253\252\252@UU\005AUU\005A\253\252\352@\000\000\000A\000\000\200@\253\252\312@\253\252\032A\253\252j@\000\000\200@UU\265@\000\000\240@\000\000\020AUU\005A\000\000\340@UU\005A\000\000\200@\253\252\212@UU\005AUU\365@\253\252\352@\000\000\020A\000\000\240@\253\252*@\253\252\212@UU\005A\253\252\312@\253\252\312@\000\000\200@\000\000\200@UU\365@\253\252j@UU\325@\000\000\200@UU\005A\000\000\000A\000\000\200@UU\005AUU\005AUU\005A\253\252\212@\253\252j@\253\252\212@\000\000\240@UU\265@\253\252j@\253\252\312@\000\000\200@UU\365@UU\365@\253\252\212@UU\005A\253\252\312@\253\252\352@\253\252\032AUU\265@\253\252j@\000\000\200@\000\000\240@UU\005AUU\005A\253\252\312@UU\365@\253\252j@\253\252\312@\000\000\000AUU\005AUU\005A\000\000\000A\253\252\352@UU\365@\253\252\032A\253\252\352@\000\000\200@\000\000\000AUU\005AUU\005A\000\000\200@\253\252\212@UU\005AUU\265@\000\000\020A\253\252\352@UU\005A\000\000\200@\253\252\032A\253\252\212@\000\000\200@UU\005AUU\005A\253\252\312@\253\252\212@\253\252\312@\253\252j@\253\252\212@\253\252\312@\253\252\212@UU\365@UU\005A\000\000\020A\000\000\340@\000\000\200@\000\000\200@UU\325@UU\325@\253\252\352@\253\252\352@\253\252\212@\000\000\200@\253\252\212@UU\265@\000\000\020A\253\252j@UU\365@\000\000\200@\253\252j@UU\005A\000\000\020AUU\365@UU\005A\253\252\312@\000\000\200@UU\325@UU\005A\000\000\200@\000\000\340@\000\000\340@\000\000\300@\253\252j@\000\000\200@\000\000\200@UU\005AUU\365@\000\000\020A\000\000\200@\253\252\252@\253\252\212@\253\252j@UU\365@UU\005A\000\000\340@UU\365@UU\365@\000\000\340@UU\365@\000\000\200@UU\365@\000\000\340@UU\265@\253\252\352@\000\000\200@\253\252\312@\000\000\200@\253\252\212@\253\252\312@UU\005A\253\252\312@\000\000\200@\000\000\200@\253\252\352@UU\005A\253\252\nA\000\000\240@\253\252\312@UU\225@\253\252\312@UU\365@\253\252\nA\253\252j@\253\252j@UU\225@\253\252\212@\000\000\240@\000\000\200@\000\000\200@\253\252\212@\000\000\200@\253\252\252@\000\000\340@UU\365@\000\000\200@\253\252\312@UU\225@\253\252\352@UU\265@UU\365@\253\252\312@\253\252\212@UU\365@\253\252\nA\000\000\200@UU\265@\000\000\340@\253\252\312@\253\252\252@\253\252j@\253\252\352@\253\252\212@\253\252\212@\000\000\200@\000\000\240@\000\000\300@\253\252\312@UU\005AUU\265@\000\000\340@\253\252jj@\000\000\000A\253\252\312@\000\000\200@\000\000\020A\000\000\000AUU\005AUU\225@UU\005AUU\005AUU\365@\253\252\212@\253\252\212@\253\252\312@\000\000\000A\000\000\200@\000\000\200@\253\252j@\000\000\200@\253\252\212@\253\252j@\253\252\nA\253\252\352@UU\325@\253\252\312@\253\252\032AUU\365@\253\252\032AUU\025A\000\000\240@\000\000\300@UU\265@UU\365@\253\252j@\000\000\200@\000\000\240@UU\225@\000\000\200@\253\252\212@UU\005A\000\000\000A\000\000\000A\253\252\312@UU\005A\253\252\352@UU\005A\000\000\200@\253\252\312@\253\252\352@UU\325@\253\252\212@\253\252\312@\253\252\212@\253\252\nA\253\252\312@\000\000\340@\253\252\352@\000\000\200@\000\000\200@\253\252\032A\000\000\000A\253\252\312@\000\000\000AUU\005A\000\000\000AUU\005A\253\252\312@UU\005A\253\252\312@\000\000\200@\253\252\212@\253\252\352@\253\252\032AUU\365@\253\252j@\000\000\340@UU\265@UU\365@\253\252\252@UU\265@\253\252\352@\253\252\212@UU\265@\253\252\nAUU\265@\000\000\020AUU\005AUU\365@\253\252\212@\253\252\nA\000\000\200@\253\252\312@UU\265@UU\005A\000\000\240@\000\000\240@\000\000\340@\253\252\352@\253\252\312@\253\252\352@\253\252\312@UU\365@UU\005A\000\000\240@\000\000\200@\253\252\352@UU\265@\253\252\212@\000\000\300@\000\000\340@\253\252j@\000\000\000AUU\365@UU\005AUU\265@\253\252\312@\000\000\200@\000\000\340@UU\005A\253\252j@\000\000\340@\000\000\020A\253\252\nA\253\252\212@\000\000@@\000\000\200@UU\365@\253\252j@UU\005A\000\000\200@\253\252\212@UU\005A\000\000\200@\253\252\212@\253\252\352@UU\005A\253\252jj@\000\000\200@UU\365@UU\365@\000\000\020A\253\252\352@\000\000\240@UU\005A\000\000\020AUU\005AUU\365@UU\265@\253\252\252@\000\000\000A\000\000\200@\253\252\312@UU\325@\253\252\312@UU\005A\253\252\032A\253\252\212@\000\000\240@UU\005A\253\252\352@\253\252\032A\253\252\nA\253\252\212@\253\252\352@UU\365@UU\365@\253\252\312@\253\252\312@\253\252j@UU\365@\253\252\312@\253\252j@\253\252\312@\000\000\200@\253\252\312@\000\000\020AUU\265@UU\225@UU\005A\253\252\312@\253\252\032A\253\252\212@UU\005AUU\025AUU\365@\253\252\252@UU\005AUU\265@\253\252\212@UU\005A\253\252j@\000\000\200@UU\005A\253\252j@UU\325@\253\252\212@UU\265@\253\252j@UU\005AUU\005A\253\252\032A\253\252\212@\253\252\212@\000\000\200@UU\005AUU\005A\253\252j@UU\225@UU\005AUU\005A\000\000\000A\000\000\200@\000\000\200@UU\365@UU\005AUU\265@UU\365@UU\265@UU\365@\000\000\200@UU\025AUU\365@\253\252\212@\000\000\020A\253\252j@\000\000\200@UU\225@\000\000\200@\000\000\240@UU\005A\000\000\240@\253\252\212@UU\265@\000\000\300@UU\225@\253\252j@\253\252\352@\000\000\020A\000\000\000A\253\252\312@\000\000\200@UU\225@UU\365@\000\000\200@\253\252j@UU\365@\253\252\312@UU\325@\000\000\200@\253\252\352@\000\000\340@UU\005A\000\000\200@\000\000\000AUU\225@UU\005AUU\005A\253\252\312@\000\000\000AUU\365@\000\000\300@\000\000\240@\000\000\340@UU\025AUU\005A\253\252\212@\253\252\312@\253\252\312@UU\365@\000\000\200@UU\005A\000\000\200@UU\005A\000\000\200@\253\252\032A\253\252j@\253\252j@UU\005A\253\252\252@\000\000\200@\000\000 AUU\005AUU\005A\000\000\300@\000\000\340@\253\252\252@\253\252\352@\000\000\200@UU\265@\253\252\312@UU\005A\253\252\352@\000\000\340@UU\325@\000\000\240@UU\005A\253\252\312@UU\365@\000\000\200@UU\005A\253\252\352@\000\000\020AUU\005A\253\252\032AUU\005AUU\365@UU\005A\000\000\200@\000\000\200@\000\000\200@\253\252\212@UU\365@UU\225@UU\005A\253\252\252@\000\000\020A\253\252j@UU\365@\253\252\032A\253\252\352@UU\005A\253\252\252@\000\000\300@UU\365@\000\000\200@\253\252\312@UU\005A\253\252\nA\253\252\212@\253\252\nA\000\000\020A\253\252\252@\253\252\252@\253\252j@\253\252\312@\253\252\312@\253\252\312@\253\252\352@\253\252j@\253\252\032AUU\365@UU\225@UU\365@UU\325@\253\252j@\253\252\352@\253\252\nj@\000\000\000AUU\005A\253\252\352@UU\225@\253\252\312@\253\252\312@UU\325@\253\252\312@UU\005A\000\000\000A\253\252\352@\253\252\212@UU\365@UU\265@\253\252\312@\253\252\352@UU\005AUU\365@UU\005AUU\325@\253\252\312@\000\000\300@UU\225@\253\252\352@UU\005A\253\252\312@UU\325@UU\365@\253\252j@\000\000\340@\000\000\300@\000\000\000A\000\000\020AUU\005A\000\000\300@\000\000\340@\253\252\212@UU\365@\000\000\340@\253\252\352@\000\000\200@\253\252\312@\253\252\352@\000\000\200@UU\325@UU\005A\253\252\212@\253\252\nAUU\365@\253\252\312@\253\252\212@\253\252j@\000\000\200@\253\252\352@\253\252\212@\253\252j@\000\000\020A\000\000\000AUU\005A\000\000\200@UU\225@UU\265@\253\252\212@\253\252\352@\253\252\312@\000\000\200@\000\000\200@\253\252\352@\000\000\340@\253\252\252@UU\365@\253\252j@UU\005A\253\252\212@\000\000\200@\253\252\212@\253\252\352@\253\252\252@\000\000\240@UU\005A\253\252\352@UU\005A\000\000\300@UU\265@\253\252\312@\253\252j@\253\252\312@UU\365@\000\000\200@\253\252\212@\000\000\300@UU\025AUU\005AUU\265@\253\252j@UU\005A\000\000\020AUU\005A\000\000\340@\000\000\200@\253\252j@\000\000\240@\000\000\200@UU\365@UU\005A\253\252\312@UU\005AUU\325@UU\365@\253\252\352@UU\005A\253\252\312@UU\225@\253\252j@UU\365@\000\000\200@UU\265@\253\252\252@UU\005A\253\252\252@\000\000\200@UU\005A\253\252\312@\253\252\212@\000\000\200@UU\005A\253\252\212@UU\005A\253\252\352@\253\252\212@UU\005A\000\000\240@\253\252\252@\253\252\312@\253\252\312@\253\252\312@\253\252\352@\253\252\252@\253\252\312@UU\365@\253\252\352@UU\325@UU\005A\000\000\000A\000\000\200@\253\252\032A\000\000\000A\253\252j@UU\365@UU\265@UU\265@\000\000\200@\253\252j@\000\000\000A\253\252j@\253\252\212@UU\005A\253\252\212@\000\000\200@UU\365@\253\252\312@\000\000\340@UU\005AUU\365@UU\005A\253\252\352@UU\365@\000\000\200@UU\365@\000\000\200@\000\000\200@UU\225@\000\000\200@UU\225@UU\365@\253\252\212@UU\005AUU\325@\000\000\200@\000\000\200@\000\000\200@UU\365@UU\005A\000\000\200@\253\252\252@\000\000\000A\253\252\252@\000\000\240@UU\225@\253\252\352@\253\252\212@UU\005A\000\000\020AUU\365@\253\252\032AUU\325@\000\000\200@\253\252\352@\253\252j@\000\000\020A\000\000\200@UU\325@UU\265@\253\252\212@\253\252\352@\253\252\352@\253\252j@\253\252\352@\253\252\352@UU\365@UU\005AUU\265@\253\252\nA\253\252\212@UU\005A\000\000\200@UU\005AUU\365@UU\005AUU\225@\253\252j@\000\000\200@\000\000\020A\000\000\000A\000\000\300@\000\000\200@\000\000\300@UU\225@\253\252\352@\000\000\200@\253\252j@\253\252\252@\253\252\312@\000\000\000A\253\252\nA\000\000\200@UU\005AUU\265@UU\265@\253\252j@\000\000\300@UU\005A\000\000\200@\000\000\020A\253\252\212@\253\252\212@\000\000\000A\253\252\352@\253\252\312@UU\265@\000\000\000A\000\000\200@\000\000\200@\000\000\300@UU\365@\253\252\352@UU\325@\000\000\240@UU\365@\000\000\020AUU\365@\000\000\000A\000\000\200@\253\252\nA\253\252\252@UU\005AUU\365@\253\252\312@\253\252\212@\253\252j@\000\000\020A\253\252\312@\000\000\340@\000\000\200@\253\252\352@\253\252\252@UU\005A\253\252\212@\253\252\312@\000\000\200@UU\005A\000\000\300@\253\252\032AUU\005A\000\000\200@\253\252\212@\000\000\340@\253\252\312@UU\365@\000\000\200@\253\252\312@\000\000\200@UU\005A\000\000\020A\000\000\020A\253\252\212@UU\005A\253\252\312@\000\000\200@\253\252\nAUU\365@UU\025A\000\000\200@\253\252\212@\253\252\212@\000\000\240@UU\265@UU\005A\253\252\212@\253\252\212@\000\000\200@UU\365@UU\005A\253\252j@\000\000\200@\253\252\nA\253\252\352@\253\252\352@\000\000\200@\253\252\212@UU\365@\253\252\352@\000\000\200@UU\265@\253\252\252@\000\000\200@\253\252\352@\253\252\032A\253\252\032A\253\252\312@\253\252\nA\253\252\352@\253\252\nA\253\252\312@\253\252\212@UU\005A\000\000\300@\253\252\212@UU\265@\253\252\nAUU\325@\253\252\212@\253\252\252@UU\005AUU\265@\000\000\200@\000\000\200@\000\000\200@\000\000\300@\253\252\312@\000\000\240@\253\252j@\253\252\312@UU\225@\253\252\nA\253\252\212@UU\365@\000\000\020A\000\000\020A\000\000\200@\253\252\212@\000\000\200@\253\252\nA\000\000\000A\253\252\352@\253\252\nA\000\000\200@UU\365@\000\000\300@\253\252\032A\253\252\212@\000\000\340@\253\252\212@\000\000\200@\253\252\352@UU\005A\253\252\352@\000\000\240@\000\000\300@\253\252\nAUU\005AUU\005AUU\365@\000\000\200@\000\000\340@\000\000\300@UU\005A\253\252\252@\000\000\200@\253\252\212@\000\000\300@\253\252j@UU\365@\253\252\212@\253\252\352@\253\252\032A"
      }
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3402
          }
        }
        tensor_content: "K\r\210DK\r\210D\2523CDK\r\210D2\017bDp\204\033D\031\257ZEp\204\033D\2242\204DK\r\210D\376\252\236Dp\204\033Dn-\217D*\2061E\031\257ZEn-\217D\376\252\236D*\2061E\2523CD\363P\200D2\017bD\031\257ZEK\r\210Dp\204\033DK\r\210DK\r\210D\031\257ZEs\202\210D\363P\200DK\r\210Dn-\217DK\r\210D\376\252\236DK\r\210D2\017bDs\202\210D2\017bDs\202\210DK\r\210D\2523CDK\r\210DK\r\210D\376\252\236D*\2061E\031\257ZE\034\370kD\2242\204DK\r\210D2\017bDUXtD\031\257ZEp\204\033D\2242\204D\363P\200D2\017bD2\017bD*\2061Ep\204\033D2\017bD\031\257ZE\031\257ZE\031\257ZE\034\370kD2\017bDK\r\210D*\2061E\363P\200DK\r\210Dp\204\033D*\2061E\034\370kD\2523CDs\202\210D\031\257ZE\376\252\236D\031\257ZE\034\370kDK\r\210D*\2061E\034\370kD\376\252\236Dp\204\033DK\r\210Dp\204\033D*\2061EK\r\210D*\2061E\2242\204D\376\252\236D\376\252\236D\363P\200D,7\200DK\r\210DK\r\210D2\017bD\363P\200Dp\204\033D*\2061E\376\252\236DK\r\210D\363P\200D\031\257ZEK\r\210D*\2061EK\r\210D2\017bD\2242\204D*\2061E\031\257ZEK\r\210Dp\204\033D2\017bD\376\252\236D\034\370kD\2242\204D\363P\200D2\017bDp\204\033D\376\252\236DK\r\210Ds\202\210D*\2061EK\r\210DK\r\210D2\017bD\376\252\236DK\r\210D*\2061E*\2061E2\017bDp\204\033D\031\257ZE\031\257ZEp\204\033D2\017bD\376\252\236Dp\204\033D*\2061E\376\252\236D\376\252\236D\031\257ZEp\204\033Dp\204\033D\034\370kD*\2061E\363P\200Dp\204\033D\363P\200D\031\257ZE*\2061E*\2061Ep\204\033D*\2061E\031\257ZE2\017bD2\017bDK\r\210Dp\204\033D\031\257ZEn-\217Dp\204\033D\031\257ZE2\017bD\376\252\236D\2242\204D2\017bD\376\252\236D*\2061E*\2061E2\017bD\031\257ZEK\r\210D\031\257ZE\2242\204Dp\204\033D\376\252\236Ds\202\210D*\2061Es\202\210D2\017bDp\204\033Dp\204\033D\031\257ZE*\2061Ep\204\033D\2523CD*\2061E\034\370kD\034\370kDK\r\210D*\2061E\376\252\236D\2242\204Dp\204\033D\376\252\236D2\017bD\034\370kD2\017bDp\204\033DK\r\210D\031\257ZE\376\252\236D\031\257ZE\376\252\236D*\2061E\376\252\236Ds\202\210Dp\204\033DK\r\210D*\2061EK\r\210D\031\257ZE*\2061E2\017bDp\204\033D2\017bDK\r\210D2\017bD\031\257ZE\031\257ZE2\017bD\376\252\236Dp\204\033D\2242\204DK\r\210D\031\257ZE*\2061Es\202\210D2\017bDn-\217D2\017bD\2242\204D\376\252\236D\376\252\236D\2242\204D2\017bDp\204\033DUXtD2\017bDK\r\210D\2523CD*\2061E2\017bDK\r\210D\376\252\236D\376\252\236DK\r\210D*\2061Ep\204\033DK\r\210D*\2061Es\202\210D2\017bD\2242\204D*\2061E\034\370kD\2523CD\031\257ZE\376\252\236D2\017bDn-\217DUXtD\376\252\236Dp\204\033D\n|\211D\363P\200D\376\252\236DK\r\210DK\r\210Dn-\217Dn-\217D\2242\204DUXtD\031\257ZE\2242\204D2\017bD*\2061Ep\204\033D\376\252\236D2\017bDK\r\210D*\2061En-\217D2\017bD*\2061Ep\204\033Dp\204\033D\376\252\236D\034\370kDp\204\033Dn-\217D\031\257ZEp\204\033D\034\370kD\031\257ZE2\017bD2\017bD\034\370kD\031\257ZEK\r\210Ds\202\210D\376\252\236D2\017bD\376\252\236D*\2061E\2242\204D\376\252\236Dp\204\033Dp\204\033D\2242\204D,7\200D\376\252\236Dn-\217Dp\204\033D\363P\200D2\017bDK\r\210Dn-\217D*\2061E\2242\204D2\017bDn-\217D*\2061E*\2061Ep\204\033Dp\204\033D*\2061E\2523CD\2242\204Dp\204\033D\2242\204DK\r\210DK\r\210D\376\252\236DK\r\210D\363P\200D\376\252\236DK\r\210D2\017bD\376\252\236D\2242\204DK\r\210D\034\370kD\363P\200D\031\257ZE*\2061E2\017bD\031\257ZEK\r\210D\031\257ZE2\017bDK\r\210D\376\252\236DK\r\210D*\2061Ep\204\033D\376\252\236D\376\252\236D2\017bDp\204\033D*\2061E*\2061E2\017bD2\017bD\376\252\236D\376\252\236D2\017bD\363P\200D*\2061E*\2061En-\217Ds\202\210D\031\257ZEs\202\210D2\017bD2\017bD\031\257ZEp\204\033DK\r\210Dp\204\033DK\r\210D*\2061E\031\257ZE*\2061E\363P\200D2\017bD2\017bDK\r\210D2\017bD*\2061E*\2061E\031\257ZE\376\252\236D2\017bD2\017bDp\204\033DK\r\210DK\r\210Dp\204\033D\363P\200D\376\252\236D\376\252\236D\031\257ZE*\2061E*\2061E*\2061Ep\204\033D\n|\211D2\017bD\363P\200Dp\204\033Dn-\217D*\2061E*\2061E\2523CDK\r\210D\363P\200DK\r\210D\2242\204D\363P\200D2\017bD*\2061Ep\204\033DUXtD\376\252\236D,7\200D\2242\204D2\017bDK\r\210Dn-\217D2\017bD\031\257ZE\031\257ZE\2242\204D2\017bDp\204\033D2\017bDK\r\210DK\r\210D\031\257ZEp\204\033D\376\252\236DK\r\210DK\r\210D\376\252\236DK\r\210D\376\252\236Dp\204\033DK\r\210DK\r\210D\2523CD*\2061Es\202\210Dp\204\033D2\017bDn-\217DK\r\210D*\2061E\034\370kDs\202\210DK\r\210D\031\257ZE\031\257ZE*\2061Ep\204\033Dp\204\033D2\017bDK\r\210DK\r\210Dp\204\033D2\017bDp\204\033D\363P\200Ds\202\210DK\r\210D*\2061Ep\204\033D*\2061EK\r\210D\031\257ZE*\2061E\2242\204Ds\202\210D\363P\200D*\2061E2\017bDK\r\210D,7\200D\376\252\236D\n|\211D\376\252\236D\031\257ZEn-\217DK\r\210DK\r\210D\2242\204DK\r\210D2\017bD\363P\200D*\2061E\031\257ZEK\r\210D\376\252\236D2\017bDp\204\033D\031\257ZEp\204\033D\363P\200D\031\257ZE*\2061E,7\200D\363P\200D\376\252\236Dp\204\033Ds\202\210Dp\204\033DK\r\210D*\2061EK\r\210Dn-\217D\031\257ZE2\017bD*\2061E\376\252\236Dp\204\033D\376\252\236DK\r\210D*\2061E\363P\200Ds\202\210D\031\257ZE\376\252\236DK\r\210D2\017bDK\r\210D\034\370kD*\2061E\376\252\236Ds\202\210D*\2061Ep\204\033D*\2061E\031\257ZEp\204\033D\363P\200Ds\202\210Dp\204\033D2\017bDK\r\210DK\r\210Dp\204\033Dp\204\033D\2242\204D\2523CD\363P\200D*\2061Ep\204\033Dp\204\033D*\2061EK\r\210D*\2061Ep\204\033DK\r\210Dp\204\033DK\r\210D\376\252\236D*\2061E\376\252\236Dn-\217D\034\370kD\376\252\236D\376\252\236D\034\370kD2\017bD\376\252\236Dn-\217D2\017bD\031\257ZE*\2061E\031\257ZE\363P\200D\2242\204D\031\257ZE2\017bD\031\257ZE\376\252\236Ds\202\210Dp\204\033D\2242\204D\034\370kDp\204\033D,7\200D\034\370kDp\204\033DK\r\210D2\017bD\363P\200D\376\252\236D*\2061E\376\252\236Ds\202\210D*\2061E\034\370kD\376\252\236D2\017bD*\2061E\031\257ZE\031\257ZE\2523CD2\017bD\376\252\236D\376\252\236DK\r\210Dn-\217DK\r\210D\376\252\236D\376\252\236D\363P\200Dp\204\033D\031\257ZE*\2061E2\017bD\031\257ZE\2242\204D\2242\204D2\017bD\2523CD*\2061E\376\252\236D\034\370kDp\204\033D\031\257ZE\376\252\236D\031\257ZE,7\200D\034\370kDs\202\210D2\017bDs\202\210Dp\204\033Ds\202\210D\2523CD\363P\200Dp\204\033D\2523CD2\017bDs\202\210D\2242\204D\376\252\236D*\2061Ep\204\033Dp\204\033D\034\370kD\376\252\236Ds\202\210D2\017bD2\017bDp\204\033D\363P\200Dp\204\033D\034\370kD\363P\200D2\017bDK\r\210Ds\202\210DK\r\210D2\017bDn-\217D*\2061EK\r\210Dp\204\033D2\017bD*\2061Ep\204\033DK\r\210DK\r\210D\034\370kDp\204\033D2\017bD*\2061En-\217D\363P\200DK\r\210D2\017bDn-\217D2\017bD\376\252\236D2\017bD\034\370kDp\204\033Dp\204\033D\376\252\236Dp\204\033Dp\204\033D*\2061E\2242\204D\376\252\236D2\017bDK\r\210D2\017bDs\202\210D,7\200D\376\252\236Ds\202\210Dp\204\033Dp\204\033D2\017bD,7\200D\031\257ZEp\204\033D2\017bD\2242\204Ds\202\210D2\017bD\376\252\236DK\r\210DUXtDK\r\210D*\2061E\031\257ZE\034\370kD\031\257ZE\031\257ZEs\202\210D\034\370kD2\017bD\034\370kD\376\252\236D2\017bD\031\257ZE2\017bD*\2061EK\r\210D\363P\200D2\017bD\031\257ZEK\r\210D2\017bD\363P\200D*\2061E*\2061E\376\252\236D\031\257ZE\376\252\236D\2242\204D\376\252\236DK\r\210D2\017bD\363P\200Dn-\217Ds\202\210Ds\202\210D*\2061E\031\257ZE\376\252\236D,7\200D\031\257ZEK\r\210D\2242\204D2\017bD2\017bDK\r\210D2\017bD\376\252\236D,7\200D*\2061E\031\257ZE\376\252\236D2\017bD*\2061Ep\204\033D\031\257ZE\2523CD\031\257ZE*\2061E\031\257ZE*\2061EK\r\210DK\r\210D\376\252\236D*\2061EK\r\210Dn-\217D*\2061E\034\370kDp\204\033D\034\370kDK\r\210DK\r\210Dp\204\033D\034\370kDn-\217DK\r\210D*\2061E2\017bDs\202\210D*\2061E\031\257ZE\031\257ZE*\2061E2\017bD,7\200D\376\252\236D\034\370kDs\202\210DK\r\210DK\r\210D\376\252\236D*\2061Ep\204\033D\376\252\236Dp\204\033D\034\370kDs\202\210Ds\202\210Ds\202\210Ds\202\210DK\r\210D\2242\204D2\017bDK\r\210Dp\204\033D\034\370kD*\2061E\363P\200Dn-\217D2\017bD\031\257ZEp\204\033D*\2061E\376\252\236D2\017bD*\2061E\031\257ZE2\017bD\376\252\236D2\017bD\2242\204DK\r\210Dp\204\033D\376\252\236D2\017bDp\204\033D2\017bD2\017bDp\204\033D\376\252\236D\363P\200DK\r\210Ds\202\210Dp\204\033DK\r\210D\031\257ZE2\017bDp\204\033Dp\204\033D\2242\204D*\2061Ep\204\033Ds\202\210D\034\370kDK\r\210D2\017bDp\204\033D\2242\204D\363P\200D\363P\200D\034\370kD\031\257ZEp\204\033Ds\202\210D*\2061E2\017bD\2523CDp\204\033D\363P\200D\376\252\236D*\2061Ep\204\033Dp\204\033Ds\202\210D\034\370kDK\r\210D*\2061E\376\252\236DK\r\210DK\r\210D2\017bD\031\257ZE\034\370kDn-\217D2\017bDK\r\210DK\r\210D\031\257ZEK\r\210D\376\252\236DUXtDp\204\033D\2523CD\363P\200D2\017bD\034\370kD*\2061E2\017bDp\204\033D2\017bDp\204\033DK\r\210D\2242\204D2\017bDK\r\210D\2242\204D*\2061E,7\200DK\r\210DK\r\210D\031\257ZE,7\200DK\r\210Dp\204\033D\363P\200D\031\257ZE\034\370kDK\r\210Dp\204\033DK\r\210D\376\252\236Dp\204\033Dn-\217DK\r\210D*\2061E\376\252\236DK\r\210D\376\252\236Dn-\217D*\2061E\034\370kDn-\217D\376\252\236Dp\204\033D\376\252\236D\363P\200Dp\204\033D\031\257ZE2\017bD2\017bD2\017bDn-\217DK\r\210DK\r\210D*\2061EK\r\210D2\017bD2\017bDp\204\033D\031\257ZE\031\257ZEp\204\033D\031\257ZE\031\257ZE\376\252\236D\031\257ZEK\r\210D,7\200D\2242\204D2\017bDs\202\210D*\2061E\363P\200D*\2061E\031\257ZE2\017bDK\r\210DK\r\210D\031\257ZE\376\252\236D\363P\200D\376\252\236DK\r\210D\034\370kD\376\252\236D\031\257ZE2\017bD\031\257ZE\376\252\236D\376\252\236D2\017bD\376\252\236D*\2061E\376\252\236DK\r\210D\031\257ZEK\r\210D\376\252\236D\363P\200D2\017bDp\204\033D\376\252\236D,7\200DK\r\210D\n|\211D\031\257ZEp\204\033D*\2061Es\202\210D\376\252\236D\034\370kDp\204\033D2\017bD\031\257ZE\031\257ZE\031\257ZE\376\252\236Dp\204\033DK\r\210DK\r\210D\031\257ZE\2242\204D\034\370kDK\r\210D2\017bDK\r\210D\363P\200Dp\204\033DK\r\210DK\r\210D*\2061E,7\200D\2242\204D\031\257ZE*\2061E\034\370kD\376\252\236D\031\257ZE\034\370kDs\202\210Dn-\217D\376\252\236Ds\202\210D\2242\204Ds\202\210Dp\204\033D*\2061E*\2061Ep\204\033D*\2061E\034\370kD\376\252\236D\031\257ZE2\017bD\376\252\236Dp\204\033Dn-\217DK\r\210D\031\257ZE\376\252\236Dp\204\033D*\2061E\031\257ZE2\017bD\2242\204D2\017bD\031\257ZE\031\257ZE2\017bD*\2061E2\017bD*\2061Ep\204\033Dp\204\033Dn-\217D,7\200Ds\202\210D\034\370kDp\204\033D\031\257ZE*\2061E*\2061E\376\252\236DK\r\210Ds\202\210D*\2061E2\017bD\034\370kD2\017bDK\r\210D\2523CD\376\252\236Dp\204\033D2\017bD\376\252\236D2\017bDp\204\033D\363P\200D\034\370kD\031\257ZE2\017bDs\202\210D\031\257ZEp\204\033D*\2061E*\2061E\376\252\236D2\017bD\034\370kD\034\370kD\031\257ZE*\2061E\376\252\236D2\017bD\363P\200D\376\252\236D\034\370kD\363P\200DK\r\210D\034\370kD\363P\200D\031\257ZE\376\252\236D2\017bD\031\257ZE\376\252\236Dn-\217D2\017bD*\2061E\031\257ZE*\2061E\376\252\236D\363P\200Ds\202\210DK\r\210Dp\204\033DK\r\210D2\017bD\363P\200D\031\257ZE\2242\204DK\r\210Ds\202\210D*\2061E\376\252\236D2\017bD*\2061E\2242\204Dn-\217DK\r\210D\376\252\236D2\017bD2\017bD\376\252\236D\034\370kDp\204\033Dp\204\033D\031\257ZE*\2061E*\2061E2\017bDp\204\033D*\2061E*\2061E\031\257ZE\376\252\236D\031\257ZE2\017bD*\2061Es\202\210D*\2061E\034\370kDK\r\210D*\2061E\2242\204DK\r\210D\376\252\236D\2242\204D2\017bD\376\252\236DK\r\210D\2242\204D*\2061E\376\252\236D2\017bDK\r\210Ds\202\210D\2242\204D\031\257ZEs\202\210D\034\370kD*\2061E*\2061EK\r\210Ds\202\210D*\2061E\376\252\236Dn-\217Dn-\217Dn-\217D\376\252\236D\034\370kD\376\252\236D\031\257ZE\031\257ZEK\r\210D\031\257ZE\034\370kDp\204\033D\363P\200Dp\204\033Ds\202\210D*\2061E\031\257ZEp\204\033D\2242\204D\031\257ZE\363P\200D\034\370kD\034\370kD\031\257ZE\376\252\236D*\2061Ep\204\033DK\r\210D\376\252\236DUXtDK\r\210DK\r\210DK\r\210DK\r\210Ds\202\210Dp\204\033D*\2061E\2242\204D\376\252\236D2\017bD*\2061En-\217D\031\257ZE2\017bD\376\252\236D\363P\200D\2523CD\031\257ZEn-\217D\2242\204D\2523CD2\017bDp\204\033D\376\252\236Dn-\217D\031\257ZEp\204\033DK\r\210DK\r\210DK\r\210Dp\204\033D\031\257ZEK\r\210Dp\204\033D\2242\204D2\017bD\376\252\236D*\2061EK\r\210D*\2061Ep\204\033D*\2061E*\2061E\2242\204DK\r\210D*\2061E,7\200Dp\204\033D\034\370kD*\2061E2\017bDK\r\210D\376\252\236D*\2061E\2242\204D*\2061E*\2061EK\r\210DK\r\210Dp\204\033D\2523CD\2242\204Dp\204\033D*\2061E2\017bDp\204\033D\031\257ZEn-\217D\034\370kD2\017bD\031\257ZE*\2061E\031\257ZE\2242\204D\376\252\236D\031\257ZEK\r\210D\031\257ZE\031\257ZEK\r\210D\031\257ZE2\017bD\376\252\236D\376\252\236D2\017bDs\202\210D\376\252\236Dp\204\033D*\2061E\031\257ZEK\r\210D\376\252\236D*\2061E*\2061E\363P\200DK\r\210D\034\370kD\376\252\236D*\2061E\2242\204D\034\370kD\376\252\236Dp\204\033D*\2061E\376\252\236D\363P\200D*\2061E\2242\204DK\r\210DK\r\210D\376\252\236D\363P\200D*\2061E2\017bDn-\217Dp\204\033D*\2061E*\2061E*\2061Ep\204\033D*\2061E\363P\200D\2242\204Dp\204\033D\031\257ZEK\r\210Dn-\217D2\017bDK\r\210DK\r\210D*\2061E2\017bDK\r\210D\363P\200D\031\257ZEp\204\033D\034\370kD*\2061E\363P\200D\031\257ZE\376\252\236DK\r\210Ds\202\210Ds\202\210Dp\204\033Dp\204\033D\376\252\236D\031\257ZE2\017bD\031\257ZE\034\370kD2\017bD2\017bD\2242\204Ds\202\210D*\2061EK\r\210D*\2061E2\017bDp\204\033D\034\370kD2\017bD\363P\200D*\2061Ep\204\033D\376\252\236D\376\252\236D\034\370kDK\r\210D\031\257ZEK\r\210D2\017bD\376\252\236D\031\257ZE\376\252\236Dp\204\033Ds\202\210D\034\370kDp\204\033D2\017bD\376\252\236Dp\204\033D\2242\204D\2242\204Dp\204\033D2\017bDK\r\210D,7\200Dp\204\033D2\017bD*\2061E*\2061E\376\252\236D\2523CD*\2061Es\202\210DK\r\210Dn-\217D\376\252\236D\376\252\236D,7\200D*\2061Ep\204\033D*\2061E\376\252\236D\376\252\236Dp\204\033Dp\204\033Dp\204\033Dp\204\033Dp\204\033D\376\252\236D\376\252\236D\034\370kDK\r\210DK\r\210D2\017bDK\r\210D\376\252\236Dn-\217D2\017bD,7\200DK\r\210DK\r\210D\031\257ZE*\2061E,7\200Dn-\217D2\017bD\n|\211D2\017bDK\r\210Dp\204\033D\034\370kD2\017bD\031\257ZE2\017bD*\2061E\363P\200D\031\257ZE\031\257ZE2\017bDp\204\033D\363P\200D,7\200DK\r\210DK\r\210Dp\204\033Ds\202\210D\376\252\236D*\2061E2\017bD\034\370kD\034\370kD*\2061E*\2061E*\2061E\376\252\236D*\2061E\2242\204D\376\252\236D\031\257ZE\376\252\236Dn-\217D*\2061E\376\252\236D\031\257ZE\376\252\236D*\2061E2\017bD2\017bD\034\370kD\376\252\236Dp\204\033D\031\257ZE\376\252\236D\2242\204DK\r\210Dp\204\033D\376\252\236D\2523CDp\204\033D2\017bD,7\200Dp\204\033D\031\257ZE\376\252\236Ds\202\210D\031\257ZE\031\257ZE\034\370kD*\2061E\376\252\236D*\2061E\031\257ZE\034\370kDs\202\210D*\2061E*\2061E\034\370kDp\204\033D\031\257ZE\376\252\236Dn-\217Dp\204\033DK\r\210D\2242\204D2\017bD\031\257ZEK\r\210D2\017bDK\r\210D2\017bDn-\217D\376\252\236D\376\252\236D\376\252\236D*\2061E\376\252\236D\363P\200D\363P\200D2\017bD2\017bD\031\257ZEp\204\033D*\2061E2\017bDK\r\210D2\017bD\031\257ZEUXtDK\r\210D\031\257ZE\031\257ZE2\017bDp\204\033D\376\252\236D\376\252\236D\2242\204D2\017bD\031\257ZEK\r\210D2\017bD\376\252\236D*\2061E2\017bDK\r\210D\2523CD\376\252\236Dp\204\033D2\017bDK\r\210D\031\257ZE\031\257ZEp\204\033D\2242\204D\376\252\236Dp\204\033D\376\252\236D*\2061Ep\204\033Ds\202\210D,7\200D2\017bD\376\252\236D*\2061E\376\252\236Dp\204\033Dp\204\033D\376\252\236D\376\252\236D,7\200D\031\257ZE\2242\204D\031\257ZE*\2061EK\r\210DK\r\210DK\r\210D\031\257ZE*\2061E2\017bD2\017bDp\204\033D2\017bD\031\257ZE\031\257ZE\031\257ZE\031\257ZE\376\252\236DK\r\210DK\r\210D\2523CD2\017bDp\204\033D\363P\200DK\r\210D\376\252\236Dp\204\033D\034\370kD\031\257ZE\376\252\236D\376\252\236Ds\202\210Dp\204\033D\363P\200D\376\252\236D\034\370kD\034\370kDK\r\210D\363P\200DK\r\210Dp\204\033D2\017bD2\017bD\376\252\236DK\r\210D\376\252\236D\376\252\236Dp\204\033DK\r\210D2\017bDK\r\210D2\017bD\031\257ZE\376\252\236Ds\202\210D2\017bD\034\370kDp\204\033D\031\257ZE\031\257ZEs\202\210Ds\202\210D\034\370kDK\r\210DK\r\210D2\017bD\031\257ZE2\017bDp\204\033D\376\252\236D\031\257ZE,7\200D\363P\200D2\017bDK\r\210D\363P\200D\031\257ZEK\r\210D\031\257ZE\031\257ZE2\017bDs\202\210DK\r\210Dp\204\033D\363P\200D\031\257ZE\363P\200D2\017bDp\204\033Dp\204\033D\2242\204Dp\204\033Dp\204\033Ds\202\210D2\017bDp\204\033D\031\257ZE\376\252\236DK\r\210D2\017bD\376\252\236Dp\204\033D\376\252\236D2\017bD\376\252\236D2\017bD\2242\204D*\2061Ep\204\033D2\017bD2\017bDK\r\210D\376\252\236Dp\204\033Ds\202\210D\363P\200D*\2061Ep\204\033Dp\204\033DUXtD*\2061En-\217DK\r\210Dn-\217D2\017bD\034\370kD\376\252\236Dp\204\033D*\2061Es\202\210D\034\370kDK\r\210D\031\257ZE\376\252\236DK\r\210D\031\257ZE\376\252\236D\034\370kD\363P\200D2\017bDs\202\210D,7\200D*\2061E\376\252\236DK\r\210D\031\257ZEK\r\210D\376\252\236D\376\252\236DK\r\210D*\2061E2\017bDp\204\033D*\2061E\376\252\236Dp\204\033D\376\252\236D\2242\204D\376\252\236DK\r\210D\034\370kD\2242\204D2\017bDK\r\210D2\017bDK\r\210Dp\204\033D*\2061E\376\252\236D\363P\200D*\2061E2\017bDUXtDK\r\210D*\2061Ep\204\033DK\r\210D\034\370kDs\202\210D\376\252\236Ds\202\210D\376\252\236D\363P\200D\034\370kDK\r\210DK\r\210D\376\252\236Dn-\217D\2242\204Dp\204\033D\376\252\236D*\2061Ep\204\033D*\2061E2\017bDK\r\210D2\017bDp\204\033D2\017bD\376\252\236DK\r\210Dp\204\033D2\017bD2\017bD\031\257ZE2\017bD\031\257ZE\376\252\236D\363P\200D\031\257ZE\2242\204D\031\257ZE*\2061E\2523CDK\r\210Dp\204\033D\2242\204D\034\370kD,7\200D2\017bDn-\217D*\2061E*\2061E\2242\204D2\017bD\376\252\236D2\017bD2\017bDp\204\033DK\r\210Dp\204\033DK\r\210D\376\252\236Dp\204\033D*\2061E*\2061E\363P\200D\376\252\236D2\017bD\034\370kDK\r\210D2\017bDK\r\210D\031\257ZEK\r\210Dn-\217DK\r\210Ds\202\210D*\2061Ep\204\033D2\017bD2\017bD\376\252\236D\031\257ZE\363P\200Dp\204\033D\376\252\236D\376\252\236D,7\200D\376\252\236D\2523CD*\2061E*\2061E\376\252\236Dp\204\033D2\017bD2\017bD*\2061Ep\204\033D2\017bD*\2061E2\017bDp\204\033D\031\257ZE*\2061E,7\200D*\2061E\031\257ZE2\017bD\031\257ZE\031\257ZE\2242\204D2\017bD\034\370kDUXtDp\204\033D*\2061EK\r\210D\376\252\236Dp\204\033D*\2061E\376\252\236D\031\257ZE\034\370kD\034\370kD*\2061E\363P\200DK\r\210D2\017bD\376\252\236D\031\257ZEUXtDp\204\033D2\017bDp\204\033D\376\252\236DK\r\210Dp\204\033Ds\202\210D\034\370kD2\017bD2\017bD\2242\204D\2523CDK\r\210DK\r\210D\376\252\236DK\r\210D\376\252\236D\376\252\236Dp\204\033D\034\370kDp\204\033Ds\202\210D*\2061Ep\204\033D\2242\204DK\r\210Dp\204\033D\376\252\236DK\r\210D*\2061E\376\252\236D\2242\204Dn-\217Dp\204\033DK\r\210Dn-\217D2\017bD\363P\200Dp\204\033D*\2061EK\r\210D\031\257ZEp\204\033Dp\204\033D\031\257ZEK\r\210D\034\370kDn-\217D2\017bD2\017bD\034\370kD2\017bDp\204\033Dp\204\033D\376\252\236D\363P\200D\2242\204D*\2061EK\r\210D\034\370kDn-\217DK\r\210Dp\204\033DK\r\210Ds\202\210D2\017bD2\017bD*\2061E2\017bDp\204\033D*\2061E*\2061E*\2061E\363P\200D\031\257ZE2\017bD\363P\200D2\017bD\2523CDn-\217D\363P\200DK\r\210D\2242\204D\031\257ZE\031\257ZE\2242\204D2\017bD\031\257ZE*\2061EK\r\210Dp\204\033DK\r\210D2\017bD\034\370kDp\204\033D\363P\200D*\2061E\031\257ZEK\r\210DK\r\210Dp\204\033D2\017bDp\204\033D2\017bD2\017bD\031\257ZEn-\217D\2242\204Dp\204\033D\031\257ZE*\2061E\034\370kD*\2061E*\2061E2\017bDK\r\210D\376\252\236D2\017bDK\r\210D2\017bD\376\252\236D\376\252\236Dp\204\033D\376\252\236D\363P\200D\376\252\236D\031\257ZEK\r\210Ds\202\210D\376\252\236D2\017bDK\r\210Dn-\217D\2242\204D\376\252\236D\034\370kD\376\252\236D2\017bD2\017bD\034\370kD\034\370kDp\204\033D2\017bD*\2061EK\r\210DK\r\210Dp\204\033D2\017bDK\r\210D\2523CD\376\252\236D,7\200D\376\252\236D\031\257ZEn-\217D\031\257ZE\376\252\236DK\r\210D2\017bDK\r\210D\034\370kD\034\370kD\376\252\236D\034\370kDK\r\210Dn-\217D\376\252\236D\n|\211DK\r\210Dp\204\033Dn-\217D\031\257ZE\034\370kD*\2061E2\017bD\031\257ZEK\r\210D*\2061EK\r\210D2\017bD*\2061E\034\370kD*\2061En-\217D2\017bD*\2061E\034\370kDK\r\210D*\2061E\2242\204D2\017bDs\202\210D\031\257ZEp\204\033D\376\252\236D\2242\204Dp\204\033Ds\202\210D*\2061EK\r\210D\363P\200Dp\204\033D\031\257ZEK\r\210D2\017bDs\202\210D\034\370kDK\r\210D*\2061E*\2061E*\2061Es\202\210D*\2061E2\017bD*\2061Es\202\210D,7\200Dp\204\033D\031\257ZEK\r\210D\031\257ZE\034\370kDs\202\210D2\017bDp\204\033D\363P\200Dp\204\033D\034\370kD*\2061En-\217D\2242\204Dp\204\033D*\2061E2\017bD\031\257ZE2\017bD\031\257ZE\376\252\236D\2523CD\034\370kDp\204\033D\376\252\236D*\2061EK\r\210Ds\202\210D*\2061E,7\200Ds\202\210D\376\252\236D\031\257ZE\376\252\236D2\017bDs\202\210DK\r\210D\031\257ZE2\017bDp\204\033Dn-\217D\376\252\236D2\017bDp\204\033Dp\204\033D*\2061E\376\252\236D\031\257ZE\363P\200D\376\252\236D\034\370kDK\r\210DK\r\210Dn-\217D2\017bD\2242\204D\376\252\236D2\017bD\2242\204D\034\370kD*\2061E\376\252\236D\031\257ZE2\017bD2\017bD*\2061E*\2061Ep\204\033D\2242\204Dn-\217D2\017bD\363P\200D\034\370kD2\017bD\363P\200Dp\204\033Dp\204\033D2\017bD*\2061Es\202\210Ds\202\210D\376\252\236D2\017bD2\017bD\376\252\236D\363P\200D\034\370kDZ\013\305D*\2061E2\017bDp\204\033D\2523CD2\017bDK\r\210D2\017bDs\202\210Dp\204\033D\031\257ZE\034\370kDn-\217D\031\257ZE\2523CDp\204\033Dp\204\033D\034\370kD2\017bD,7\200DK\r\210Dn-\217D,7\200D*\2061E2\017bDK\r\210Ds\202\210Dp\204\033D\034\370kD2\017bDp\204\033Dp\204\033D\376\252\236Ds\202\210D\031\257ZE\376\252\236Dn-\217Dp\204\033D\034\370kD2\017bDK\r\210Dp\204\033D\376\252\236Dp\204\033D\031\257ZE2\017bD2\017bD\376\252\236D2\017bD\376\252\236D\031\257ZE2\017bDs\202\210DK\r\210Dn-\217Ds\202\210D\376\252\236D2\017bD2\017bD\376\252\236D\031\257ZE\031\257ZE\031\257ZE*\2061E2\017bD\034\370kD*\2061E\376\252\236Ds\202\210D\363P\200Dp\204\033DK\r\210D\034\370kD\031\257ZE\376\252\236DK\r\210D*\2061EK\r\210D\031\257ZE2\017bDn-\217D\031\257ZE*\2061Ep\204\033D2\017bD\363P\200D*\2061Ep\204\033D*\2061E\031\257ZEs\202\210Dp\204\033D\031\257ZEK\r\210D\376\252\236D\031\257ZEK\r\210Dn-\217D2\017bD\034\370kDp\204\033D\376\252\236DK\r\210D\034\370kD\034\370kD*\2061E*\2061E2\017bD\363P\200D2\017bD\034\370kD\2242\204Dp\204\033D*\2061E2\017bD\2242\204D\n|\211D\376\252\236D\363P\200D\376\252\236DUXtD\034\370kD\034\370kD*\2061E\034\370kDK\r\210DK\r\210D\376\252\236D\031\257ZEK\r\210Dp\204\033D2\017bD*\2061E\363P\200D*\2061Ep\204\033D\031\257ZE\031\257ZEp\204\033Dp\204\033D2\017bDK\r\210D\031\257ZE\031\257ZE\2242\204D\031\257ZEn-\217D2\017bDK\r\210Dn-\217D*\2061E\031\257ZE\2242\204D,7\200DK\r\210D\376\252\236D2\017bDUXtD2\017bDn-\217Ds\202\210D*\2061EK\r\210D\376\252\236D*\2061E\031\257ZE2\017bDp\204\033Dp\204\033D*\2061Ep\204\033D\376\252\236D\376\252\236D\376\252\236DK\r\210D\031\257ZE\2523CDp\204\033D\034\370kD*\2061EK\r\210D2\017bDn-\217Dn-\217D\376\252\236D*\2061E\376\252\236D\034\370kD2\017bD2\017bDs\202\210D*\2061Ep\204\033D\031\257ZE2\017bDs\202\210Ds\202\210DUXtD*\2061Ep\204\033D\2242\204D*\2061Ep\204\033D\031\257ZE\2242\204D2\017bD*\2061Ep\204\033D\031\257ZEK\r\210D\2242\204D\376\252\236D\034\370kD\376\252\236Dp\204\033D2\017bD\031\257ZE\2523CD2\017bDp\204\033Dp\204\033Dp\204\033DK\r\210DK\r\210Dp\204\033Dp\204\033Dn-\217D\376\252\236D\376\252\236DK\r\210D\376\252\236DK\r\210D\031\257ZE\034\370kD*\2061E*\2061EK\r\210D\031\257ZE\2242\204D2\017bD\363P\200Dp\204\033D\376\252\236Dp\204\033Dp\204\033D\363P\200D\363P\200Dp\204\033D\376\252\236D\034\370kD*\2061E*\2061E\376\252\236D\376\252\236DK\r\210D\031\257ZE2\017bD*\2061Ep\204\033D\034\370kD\031\257ZE*\2061EK\r\210DK\r\210D\376\252\236D2\017bD,7\200D*\2061E\034\370kD\031\257ZE\034\370kD\034\370kD\363P\200DK\r\210D\376\252\236D\376\252\236D*\2061E\034\370kD\363P\200DK\r\210Ds\202\210D*\2061Ep\204\033D\363P\200D\376\252\236D*\2061Es\202\210DK\r\210D2\017bDK\r\210DK\r\210D2\017bDK\r\210D*\2061E2\017bD*\2061E*\2061Ep\204\033D\376\252\236DK\r\210D\034\370kD\376\252\236D\376\252\236D2\017bD\376\252\236D2\017bD,7\200Dn-\217Dn-\217D\376\252\236Dp\204\033D2\017bDK\r\210D*\2061Ep\204\033D\376\252\236D\031\257ZE\2242\204D\034\370kDp\204\033Dp\204\033D2\017bD2\017bD\031\257ZEK\r\210DK\r\210D*\2061E\363P\200D\2242\204D2\017bD\034\370kD\2242\204D\031\257ZE\031\257ZEp\204\033D\031\257ZE\031\257ZE2\017bD\034\370kD\376\252\236D\363P\200D2\017bDK\r\210DK\r\210D\363P\200D*\2061E\376\252\236D\363P\200D\031\257ZEn-\217Dp\204\033D\376\252\236DK\r\210Ds\202\210DK\r\210D\2523CD\034\370kD\2242\204Dp\204\033Ds\202\210D\363P\200D*\2061E2\017bDp\204\033D\376\252\236D\376\252\236D\2242\204D\031\257ZE\2242\204D\034\370kD\n|\211Dn-\217Ds\202\210DK\r\210D\034\370kDn-\217Dp\204\033Dp\204\033Dp\204\033D\376\252\236Dp\204\033D\376\252\236Dp\204\033DK\r\210D\376\252\236D*\2061E2\017bD\031\257ZEp\204\033D\031\257ZE\031\257ZE\2242\204D\031\257ZEp\204\033D2\017bD2\017bD\376\252\236D\034\370kDK\r\210D2\017bD2\017bD\363P\200Dp\204\033D\034\370kD2\017bDK\r\210D*\2061En-\217D\376\252\236D*\2061En-\217DK\r\210D\2523CD,7\200Dp\204\033D\376\252\236D2\017bD\376\252\236D\034\370kDp\204\033D\031\257ZE*\2061EUXtD\031\257ZEn-\217D\376\252\236Dn-\217D\376\252\236Ds\202\210D,7\200Dp\204\033D*\2061En-\217DK\r\210D\376\252\236D\2242\204Dp\204\033D\363P\200D\031\257ZEp\204\033Ds\202\210D\034\370kDp\204\033Dp\204\033Dp\204\033Ds\202\210D\363P\200Dp\204\033D2\017bD2\017bD\376\252\236Dp\204\033D\376\252\236DK\r\210D\363P\200D\031\257ZE*\2061E\376\252\236D\031\257ZE\034\370kD\376\252\236DK\r\210D\031\257ZE\363P\200D*\2061En-\217D*\2061Ep\204\033D\031\257ZE*\2061E\376\252\236D2\017bD2\017bD\034\370kD\031\257ZE\034\370kD*\2061E\031\257ZEK\r\210D*\2061E\031\257ZE\376\252\236DK\r\210D\031\257ZE\376\252\236D\363P\200D\031\257ZE,7\200D\376\252\236D2\017bD\2242\204D\376\252\236D\376\252\236DK\r\210DK\r\210DK\r\210DK\r\210DK\r\210D\376\252\236D\031\257ZEK\r\210Dp\204\033D\031\257ZE\376\252\236DK\r\210D\376\252\236D\031\257ZEK\r\210D\363P\200D\376\252\236Dp\204\033D2\017bD,7\200Dn-\217D*\2061E\031\257ZE,7\200D\031\257ZEp\204\033D\034\370kDK\r\210D\031\257ZE*\2061E\363P\200D2\017bD\034\370kD\2242\204D2\017bD\376\252\236D\2242\204D\2242\204Dn-\217DK\r\210D,7\200D\376\252\236Dn-\217D2\017bDK\r\210DK\r\210Dp\204\033D\363P\200Dp\204\033DUXtDp\204\033D\376\252\236D\376\252\236D\363P\200D2\017bD*\2061Ep\204\033D\2242\204Dp\204\033DK\r\210D\376\252\236Dn-\217D\2523CDs\202\210DK\r\210D\2242\204Dp\204\033D\376\252\236D\031\257ZE\363P\200D*\2061E\031\257ZE\363P\200Dp\204\033D\376\252\236D*\2061Ep\204\033D\031\257ZE\031\257ZEK\r\210D\376\252\236D\376\252\236D\034\370kDs\202\210Ds\202\210D\363P\200D\034\370kD\031\257ZE\031\257ZE\031\257ZEp\204\033D*\2061EK\r\210D2\017bDK\r\210DK\r\210DK\r\210Dp\204\033D\034\370kD\2242\204D2\017bD\376\252\236D2\017bD\363P\200D*\2061Ep\204\033DK\r\210D2\017bDK\r\210D\034\370kD\376\252\236DK\r\210D*\2061E\034\370kD\363P\200Dn-\217D2\017bD2\017bDp\204\033Dp\204\033Dp\204\033D2\017bD*\2061E\363P\200DK\r\210D\376\252\236D2\017bDp\204\033Dn-\217Dp\204\033D\031\257ZE\376\252\236D\031\257ZEp\204\033D,7\200D\031\257ZE*\2061E\031\257ZEp\204\033D*\2061E2\017bDp\204\033D\2523CD\2242\204D\376\252\236D\034\370kD\363P\200D2\017bDK\r\210D2\017bD\376\252\236D,7\200D\376\252\236D2\017bD2\017bD\034\370kD\2242\204DK\r\210D*\2061E\2523CD\031\257ZE,7\200D\2242\204D\031\257ZEK\r\210Dn-\217DK\r\210DK\r\210DK\r\210D\031\257ZE\031\257ZEp\204\033Dp\204\033D2\017bDK\r\210D\034\370kDp\204\033D*\2061E,7\200Dn-\217D2\017bD\031\257ZEK\r\210D\2242\204Ds\202\210D2\017bD*\2061E\376\252\236D\376\252\236D\376\252\236D2\017bDp\204\033D\031\257ZEK\r\210D2\017bD\363P\200Dp\204\033D2\017bDn-\217DK\r\210DK\r\210D\2242\204D2\017bDK\r\210Dp\204\033D\031\257ZEn-\217D\376\252\236D2\017bD\2242\204DK\r\210DK\r\210D\363P\200DK\r\210D\376\252\236DUXtD\031\257ZE\034\370kD2\017bD2\017bDp\204\033DK\r\210Dp\204\033D2\017bDn-\217D\2523CD*\2061Es\202\210D\376\252\236D*\2061E*\2061E\031\257ZEp\204\033D2\017bD\376\252\236D\034\370kD\363P\200D\031\257ZEK\r\210D\031\257ZE\376\252\236D\376\252\236D\031\257ZEp\204\033D\031\257ZE*\2061Es\202\210Ds\202\210Dp\204\033D\376\252\236D2\017bDK\r\210Dp\204\033Dp\204\033Dp\204\033DK\r\210D*\2061EK\r\210DK\r\210D*\2061E\031\257ZE\376\252\236Dp\204\033D*\2061E\376\252\236D\034\370kD\376\252\236D\376\252\236DK\r\210D\376\252\236D\2242\204Dp\204\033Dn-\217D\n|\211D\363P\200D\376\252\236D\031\257ZE\031\257ZE2\017bDp\204\033DK\r\210DK\r\210D,7\200Dp\204\033D\376\252\236DK\r\210D\031\257ZE\376\252\236DK\r\210D2\017bD\034\370kDs\202\210D\031\257ZEp\204\033Dp\204\033Ds\202\210D2\017bD\034\370kD\031\257ZE\031\257ZE\031\257ZE\2242\204DK\r\210D\2242\204D\031\257ZE\n|\211D*\2061E*\2061Ep\204\033D\376\252\236D2\017bD\031\257ZE\n|\211Dn-\217Dp\204\033DK\r\210D\034\370kD\034\370kDp\204\033D\031\257ZEp\204\033Dn-\217D\376\252\236DK\r\210D\034\370kDK\r\210Dn-\217D\031\257ZE2\017bD\031\257ZEp\204\033DK\r\210D*\2061E\034\370kDK\r\210D\031\257ZE\034\370kD\034\370kDp\204\033Dp\204\033Dp\204\033D*\2061E\031\257ZE2\017bD2\017bD*\2061Ep\204\033D\376\252\236DK\r\210D\2523CDK\r\210D*\2061Ep\204\033Dn-\217Dp\204\033D2\017bD\031\257ZE\376\252\236D\2242\204DK\r\210D2\017bD\376\252\236D\363P\200D*\2061E\031\257ZE\376\252\236D\363P\200D2\017bDp\204\033D2\017bDp\204\033D*\2061E*\2061E\376\252\236Dn-\217DK\r\210D\376\252\236D*\2061En-\217D\031\257ZEK\r\210DK\r\210D\363P\200D\2242\204D\376\252\236D\376\252\236D\376\252\236D\031\257ZEK\r\210D*\2061E\031\257ZEK\r\210D\031\257ZE*\2061E*\2061EK\r\210D\034\370kD\363P\200DK\r\210D\376\252\236D\034\370kD\363P\200DK\r\210D2\017bDp\204\033Dp\204\033D2\017bD2\017bDs\202\210D\031\257ZE\376\252\236D\363P\200D*\2061E\376\252\236Dp\204\033D\2242\204Dp\204\033D\031\257ZEp\204\033DK\r\210Dn-\217D,7\200Dp\204\033D\034\370kD\363P\200Ds\202\210DK\r\210D*\2061EK\r\210Ds\202\210DK\r\210D\376\252\236Ds\202\210Dp\204\033D\376\252\236D*\2061Es\202\210D\376\252\236D\2242\204Dn-\217D\376\252\236D\031\257ZE*\2061EK\r\210DK\r\210Dp\204\033DK\r\210Dn-\217D*\2061E\376\252\236DK\r\210D\031\257ZEp\204\033D2\017bDp\204\033D*\2061EK\r\210D\2242\204Dp\204\033DK\r\210D*\2061E\034\370kDK\r\210D\363P\200Dp\204\033D\034\370kD\376\252\236D\031\257ZE\376\252\236D*\2061EK\r\210DK\r\210Dp\204\033D2\017bDp\204\033D2\017bDn-\217DK\r\210D*\2061E2\017bDUXtD*\2061Ep\204\033D\376\252\236D*\2061E2\017bD\376\252\236D,7\200Dp\204\033D*\2061E\376\252\236D\034\370kDK\r\210D\031\257ZE\376\252\236DK\r\210D\031\257ZEK\r\210D*\2061E\034\370kDn-\217D\376\252\236D\031\257ZE2\017bDK\r\210D2\017bDp\204\033D\376\252\236Dn-\217D\034\370kD\031\257ZEK\r\210Dp\204\033D*\2061E\376\252\236D\031\257ZEn-\217D\363P\200DK\r\210Dn-\217DK\r\210D\031\257ZE\034\370kD,7\200D\376\252\236D\2242\204D\376\252\236D\031\257ZE2\017bD\2242\204Dp\204\033D\363P\200D*\2061E\2242\204D2\017bD\2242\204Dp\204\033D*\2061Ep\204\033D\031\257ZEp\204\033Dp\204\033D*\2061E\376\252\236D\031\257ZE\2523CD\376\252\236D2\017bDp\204\033Dp\204\033Dp\204\033D\363P\200Ds\202\210Dp\204\033D\2242\204D\376\252\236Dp\204\033D\031\257ZEK\r\210D\376\252\236DK\r\210D\031\257ZE*\2061EK\r\210D*\2061Es\202\210Dn-\217DK\r\210D*\2061EK\r\210D\031\257ZEK\r\210D2\017bD*\2061E2\017bD\034\370kD2\017bD2\017bD\376\252\236D\376\252\236D\363P\200D\031\257ZEK\r\210Dp\204\033D*\2061En-\217DK\r\210D\031\257ZE\376\252\236DK\r\210D\376\252\236D\031\257ZE\2242\204D2\017bDs\202\210D*\2061E\376\252\236D\031\257ZE\034\370kDp\204\033D*\2061Ep\204\033D*\2061E2\017bD\031\257ZE\2242\204D\376\252\236Ds\202\210D\363P\200D*\2061E2\017bD2\017bD\2523CD*\2061E\376\252\236D\376\252\236D2\017bDp\204\033Dn-\217D\376\252\236D\376\252\236DUXtDs\202\210D2\017bD\034\370kD*\2061E,7\200DK\r\210DK\r\210D*\2061E\376\252\236Dp\204\033D\031\257ZE\376\252\236D\034\370kDK\r\210D*\2061EK\r\210D2\017bD2\017bD\376\252\236D,7\200D\031\257ZEp\204\033Dp\204\033D\376\252\236D\031\257ZE\2242\204D\376\252\236D*\2061E,7\200Dp\204\033D\376\252\236D*\2061E\031\257ZE\034\370kD*\2061E*\2061E\376\252\236D\2242\204Dp\204\033D*\2061E\363P\200D\376\252\236D\034\370kD\2523CD\376\252\236Ds\202\210D\031\257ZE\031\257ZEp\204\033D\376\252\236D\376\252\236D,7\200Dp\204\033DK\r\210D2\017bD*\2061Es\202\210D\363P\200D2\017bD\376\252\236Dp\204\033D\376\252\236D*\2061EK\r\210D\031\257ZEn-\217D*\2061E\2242\204D\2242\204D2\017bD\2242\204Ds\202\210D\376\252\236Dp\204\033D\2242\204D\031\257ZEK\r\210D*\2061E\376\252\236D\2242\204D\363P\200Ds\202\210Dp\204\033Dn-\217D2\017bD"
      }
    }
  }
}
node {
  name: "SparseTensor/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 3402
          }
          dim {
            size: 2
          }
        }
        tensor_contentt\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\022\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\023\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\026\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\035\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\037\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \004\000\000\000\000\000\000\000\000\000\000\000\000\000\000!\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\"\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000#\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000%\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000&\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\'\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000)\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000*\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000+\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000,\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000-\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000.\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\004\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\0001\004\000\000\000\000\000\000\000\000\000\000\000\000\000\0002\004\000\000\000\000\000\000\000\000\000\000\000\000\000\0003\004\000\000\000\000\000\000\000\000\000\000\000\000\000\0004\004\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\004\000\000\000\000\000\000\000\000\000\000\000\000\000\0006\004\000\000\000\000\000\000\000\000\000\000\000\000\000\0007\004\000\000\000\000\000\000\000\000\000\000\000\000\000\0008\004\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000:\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000;\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000=\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000>\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000?\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000A\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000B\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000C\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000D\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000E\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000F\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000G\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000H\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000I\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000J\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000K\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000L\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000N\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000O\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000P\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000Q\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000S\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000T\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000U\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000V\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000W\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000X\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000Y\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000Z\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000[\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\\\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000]\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000^\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000_\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000`\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\314\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\316\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\317\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\320\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\321\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\322\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\323\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\324\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\325\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\326\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\327\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\330\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\331\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\332\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\333\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\334\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\335\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\336\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\337\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\340\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\341\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\342\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\343\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\344\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\345\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\346\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\347\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\350\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\352\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\353\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\354\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\355\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\356\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\357\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\361\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\362\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\363\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\364\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\366\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\367\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\370\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\371\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\372\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\373\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\374\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\375\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\376\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\377\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\022\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\023\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\026\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\035\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\037\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \005\000\000\000\000\000\000\000\000\000\000\000\000\000\000!\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\"\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000#\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000%\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000&\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\'\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000)\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000*\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000+\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000,\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000-\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000.\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\005\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\005\000\000\000\000\000\000\000\000\000\000\000\000\000\0001\005\000\000\000\000\000\000\000\000\000\000\000\000\000\0002\005\000\000\000\000\000\000\000\000\000\000\000\000\000\0003\005\000\000\000\000\000\000\000\000\000\000\000\000\000\0004\005\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\005\000\000\000\000\000\000\000\000\000\000\000\000\000\0006\005\000\000\000\000\000\000\000\000\000\000\000\000\000\0007\005\000\000\000\000\000\000\000\000\000\000\000\000\000\0008\005\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000:\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000;\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000=\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000>\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000?\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000A\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000B\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000C\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000D\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000E\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000F\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000G\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000H\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000I\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000J\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000K\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000L\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000N\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000O\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000P\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000Q\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000S\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000T\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000U\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000V\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000W\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000X\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000Y\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000Z\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000[\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\\\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000]\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000^\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000_\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000`\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\314\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\316\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\317\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\320\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\321\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\322\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\323\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\324\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\325\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\326\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\327\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\330\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\331\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\332\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\333\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\334\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\335\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\336\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\337\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\340\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\341\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\342\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\343\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\344\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\345\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\346\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\347\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\350\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\352\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\353\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\354\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\355\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\356\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\357\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\361\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\362\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\363\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\364\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\366\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\367\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\370\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\371\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\372\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\373\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\374\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\375\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\376\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\377\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\314\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\316\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\317\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\320\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\321\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\322\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\323\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\324\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\325\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\326\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\327\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\330\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\331\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\332\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\333\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\334\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\335\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\336\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\337\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\340\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\341\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\342\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\343\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\344\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\345\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\346\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\347\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\350\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\352\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\353\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\354\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\355\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\356\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\357\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\361\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\362\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\363\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\364\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\366\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\367\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\370\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\371\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\372\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\373\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\374\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\375\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\376\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\377\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\022\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\023\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\026\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\035\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\037\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \010\000\000\000\000\000\000\000\000\000\000\000\000\000\000!\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\"\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000#\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000%\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000&\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\'\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000)\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000*\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000+\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000,\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000-\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000.\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\010\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\010\000\000\000\000\000\000\000\000\000\000\000\000\000\0001\010\000\000\000\000\000\000\000\000\000\000\000\000\000\0002\010\000\000\000\000\000\000\000\000\000\000\000\000\000\0003\010\000\000\000\000\000\000\000\000\000\000\000\000\000\0004\010\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\010\000\000\000\000\000\000\000\000\000\000\000\000\000\0006\010\000\000\000\000\000\000\000\000\000\000\000\000\000\0007\010\000\000\000\000\000\000\000\000\000\000\000\000\000\0008\010\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000:\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000;\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000=\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000>\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000?\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000A\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000B\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000C\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000D\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000E\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000F\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000G\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000H\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000I\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000J\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000K\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000L\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000N\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000O\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000P\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000Q\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000S\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000T\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000U\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000V\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000W\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000X\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000Y\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000Z\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000[\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\\\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000]\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000^\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000_\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000`\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\022\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\023\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\026\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\035\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\037\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \t\000\000\000\000\000\000\000\000\000\000\000\000\000\000!\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\"\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000#\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000%\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000&\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\'\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000)\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000*\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000+\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000,\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000-\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000.\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0001\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0002\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0003\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0004\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0006\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0007\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0008\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000:\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000;\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000=\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000>\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000?\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000A\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000B\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000C\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000D\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000E\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000F\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000G\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000H\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000I\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000J\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000K\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000L\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000N\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000O\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000P\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000Q\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000S\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000T\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000U\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000V\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000W\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000X\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000Y\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000Z\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000[\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\\\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000]\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000^\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000_\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000`\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\314\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\316\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\317\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\320\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\321\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\322\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\323\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\324\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\325\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\326\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\327\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\330\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\331\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\332\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\333\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\334\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\335\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\336\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\337\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\340\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\341\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\342\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\343\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\344\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\345\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\346\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\347\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\350\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\352\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\353\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\354\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\355\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\356\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\357\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\361\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\362\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\363\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\364\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\366\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\367\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\370\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\371\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\372\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\373\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\374\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\375\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\376\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\377\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\022\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\023\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\026\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\035\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\037\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \n\000\000\000\000\000\000\000\000\000\000\000\000\000\000!\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\"\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000#\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000%\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000&\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\'\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000)\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000*\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000+\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000,\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000-\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000.\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0001\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0002\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0003\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0004\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0006\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0007\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0008\n\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000:\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000;\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000=\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000>\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000?\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000A\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000B\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000C\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000D\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000E\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000F\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000G\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000H\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000I\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000J\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000K\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000L\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000N\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000O\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000P\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000Q\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000S\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000T\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000U\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000V\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000W\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000X\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000Y\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000Z\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000[\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\\\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000]\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000^\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000_\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000`\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\314\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\316\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\317\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\320\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\321\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\322\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\323\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\324\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\325\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\326\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\327\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\330\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\331\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\332\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\333\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\334\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\335\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\336\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\337\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\340\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\341\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\342\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\343\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\344\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\345\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\346\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\347\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\350\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\352\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\353\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\354\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\355\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\356\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\357\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\361\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\362\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\363\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\364\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\366\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\367\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\370\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\371\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\372\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\373\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\374\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\375\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\376\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\377\nt\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000~r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\022\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\023\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\026\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\035\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\037\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \r\000\000\000\000\000\000\000\000\000\000\000\000\000\000!\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\"\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000#\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000%\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000&\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\'\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000)\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000*\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000+\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000,\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000-\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000.\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\r\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\r\000\000\000\000\000\000\000\000\000\000\000\000\000\0001\r\000\000\000\000\000\000\000\000\000\000\000\000\000\0002\r\000\000\000\000\000\000\000\000\000\000\000\000\000\0003\r\000\000\000\000\000\000\000\000\000\000\000\000\000\0004\r\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\r\000\000\000\000\000\000\000\000\000\000\000\000\000\0006\r\000\000\000\000\000\000\000\000\000\000\000\000\000\0007\r\000\000\000\000\000\000\000\000\000\000\000\000\000\0008\r\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000:\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000;\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000=\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000>\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000?\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000A\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000B\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000C\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000D\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000E\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000F\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000G\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000H\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000I\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "SparseTensor/values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 3402
          }
        }
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Cooperative"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Apartment"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Multiple Occupancy"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Apartment"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Apartment"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Apartment"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Apartment"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Cooperative"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Apartment"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Other"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Apartment"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Miscellaneous"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Apartment"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Cooperative"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Apartment"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Apartment"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Apartment"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Apartment"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Miscellaneous"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Apartment"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Apartment"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Apartment"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Mobile / Manufactured"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Apartment"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Other"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Apartment"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Multiple Occupancy"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Apartment"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Apartment"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Apartment"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Apartment"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Apartment"
        string_val: "Condo"
        string_val: "Miscellaneous"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Apartment"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Apartment"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Apartment"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Apartment"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Apartment"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multiple Occupancy"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
      }
    }
  }
}
node {
  name: "SparseTensor/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "J\r\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3402
          }
        }
        tensor_content: "@T\tJ\300n\017J\000BoI\000\314XI\000|\222I\300\330\247I\200,\200I\000\366QI@\001\202I\000$\364I\200\324aI\200\237UI\000u(I\200\336\014I@\276\241I\340T\312I\200x\035I\000\232\rI\000G\206I\000`jH\200\177\007I\000\261\236I\300\026\361I@?KI\200S\270I\000\357\347I\000BoI\300\035\333I\200\237\325I\200\264\223I\000PCJ\000\004\246I\200>zI\200\275\320I \216\034J\000=[I\000@\234I\200\322\016I\000\243JI@\247\220I\000\033\267I\300\024\236I\200\016\005I\240\242\325I\000IYI\000\272\333I\200\313$I\200\246\277I\000\205\317I\300n\217K\200\027\302I\3009\203I\200Z\"I\000|\022J@\363-J\000G\206I\000\317\231I\200\251\200I\200jIJ\300`\273I\200\007\033I \'\364I\200\226\230I\000\272\333I\300n\217I\000\232\215I\000\326\003I\340\303\366I\200\226\030I\200=\022I\200\217\256I\000\261\036I\000\223#I\000\205\317H0\017\016J\300~\266I\000\252\264I`\300\204J\300\252\205I\200\t\356I\000\0337I\000\205\317I\200q\263I\200\007\033I\000IYI`0\234I\000~eI\000+\336I\200\226\230I@\307^J\200\246?I\2005=J\300K\375I\200\237\325I\300\\\222I\000\346*I\200x\235I\300<\301I\340\206\030J\000\261\236I\000\262\tI 9?J \006\tJ\000@\034I\000G\206I\000PCJ\000I\331I\200M9I\000\261\236I\240\330\232I\200jII \035\032J\000@\234I\300B\300I\000\330VI\000\357gI\000\310\257H\200jII\000\301EI\000\367\274I\200\'iI\200\t\356I\300\205\240I\000\r\343I\340\332\nJ\200\237UJ\200\324\341I\300+\257I \035\232I\300w\314I\200\tnI@M\037J\000\2149I\000\223#I\200\347II@T\tJ\200EdI\000\0337I@(\272I\200\224BI\200\324aI\200\304:I\200\027BI\200a\214I\000\272\333I\000\301EI\000gTI\200\353rI\200EdI\000\272[I\200\210DI\000\357gI\000\232\rI\200\373\034I@T\tJ@\251\343I\200jIJ\2005=I\000\0337I \253,J\000BoI\300%0I\300\330\'J\000\272[J\000\205\317I\000\326\003I\000G\006J\200\321\243I\000^\027I@M\237I\000\363\023I\300\r\264I\000|\222I\2005=J\240\310[I\200\3425I\200N$I\000h?I\200x\035I\300w\314I\200\322\216I\000\243JI\000G\206I\200\231VI\200\037\227I\200\313\244I``\306I\300\330\247I\200\217\256I\200\226\030J\300~\266I\300\272\254I\200Z\"I\200\210\304I@\n\277I\300\r\264I\000\272[I\300\033\210I\200\257|I\200\207YI\000\205OI\000\263qI\000\004\246I\200-hI\200\352\212I\000\033\267I\300\035\333I\200\255)I\000\272\333I@T\211I@\300tI\000\271pI\000\2149I@T\211I\200q3I\300\r\264I\200,\000J@\030\223I\000P\303I\000\355\024I\300\254\330I\200\360\tJ\000\346\252I\000X\230K\000\346\252I\300\225\307I\200\226\230I\000e\001I\2005\275I\000\326\003I\300\r\264I\200{\333I\300\024\236I\000\366QI\000$tJ\200\036,I\200,\200I\200>\372I@(\272I@r\204I\000BoI\000PCI\200\275\320I\000\346*J\000\272[I\000\272\333I\200G\272I\200j\311I\200\tnI\000\366QI\000P\303G\000\326\203I@\355\256I\000\357gI\300+\257I@\240\246I\000\346\252I\000`jI\000IYI\200\371\306I\200\262\275H\300\243\233I\340y/J\000\227LI\200FOI\000$\364I\000\261\236I@\307\336I\200,\200I@\020\276I\000P\303H\000\0337I\200\313\244I\340\227*J\2005=I\000\261\036J\000$tI\200&\201I\000|\222I\200\230kI@\343\006J\000\357gI\000G\006I\000\235\313I\200\313$I\000G\006I\000G\206I\200\020XI@\222\322I\000PCI\000$\364I\000\0337J\200\237UI\200\007\033J\200,\200J\200 \177I\200\353rI@\334\234I\000)\013I\300\330\247I\000G\206I\200\021CI\200\0001I\000\205\317I\000G\206I\000BoI\200,\000J\300\343\272I\000\033\267I\000G\206I\200c\337I\3009\203I\200\313$J\300\341\344I\200\362\\I\2005=J\200>\372I\300\304\037I\000\205OI\300K}J\000\301\305I\200\313$I\200\362\\I\300\r\264I\200a\214I\0006qI\300\243\233I@\211\225I\200RMI\000-4I\000$tK\320O\306I\000P\303I\000\2149I\300w\314I\000gTI\260\272\344J\200\200oI@T\tJ\200\371FI\200\210DI\200\016\005J@k\232I\200zpI\340\001CJ\000\357gI\000\033\267I\200\353rI\2005=I\200\353rI\340\026\001J\000\232\215H\000\0337J \355!J\300\243\233I\000\261\036I@\003\325I@?KJ\200\324aI\000\256]I@(\272I\200\022\256I\300n\217I\000$tI@\225\023J@\213hI\000~eI@H\013I\000P\303I\300\r\264I@\374jJ\000$\364I\000\272[I\000\243JI\300\243\233I\000\346*J\200\266fI\000$\364H\200Z\"I\000\0337I\000\205OJ\000\272[I $\004J\000\272[I\000|\222I\000\346\252I\000+^I\000\033\267I\200\322\216I@\276\241I\300\310\200I\000\223#I\000h?G\000PCI\300\252\205I\000\366QI@{\301I\300w\314I\200jII\200\360\211I\000\261\036I\200\021CI\200\275\320I\000G\206I\200\313$I\0002HI\000$\364H\000\0337I\200\275PI\000\233\365H\200$+I\200EdI\200\021CI\200>zI\200\313\244I\000\'5J\000\341\226H@T\tJ\200\226\230I\000|\222H@\211\025J\200\356\263H\000\366\321H\200\337tI\200\004ZI\300\341\344I\000W\255I@\211\225I\000G\206I\000G\206I@\204~I\000\013\220I\200dJI\300n\217J@(\272I\000$tI@T\211J\200\226\230I\300R\347I\000\272[I\200a\014I\000\232\rI\300n\217I@\016\350I\000\310/I\200\324\341I\000u(I\000+^I\000o\251I@\021\251I\000[VI\200,\000J\200\313\244I\000\214\271I\200\313\244I\200\272\022I@!\320I\300\306\252I\000\234`H\000$tI\240\"\342I\000\0337I\300\341dJ\000\272\333I\000\004&I\000\342\001I\300n\017J\300\310\200J\000\033\267I@\217\024I\300\330\247I\000\2307I\200\226\230I\000\223#I\000$\364I\000\261\036I\200\235\202I\200a\014J\000\261\036I\200a\014I\000\033\267I\000PCI@\r\200I \224\033J\200\036,I\240\002\024J\200,\200I\000\004\246I\200,\200I\240\345\265I\200\007\033I\200\205\006I\000\2149I@\363\255J@1wJ`\300\004J\200jIJ\200\177\207I\000\261\236I@\247\220I\340!\024K\300n\017J\200\255)I\000\346*I\200a\014I\000|\222I\200M\271H\200Z\"I\340y/K\300\243\233I\000\357\347I\200?eI\200,\000J\000\301EI\000\234`I\200\237UI`H\030J@\325\262I\300Y\321I\000G\006I\300\252\205I\200\324\341I\200jII\000\2149I\200\226\030I\000\272[I\000\r\343I\000\013\220I\200\351\037I\000+^Id\206SK\300\r\264I\000`jI\300B@J\300\211\311I\200\333KI\000G\206I\200\324aI\300\205\240I\020\375\003J\200a\214I\200\0001I\000|\222I\000\346*I\200\360\211I\000\366QI\200\tnI\200\001\234I\000\024\315I\200,\000J\000\310/I\000\0337I@J\336I\000$tI\200\260gI\200\0001I\000Q.H\200\275PI\200\324\341I@\001\202I\000\355\224H\000\261\036I\000\"\241I\000\270\210I@T\tJ\000\361=I\000\270\210I\300w\314I\200\201\332I\000\223#I\200,\200I\200\324aJ \035\032J\000G\206I@\211\025J\000\366QI\200\313$I\000\0179I\000@\034I\000\205OI\300\375\214I@\251\343I\000\261\236J\200,\000J\200\353rI\000\234\340H\000\357gI\360\215VI\200\275PI\000\346\252I\000P\303H\200>\372I\300\024\036I@N\212I`f\023J\000\272[I\200\246?I\200,\200I\200\3563J\300\\\222I\200 \177I\000P\303I\300a\246I\000\212\343H\300L\350I\340\223\201I\340\300\270I\200\353rI\200\237\325I\200\330\rI\200q3I\200\307xI\000G\006J\000\272[I@\211\225I\000\261\036J\000$tJ\000\357gI\000\206\272G|\304HK\000\360\322G\200a\214I\2005\275Ip\025\'K\300\330\'K\200e5I\000P\303I\200jII\000\346\252I\000G\206I\200\240@I\200Z\"I\200\021CI\200a\214I`\361\344I\200\231VI\000$tI@\267\267I\000@\234I\000\346*I\200I\020I`\323\351I\200C\221I\00092I\340-\022J\300n\217I\000\024MI\200\313\244I\000\357gI\200\0001I\000~\345H\000\314XI\300\330\'J\000G\006J\200\016\205I\000\204dI\340\030\324I\000\330\326H\200\000\261I\000\232\rI\200\371FI\000G\206I\000\234\340G@\363-J\000\232\rI\300\377\337I\000G\206I\000HnH\200LNI\000\214\271I\000\314XI\000G\006I\200\266fI\200,\200I\200#@I\000\0337I\300Y\321I\000\033\267I\200\324\341I\340\202lJ\000P\303I\000\357gI\240\315\007J@\007\201I\000\317\031I\300n\217I\200dJI\200\313\244I\000\330\326I\000\310\257H\200\3267I\200\310cI\20076H\000\357gI\200\201ZI\200\230kI\000\t:I\200\210\304I \207\262I\200\t\356I@\014\025I\300\350\316I\300\t\213I\000\321lI\000@\034I\000\261\236I\300\207\363I\000\272[J\320WCK\000u(I &WJ\000\325\230I\000\346\252I\2005\275I\000\256]I@\307^J\300\341\344I\300n\017J\300\357\270I\300\2341J\200j\311I\200\353rI`0\034J\300y\242I@\276\241I\000G\006J@\021\251I@T\211I\200\237UJ\200\217\256I\000\310/I\3002\231I@(\272I\000\350}I\200\0001J\000BoI\000\357gI\200\255)I\300\330\'J\000|\022I\300\375\214I\2007\023I\200\237UI\000\234\340I\000IYI\000\301EI\300\'\206I\200\210\304I\200\226\230I\000G\006J\300\r4J\200\tnI\000\272[I\200\237UI\200\004ZI\200\226\230I\3009\203I\300K\375I@\276\241I\000\013\020I@{\301I@u\302I\360\017\\J\200\237\325I\200>zI\000PCI \016tI`\365\020J@]\306J\200%\226I\000n>I\200\353rI`\242\211I\000\261\236I\000\243JI\000n\276I@\352\355I`\300\004J\000\261\036J`\302WJ\200\353rI\000\024\315I\000\232\215I\200\177\207I\000\346\252I\000\370\'I\000\346\252I\300B\300I\300x\267I\200\tnI@M\237I\000PCI\300\r\264I\200jII\200\237\325I\000\243JI\300\330\247I\000\0337J\300\004tI\200j\311I\000\346\252I\000|\222I\200\247*I\000P\303I\300K\375I\000|\022J\000)\013I\000\261\036I\000\357gI\000\330VI\000\261\236I\000\272\333H@\307\336I\200j\311I\000\033\267I\000G\206I\300\366\242I\000PCI\000G\006J\000\205\317I@\363\255I\300P\224I\000\330VI\000u(I\200\177\207I\300\314\020I\200\0001I\000\261\236I@k\232I\300\024\236I\300w\314I\300\321=J\000\346\252I\000@\234I\200,\000J\200\000\261I\000\033\267I\200\0001I\200>zJ\200jII\200\335!I\000\234\340I\200a\014I\000\270\010I\000\346\252H\200\371\306I\000e\001I\200\'iI\200\226\030I\200jII\200\256\024I\000G\206I\200\235\002I\200\304:I\000\"!I\200x\235I\200Z\242I\000G\206I\000\364{H\200>\372I \263\001J\000\346*J\000W-I\000\206:H\000K\257I\200\226\230I@\276\241I\300\341\344I\300B\300J\000\243JI\000\261\036I\200\177\207I\200\226\030J\000|\222I\200S8I\000`jH\200c_I\000\357gI\000PCI\000\232\215I\000gTI\200\313\244I\000\317\031J\240u\351I\000$\364I\000\357gJ\000|\022J\000\033\267I@\343\206I\000W\255I\000\357gI\200\304:I\200j\311I\200\324\341I\200\177\207I\000P\303I\200\324aI\200\177\207I\200\226\030I\000PCI\200\217.I\300\330\247I\200\246?I\000\004&I\000\261\236I\000\"\241I \361JJ\000\2524I\000\243JI\000\357\347I@\363\255I\300\024\236I\300\302\001J\200\351\237I@\361\327I\000PCI\200\324\341I\200\000\261I\200\0001J@\222RJ\000P\303I\000gTI\300\306*I@(\272J\200,\000J\000\207%I\200\200oI \263\201J\000G\206I\200Z\"I@\222\322I\200WaI\200jII\200%\226I\300\r\264I\000|\222I@\367VI\300n\217I\200\322\016I\200\3425I\000\003;I\200>zI\000\355\024I\200\235\002I@\341\260I\200\226\230I\00092I\200\240@I\200j\311I`3\332I\000BoI\000\357\347I\300Y\321I\000\310/I\200,\200I\200,\000I\000|\222I\300n\217I\200j\311I\200a\014I\200c_I\200\310cI\000\032LH\200\226\030JP?\223J\200,\200I\000\033\267I\200\0001J\200\264\023I@\343\206I\300w\314I\200a\214I\000\205OI\200\275PI\340\236\024J\200%\026I\200a\214I\000~eI\300\252\205I\000PCJ\000|\222I@\276\241I\200\000\261I\300p\342I\200,\000J`\204\016J\200a\214I\3009\003J\300?\364I\240^\330I\000|\222I\000IYI\300%0I`\300\004J\000&JI\000BoI\000\356|H\200\230kI\000\272\333I\300B\300I\200]\340I@\2677I\200\361qI\000\000zF\000\177\320H\000\366QI\200n\362I\000\"\241I\200\232\301H\200\304\272I\000\261\236I\300\207sI\000\261\036I\200C\221I@6\216I\000\0337J\000\317\231I\3009\003J\200,\000J\000G\006I\000\024\315I\000$\364H\300w\314I\200a\214I\000|\022I\000\356\374I\300I\252I\000~eI@\363-J\300\026\361I\000\272[I\000\232\215I\300B\300I\300\r4J\000\366QI\200\006\260I\000|\222I\000h?I\200\177\007I\200\345sI`O\202I\000\013\020I\000^\027I\200a\214I\200zpI\000\346*I\200a\214I\200\342\265I\200,\000I`\365\220J@~\202I\200>zI\000$tI`\242\tJ@T\tJ\240l,J\000e\001J\000\346*I\000\205OI\200\353rI@T\tJ\300n\017J@\n?J@\255\217I\000\205OI\200a\214I\200\010\206I\200\237\325I\200\353rI\000\024\315I\200\255\251I\200\3721I@\211\025J\000\013\220I@\276\241I\000\301EI@\202\253I\200\217.I\000\024MI\000E\260H\000G\006J\200j\311I\300\214\212I\200\353rI\000$tI@\211\225I\000\357\347I\000|\222I\200\020\330I\000N\355H\000P\303H\000\0337I\200r\036I\000\205OI\000BoI \247\003J\200\226\230I\200,\000J\000\270\010I\200\353rI\000\317\031I\200\324\341I\000G\206I\300\'\206I@\211\225I\200>\372I\200\237\325I@\343\206I\000A\007I\200F\317H@(\272I\000\215\244H\300\003\214I\000\301\305H\200S\270I\000\350}I\000IYI@T\211I\000\2149I\000\273FI@\003UI\000\357\347H\000^\027J0K\204J`(\307I\300\214\212I\200\026WI\000\004\246I\000\310/I\200q\263I\200\370[I\000G\206I\000$tI\000\371\022J\300;VI\000TlH\000\272\333H\200\016\205I\000\272\333I\200,\000J\000\0337I\300\303\351I\200\264\223I\200j\311I\200c_I\200\003\357I\200\313$J\000\366QI@\003UI`\034IJ\000\361=I\000$\364I\000\350\375H\200^KI\200a\214I@\254\244I\000\272\333I\000P\303I\200\226\230I\340\323\240I\000\0337I\200\237\325I\000\230\267H\000\346\252J\200\237UJ\000G\006J\240\232NJ\000\272[I\000\205\317I\200\226\230I\000\357gI\200\264\223I\300;\326I\200\324\341I\000\"!I &WJ\200\313$J\200-hI\200\324aI\300\\\222I\300\272\254I\200\226\230I\000\321lI\200\226\230I\300+\257I\200\0001I\000\024MI\300\272\254I\000\272[I\200\237\325I\200j\311I\000\243\312I@\211\225I\200\260gI\2005=I\200\237UI\200jII\000\367\274I\3009\203I\000G\006J\000\310/I\200\303OI\200\313\244I\000P\303I@{\301I\000^\227I\000`jH\200S8I\000.\037I\000\261\236I\200jII\000\004&I\000\227LI\200\273zI\000W-I\000\024\315I\200<\'I\240\014\356I\200\212\032I\000^\227I\000BoI\000\"\241I\000\364{I\200\274eI\000|\022J\200\0001J\000\261\036J\000|\222I\000\317\031I\200\211\257I@\213\350I\200\226\230I\200\260gI\200\217\256I@\363-J\200\020XI\000\004\246I\000P\303I\200\264\023I\200\210\304I\000\346\252I\200a\214I\000\205\317I\200\315wI@\354\303I\200\351\237I\000\346*I\000\272[I\000\366QI\300\254\330I\000A\207I\000$tI\340i\010J\200\016\205I@M\037I\200\232AI@r\204I\200\351\237Ip\257\267J\200>zI\240\014\356I\000`jI\200\244iI\000\261\036I\000\272[I\200\376ZI\200\201ZI\200\257|I@\241\221I\200<\247I\300\330\'J@\342\033I\000\010\317I\000\326\203I\000\346*J\200zpI\300\033\210I\300\301\226I\200\230kI\000TlI@\350\032I\200>zJ\000\357gI\000\361=I\000G\006Jp\252#J\200\tnI\000\346\252I\200\275PI\300\366\242I\200\226\230I\200\334\266I\300\221\236I\200\255\251H\200Z\"I\000\225vI\000|\222I@\333\261I@\265\341I@\203\026I\340\332\212J\200\373\034I\200\353rI\200\210\304I\200\226\030J@\211\225I\000\371\222I@G\240I\300`\273I\000\207%I\000IYI\000\'5I\200j\311I\200q3I\000u\250I\200\237UI\200e5I\000\205OI\000\261\236I\200\351\237I\200\t\356I\000\265GI\200\204\233I\000|\222I\000\346\252I\200EdI\000G\006I\000W\255I\000\326\203I@6\216I\300\366\242I\3002\031J\000\301\305I\300n\017J\000W-I\0009\262I\200\3425I@\006\026I\000u(I\000\261\236I\000\357gI\000\305\356I\000|\222I`1\007J\200%\026I\200\324aI\000|\022J\200Z\242I\000\366QI\000\357\347I\200l\037I\200\t\356I\200\237\325I@k\032J\000\270\210I\200\267\321I\300\243\233I@#\246I\340\035\350I\2005=I@\314rI@T\211I\200,\000J@\n\277I\000\0337J\300\207\363I\000\2149I\000u(I\000~eI\000\rcI\000|\022J\000$tI\200\304:I\000\272[I\200j\311I\300\243\233J\000|\022J\200%\026I\000w{I\200<\247I\000^\027I@{AI\340\017\227J\300\024\036I@\222\322I\200\354\335I@\276\241I\300\r\264I\000\357gI\000\013\020I\000NmI\000\357gI\000\326\203I\000)\213I\300`\273I\000\013\220I\200a\014J@1wJ\0000rI\000n>I@V\334I\200\t\356I@\331[I@(\272I\200\264\023J\000IYI\000\366QI@1\367J\000\223#I\300\243\033J\000\205OJ\000\033\267I\360\305\224I\300}\313I\300~\266I\200\226\230I\3009\003J\200,\200I\200jII\000\247sI \035\232I\000\007\344I\200\313$I\000\252\264I\000|\222I\000\346*I\300n\217I\200\226\230I@\212\200I@{\301I\200\230kI\000+^I\200+\225H\200,\200I\200\013DI\200\226\230I\240D\211I\200j\311I\000G\206I\260Z]I\000G\206I\000@\234I\200\313$J\000\0337J\000\0337J\300\243\033J\000\272\333I\000\205\317I\000|\222I\000@\234G\000n>I\000\0337J\200\313$J\200,\200I\000\357gI@\267\267I\000\033\267H\000$tI \377\236I\000\223#I\000\301\305I@]\306I\000|\022I\000|\022J\200\324\341I\2407 J\000n>I\300\337\221I\200\t\356I\300\330\247I\200>zJ\000\375\273H\000\261\036J\200!jI\200\3563I@]\306I@\363\255I\000G\006J\200\210\304I\200\237UI\000G\206I\000|\222I\000\357\347I\000\214\271I\000\223\243H\3002\231I@\003\325I@\276!J\000\2307G\200\237\325I\000G\206I\000\"!I\000\363\223H\000\225vI\300iFI\200\036\254I\200\020XI\000\254\nG\000\r\343I\200\036\254I\200\tnI@*\220I\200\177\207I\000\033\267I\200\230kI\000\263\361H\240\023\246I\000`\352I\000IYI\240u\351J\300w\314I\200a\214I\200\tnI\3009\203I\300\207\363I\200\315wI\300E\201I\000TlI \200HJ\000$\364I\300\254\330I\200\327\"I\000|\222I\300n\217I\000^\227I\200LNI\200a\214I\200\255)I\000\346\252I@\222\322I\200\000\261I\200>zJ@M\237I\200z\360I\000\024MI\000\346\252I@\347/J\300\243\233I\200\313\244I\2005=I\300\243\233I\000e\201I\300\225\307I@]\306I\000@\234I\000\261\036J\000\261\036J\000G\206I\000PCI\200c_I\200-hI@\345\331I\200\371FI\200\360\tI\200A;Ip\244\307I\000|\222I\000\357\347I@\374jJ\000^\027I\200\264\023J\000\247sI\000\225\366H\000@\034I\0002\310I@\354\303I\000\346\252I\200j\311I\300P\224I\000@\234I@!\320I\200\tnI\000P\303I\000|\222H\200<\247I\000\337\300I\000\326\203I\000\357\347I\200\333KI\000\357\347I\200f\240H\200\246?I\200\237UI\000\261\236H\200\370[I\300\r\264I R&J\000\033\267I\000\013\220I\000|\222I\260\203\205J@\334\234I\000\332,I\200\3346I@T\211I\0251\274K\000\355\024I@(:J\200\000\261I\000\357gI\000\272[I\200\226\030J\000@\034J\000PCJ\000\273FI\200o]I@\267\267I\000rgH\000\0337I\000\205\317I\3001\256I\000\261\036I\200\353rI\000\346*I\320\305\007J\000\357\347I\000\250^I\000\0337J\000\346*I\200\333KI\300\304TI`_)J\000\033\267H@(\272I\200zpI\000\0337I\000$tJ\200\342\265I\200\353rI\000W-I\200\3267I\200\322\216I\000\243\312I\240\257\014J\000u\250I0AZI\300\366\"I\000\272\333I\000PCJ\300wLJ\200\371\306I@`\007I\200\246\277I\000$\364H\200\226\230I\200\313\244I\200,\200I\000G\206I\000c+J@B\214Ip\325\007J\200\360\tJ\000\205\317I\000\013\020I\300\272\254I\300\006\312I\000\207%I\000$\364H\200.\323I\300\370\365I\000@\234I \263\201I\200>zI\0006qI\000\0337I\000\033\267I\000c+I\000\205OJ\200\360\tI\000PCI\000P\303I\200%\226I\000K/I\000\334\202I\200\210DI\000\324-I\000G\206I\200\313$I \225\006J\000|\022I@d\260I\200\264\223I\300\374!I\300n\217I\000\243JI\000\0337I\000 KH\000\004\246H\200%\226I\200q3I\000\243JI\000+^I@r\204I\000\0337I\200\260gI\2005\275I\200\226\230I\000\013\220I\000\033\267I\000P\303I@T\tJ\300\375\014J\300n\217J@(\272I\200\003YI\000\272\333I\200\t\356I\200\036\254I\300+\257I\200\264\023I@\375UI\300\243\233I\200\021CI\000|\222I\000n>I\000~eI\000|\222I@\363\255I\200\036\254I\300\263\302I\000\261\236I\2005\275I\000\346\252I\000)\013I\000\2524I\000\317\031I\000`\352H\200|\306I\200\237UI\000\0337I\200\t\356I\000e\201I\000\205\317I\200\tnI\000\"\241I\000\270\210I\000\346\252I\000\0337J@\255\217I\0005\tI@T\tJ\00092I\200\324aJ\300\243\233I\000\330\326H\200\027\302I\200\276;I\000\357gI\200j\311I\000\337\300I\200\235\202I\000\352SI\300\214\212I\000\350}I\200\333KI\000\004\246I\000|\222I@\276\241I\300$\305I\000G\206I\200\371FI\240^\351H\000G\206I`\300\004J\000\033\267I\000\rcI\000\232\rI\340\030\324I\300\330\'J\200\315wI\000\347\225H\200\\uI\300\000\313I\000\214\271I\000gTI\000$\364I\200a\014J\200\304:I\200C\221H\200\237\325I\000$\364I\000\234\340H@\211\225I\200\021CI\200C\221I\200\0001I\000\243JI@Y\235I\000\234`I\000G\206I \361JJ\300+\257I\000G\006J@\363\255I\00092I\240\227\020J\300\271AI\200\360\tI\200\246\277I\200\\\365I@\202\253I\000\346*J\300b\221I@w\230I@6\216I\300*\304Ip\253\216J\000\261\236I\000-4I\000\247sI\000|\222I\000\2228I\000\346\252I\200S8I\200\275\320I\000\0337J@\033\321I\000\013\220I@\352\355I\000\013\220I\000n\276I\200\374\207I\200,\200I@1\367I\000\346\252I\000P\303I\000$tH\200j\311I\200\246?I\000\261\236I\000\006yI\0002HI\000\"\241I\200\260gI\200\0001I\240\330\232I\000\346\252I\300\r\264I \207\262I@\211\225I\0002HI\000\261\036I@1wJ`Y\334I@T\tJ\200\226\030I@]\306J\000\346\252I\200a\214I\000PCH@]\306I\000R\031I\000\272\333H\300\365!I@T\211I\200\331uI\200\226\230I\200C\221I@u\302I\000x\346I\2005=I\200\362\\I\200\275\320I\000\036\365G\200\226\230I\000G\206I\200\247*I@\211\225I\200\237UI@\203\026I\000\275\034H\000|\222I\200j\311I\000@\034J\000\345?I\200,\000J\200\353rI@\345\331I\000\346\252I\000\234`I\200\333KI\200\016\005I\200\237UI\000G\206I\000G\206I\000\235KI\300\221\236I\200\000\261I\200\237\325J\2005=I\200\313\244I\000\225\366H\200y\010I\000\0337I@\204~I\200\tnJ\000^\227I\000PCI\000IYI@\276\241I\000\205\317I\000|\222I\2005=I\200\336\014I@\r\200I\000\006yI\200\t\356I@k\232I\000|\022J\310\222\240I\300\026\361I\200\243\001J\2005\275I\200\201\332I\300\252\205I\000:\235I\000\307DI\000\006yI\200\371FI\000\223#I \274\276I\000-4I\200\362\\J\000G\206I\200\353rI@\363-J\340\343GJ\300\375\214I\200a\014J\300w\314I\200\313$J\000\2149I\000w{I\000\357gJ\000\346*J\200A;I\000\240\014I\00092I\000\022wH\000P\303I\0000\362G\000TlI\0007\\I\340\030TJ\000$\364I\240SEJ\000\205\317I\300\\\222I\000@\034I\200\226\230I\000P\303I\300\217HI\000\357gI\200\201ZI\200a\214I\000|\222I\200S\270I\000P\303I\200H\245H\000\357\347I\000\024MI\2005\275I\000\0337J\000P\303I\000\261\236I\300\371GI\200\340\326H\200\226\030I@\231\274I\200,\200I\300g\245I\300\r\264I@r\204I\000\261\236I`\2245J@\276\241I\200\177\207I\300\2341J\200\177\207I\200\304\272I\200jIIUsKK@\211\225I\000K\257I\000$\364I\000I\331I\000G\206I\000\346\252I\300>\227I\000\301EI \361JJ\3409\220I\000\256]I\300\341\344I\000\366QI\200\020XI\000\346*J\000\205\317I\000\024MI\200G:I\000&JI\200jII\000\223\243I\200C\021J\000\377\021I\000\333\227I\200\020XI\300%0I\200\237\325I\300+\257I\200\0001I\200\216CI\240\335\256I\200\000\261I\300u\366I \246\230I \2072J \261+J\000\223\243I\200zpI\300w\314I\000\330VI@\035\'I\200\010\206I\300\0016I\300]zI\000\205\317I\000JDI\000G\206I\200\324\341I\000\323BI\200\313\244I\000\357gI\200\0001I\200>zI\200,\200I\200\237\325I\300\243\033J\00092I\00092I\200\351\237I\000\360RH@T\211I\000\252\264I@k\232I\200j\311I\000\033\267I\200\246\277I\300\033\210I\000c+I@\003\325I\240|SJ\200>\372I\200\226\030J\200>\372I\200\226\030J \035\032J\000\322\327I\000G\006J@\222\322I\300g%J\000\346\252I\200a\214I\0001\335H\200\226\030I\200\0001I@\276!J\000\326\203I\000\033\267I@k\232I\200,\200I\200\237\325I\000\205OI\000y\321I\000\261\036J\000\0179I\000\317\231I\000PCJ\200\0001J\000\346\252I\000G\206I\340\332\nJ\300\010\240I\300<\301I\200\237\325I\200\226\030J\200\0001I\000!6H\000\024MI\000P\303I\000$tI\000+^H\300\270VI0\354\210I\300\346\212I\200\tnI\200>zI\300\211\311I\000u(H\000\357gI\000\377\021I@T\tJ\200\315wI\000\261\236I\000\330\326I\000|\222I\300\033\210I@?\313I\200\313\244I\000|\022J\300\r\264I@\n\277I\000\347\225H\200\237\325I\200\226\230I\200\343 I\000G\206I\000G\006J\200\342\265I\000\366\321I\300\366\242I@\211\225I\000\263qI\300D\013I\200\274eI\200>\372I\200\371FI\200a\014I\000u(I@\202\253I\000\234`I\200\362\\I\200\t\356I\000@\234I\2005=I\000\342hI\000\272\333I\000\346\252I\000P\303H\200FOI\000W\255I\000\243JI@\276!J\200\257\374I@\211\025J\300\205\240I\200,\000J\3009\003J\200\264\223I\000\261\236I\200\226\230I\000\205\317I\300\344%I\200\371FI\000w{I\200\000\261J\300\243\233I\000\357\347I\000q\374I\000\232\215I\200jII\200{[I\200\000\261I\0002\310H\200\275\320I\300\236\207I\200\333\313I\000$tI\200jIJ\200\255)I\300\254\330I\000\330VI\000\004\246I@]\306I\000yQI@\305\213I\200\256\224I\200q\263I@\222\322I\300\243\233I\200\237UI\000\326\003I\000\357gI@\016hI\000\276\207I@]\306J\300\252\205I\000\024MI@\244OI\300\222\211I\000\026#I\000\325\230H@\211\225I@B\214I\000PCI\200{[I\200\264\023I\300t\016I\300\350\316I\000\261\036J\200\360\tI@\363\255I\000PCJ\000\357gI\200<\'I\000*\363G\000\321lI\000\346\252I\300\375\214I\300\243\233I\200\313\244I\000\004\246I\200\254>J\000\272[I\000\261\036J\200\367pI\200\\uI\000PCI\000\330VI\000\232\215I\000\346\252I\200<\'I\2007\223I\000\272[I\000$\364I\200\371FI\000u\250I\000$\364I\000\357gI\2002|I\000\346\252I\000\205\317I\000\205OI\000\330\326H\000\033\267I\200x\035I\300K\375I\300\254XJ@]FJ\000\346*I\000G\006J\200\t\356H\000\263qI\000\rcI\000<\360I\000\257HI\200\027BI\200\177\207I \377\236I\000\2149I\000\r\343I\200a\014J\000)\213I \350\rJ\2005\275I\000\357\347I\200\255)I\000PCI\000\243\312I\200\226\230I\300~\266I\200a\214J\200\233,I\000\235KI\000\201&I\200\333KI\200\0001J\240\315\007J\200a\214I0\017\016J\000$tI\000|\022I@T\211I\300\254\330I\300I\252I\200w2I\000\0337J\340\200\031J\200\027BI\000\243\312I\000G\206I\000\261\036I\000n>I\340\332\nJ\000W-I\200\3425I@]\306I\000\243JI\200\346^I\200\304:I\200a\214I\200\333KI\2005=J@\372\027I\000\205OI\200c_I\000\0337I\000|\022I\200\237\325I\200\255\251I\000\375;I@\202\253I\000\301EI\000\024MI\2005\275I\200,\200I \003\310I\000$\364I\000\033\267I\000\335jI\000\"\241I\000\346\252I\000+\336I\200\210DI\000\233uI\000\366QI\340\332\212I\000\033\267I\000)\013I\200(TI\000NmI\000\0337J\200T#I\200\304:I\000\263qI\200q\263I\300\350\316I\200Z\242I\000\"\241I\000\270\010I\200,\200I@]FJ\200\333KI\000\272\333I@T\211I\200\3721I\200\237\325I\200\'iI\200\000\261I\200a\014J\200\036,I\000\261\236I\000PCI@\267\267I\200j\311I \200HJ\200a\214I\300\024\236I\2005=I\000\205OI\240\314\034J\300\214\nJ\200\313$J\000\004\246I\000\225vH\300I\252I\230\277\240I\200\226\030I\000|\222I\200\315wI\200\tnI\200,\000I\000\"!I\200zpI\300\312\323I\200=\222I\000b@I\000\0337I\200,\200I\000\261\036I\000\326\203I\200\313$J\000$tI\000P\303I`7\006J\300\266\203I\200,\000J\000\261\236I\000\0337J\000\205OI@(\272I\000\024MI\200\351\237I@\211\225I@T\tJ\240\002\024J\200,\200I\200\257|I\300\353\217I\300\243\033J\340\370\205I\000\357gJ\200,\000J\240z\000J\200btI@\363\255I\300\254\330I\000|\222I\3000CI\300\003\214I\200x\035I\000P\303H\300\330\'J\000G\206I\0002HI\000\2524I\000\013\220I\000P\303G\200\276;I\000G\006H\200\353rI\000|\022J\300\330\247I\200a\214I\300\272\254I\000\261\236I\200\tnI\200\210\304I\000|\222I\000\"\241I\000\272[I\000\337@I\200.SI\000n>I\300\263\302I\000\033\267I\360#tI\000\357gI\000\346*J@\363-J\340\343GJ@\211\225I\200\324\341I\000\261\236I\000\205OI@F\265I\000\234`I@T\tJ\000\346\252I\000\317\231I`\322\001J@\363\255Ip\210\030J\000gTI\000\351hI\000\"!I\000|\222I\200\217.I\200\333KI\200zpI\000\177\320I\200\226\230I\300\214\212I\000\246\013I\0005\tI\200\325LI\200\360\tJ\300n\017J\000\0337I\200\016\205I\200\013DI\000$\364H\000\0337I@\211\225I\000\346\252I\000PCJ\200\237\325I@6\016I\000\261\036I\000\0337I@\325\262I@\334\234I\200,\200I\200\324\341I\000G\206I\300\026\361I\000$\364J\200y\010I\000\300ZH\2005\275I@\240&I@\366\353I\000+\336I\200\237UI\000IYI\200\226\230I\000u\250I\200\007\033I\000G\206I\300\310\000J\000\033\267I\000P\303I\000\357\347I@\211\225I\000|\222J\300\225\307I\000\375\273I\000\205OI\2005=I\000\366\321H\000P\303I\2005=J\200\247*I\300\330\'J\000\261\236I\000\232\215I\200S8I\000[VI\300\214\212I\300\243\233I\000\272[I\000$\364I\200\333KI\000G\206I\200jIJ\200\324\341I\000`jI\200\237UI\200\2030I\000\033\267I\000\223\230I\000\rcI\000\232\215I\200\0001J\000P\303I\2407 J\000\205\317I@\363-J\200\353rI\300\330\'J\240(aJ@\222RJ@\211\225I\340D\243J\000)\213I@\343\206I\000e\201I\200\226\230I\000PCJ\000G\206J\300\214\212I\000|\022J\200\360\211IP\026\005J@\357\204I@\001\202I\200c_I\200\t\356I@\003\325I\240\273\212I\200\tnI\300\225\307I\200LNI\300\252\205I\200\t\356I\200\tnI\300I\252I\300y\242I@\363\255I\300wLJ\200S8I\000\261\036I\000`jH\300/\330I\000|\222H\200\232AI\300\341\344J\000\337@I\200EdI\200a\014J\300i\370I\200\345sI\000\346\252Hpo\230J\200\237\325I\000\203yI\300\234\261I\000\033\267I\000-4I@\211\225I\000|\222I\300n\217I\000A\207I\200\303\317I\000\346\252H\300\024\036I\200j\311I\000b@I\200c\337I\000\261\036I\000\366QI\340\017\027J\300\307\225I`\376MJp\201\026I\2005=I\2005=J\200\0001I\000\337@I\000\233uI\300Q\374I \246\030J\000\004\246I\000e\201I\000|\222I\200\333\313I\200jII\200\000\261I\000IYI\200\254>I\200\210DI\200\226\230I\000\232\215I\000~\345I@\211\025J &WJ\200,\200I\200\000\261I\000\257HI\300\341\344J\200\265{I\000\243JI\200?eI\000\016\316H\200\237UI\300~\266I \245-J\200\371FI@]\306K\300w\314I\000\205\317I\000\006yI\000\227LI\000\006\371I@\006\026I`\213\365I@\200UI@\307\336I\000\314XI\200\371FI\300\243\233I\000\366QI\000\000\372H\200\351\237I\000JDI\000PCI\000gTI\300\254\330I\000\207%I\000^\027I\000\346*I\000\261\036J \350\rJ\000\326\203I\200\032\003I\000\205\317I\200dJI\000\261\236H@T\tJ\200\217.I\200EdI\000*\363I\000\"\241I@\211\225I\200\317MI\300\024\236I@\276\241I\000|\022I\200\003oI\200\000\261I\000\346*J\200\226\230I\200,\200I\300\330\247I\000\375;I\200\313\244I\000|\222I\000\261\236I\000\346*I\000\261\036I\200\315\367I\200\210\304I\200\226\030I\200\021CI\300\251\232I\000\261\036I\300I\252I\000\324-I\200\373\034I\000\033\267I@\363\255I@(\272I@?\313I\200\260gI\000\2524I@]\306I\200\226\030J@\363-J@T\tJ\000\0337H@\213hI\200[\215I@]\306I\200,\200I\200\353rI\000\261\036J\000\013\220I\000\360\271G@\030\023J\300\341dJ\200\036\254I@M\037I\2005=I@\325\262I\300\373\266I@]FJ\000G\206I\000|\222I\200\177\207I\200\353rI\000\261\036I@\211\025J@M\037J\340\370\005J\000\330VI\200\3346I\000\002PH\000n>I\000\272\333I\000PCJ\200a\014J\300w\314I\200a\214I\200q3I\000!\266I\200\241\253I\200c_I\200,\200I\000PCI\200j\311I\200j\311I\200\217.I\200,\200I\000\2149I\00092I\000\375;I\000\366QI\000JDI@\n\277I\000\272[J\000\205\317I\000\024MI@T\211K\200,\200I \263\001J\200>\372I\200FOI\000\261\236I\000~eI\240\261\337I\2005\275I\200\020XI\000\326\003I\300\330\247I\000W\255I\200c_I@\n\277I@T\211I\200\211/I\200jII\000\2524I@\026\275I\200\353rI\200,\200I\000\346*I\000NmI\200\324aI\000\261\236I\000PCJ\200\226\230I\200{[I\210\246\277I\000\rcI\000\033\267I@(\272I\000\261\036I\000|\222I\000$tJ\200\020XI\000G\006J\200\362\334I\000\320\204I\000\357gI\000\346\252I\200\0001J\200\304\272I\200\3504I\000\314XI\200\3346I\000\346\252I\200\226\030I\000\"\241I\200i^I\000\033\267I\000+^I\340\332\212I\000G\006I\000G\206I\300\214\212I\000\214\271I\200S8J\340\257\330I@(\272I\200,\200I\000\321lH\000\234`I@1\367I\200\333KI@\276\241I\000\232\rI\300n\217I\200\313\244I\200\027BI@\211\225J\000K/I\000@\234I \275\333I\200jIJ\000+^I\200\\\365I\000^\027I\200a\214I\200j\311I\200\226\230I\000|\222I\000\357\347I\000\310\257H\300w\314I\000@\234I\000>FIpx\325J\300\341\344I\300\t\013J\000\243JI\200\210\304I\000\366QI\000\214\271I@\222\322I`\365\020J\000\247sI\000\261\036J\200\007\033I\240\326DJ@\021\251I\200\237UI\000\rcI\200\313\244I\200\324aI\200\210DI@r\204I\200a\014J\000\0337J\000\261\036J\000\357\347I\200\317MI\200,\000I\000$tI\000\277oI\000$tI\000~\345I\200\237UI\000\332\254H\000\301\305I\300B\300J\300\321$I@\350\232I@T\tJ\200\t\356I\000$tJ\000w\373I\000\317\031H\200Z\242I\000\321\354H\200\226\230I\000\261\236I@\r\200I\000\357gI\200\355HI\000\004\246I\330;\242I\200LNI\000~eI\000e\201I\200\\uI\000\272\333I\200a\014J\2005\275I\000\261\236I\200c_I\000\346*I\200zpI@\031{I\000\033\267I\300\033\210I\000\272[J\000\033\267I\000\272\333I\000\323BI@\211\225I\200\226\030J\200\315wI\000\024\315I\000\215\244I@?\313I\300\r\264I\300\310\200I\300\375\014J\000\"!I\340\3146J\200\313$J\000@\234I\000:\035H\000\0337I\000\272\333I\000\261\236I\300\207\363I\3009\003J\200\255\251I\200\tnI\200\333KI\300\214\212I@6\216I\300%0I\000\033\267I\000|\222I\000\261\236I\000\360RH@i\304I@T\211I\200jII\000\270\210I\200\0001I\200\246?I\000PCI\200<\'I\000\346*J\000G\206I\3005WI\200\200oI\2005=I\000b\300I@\244\317I\200a\014J\020\205\027J\300\r\264I\000G\206I\200\021CI\000G\206I\000\317\231I\000\001eI\000\261\236I\200\325LI\000\335\352H@\211\225J\300\232\333I\200\304:I\000#\214I\200\036\254I\200%\026I\240\353\002J\300\252\005J\000\030vI\200<\247I\300B\300I\000\300ZF\000|\222J\300\004\364I\300n\017J\000P\303I\200\235\202I\200\036\254I\000\317\031I\200,\200I\300\033\210I\200\226\030J\300\024\236I\200q3I\000\317\231I\000\"\241I\000n>I\000|\022I\200a\214I\300\207\363I\300\254\330I\300P\224I\200\373\034I\260$\375J\000\261\236I\300\350\316I`\271\032J\0004\036I\000\205OI\000\0337I\000\205OI\200FOI\000\033\267H\200\255)I\300\r\264I\200x\235I\000PCI\000\346\252I\200,\200I\300f\272I\000^\027I\000\205OI\200\315wI\200j\311I\200\264\023I\000\033\267I\300\245\356I`\2620J@\202\253Ip\251\251I@\276\241I\300%0I\200\217.I\000\205\317I\300\341dJ\200a\214I\000\024\315I\200\t\356I\000\272[I\000\272[I\200,\200I\000K/I\200\277&I\240\013QJ\200\000\261I@(\272I\300\010\240I\000\270\210I\000\0337I\000\013\220I\300B@J\000\227LI\300n\017J\200 \202H\000BoI\200\226\030J\200\324aI\300n\217I\300\377_I\200,\200I\200j\311I\300\214\212I@\211\025J\000\033\267I\200!jI\200\313$I\200\371FI@\231\274I@{\301I\000W-J\000\"!I\000\307DI\200jII\000\270\010I\200.SI\200LNI@T\tI\200\000\261I\000)\213I\200S8I@\251cJ\000\375;I`\311AJ@\030\023J\200\\\365I\200btI@w\230I\200M9I\200\324aI\000\346*JpitI\000G\006I\200\313\244I\200\313\244I\000\250^I\000@\034I\000|\222I@\202\253I\000e\201I\300P\224I\000\205\317I\200\313$J\200\201\332I\000\346*I\000G\206I\200\036\254I\200\007\233H\000\366QI\000|\222I\300`\273I\300\243\033J\000\0337I\200o]I@\211\225I@K\311I\000\205\317I\000\330VI\000\357gI\000\"!I\000$tI\200x\235I\200\237\325I\200\236\352Ipo\230J\000\346*I\000$\364H\000$tI\300\252\205I\200\003oI\000\330VI\200)\277I\200\316bI\000\366\321I\200\222lI\200a\014I\000\rcI\200\016\005I\300P\224I\200\255)I\000\272\333I@p\256I@\363\255I\200\324\341I\000\355\224I\000\"!I\200\275PI\000G\206I\000e\201I\200\353rI@(\272I\200\226\230I\200\313$J`\220\014J\200\360\tI\000\310/I\200\324aI\000w{I@a\357I\200a\014J\300\243\233I\000u(I\200\000\261I\000\227LI\300\207\363I@\343\206I\200{[I@]\306I\200zpI\000\330VI\000\330\326I\2005=I\200\304:I@\276\241I\340\235\251I\000\272[I\000\205\317I\000\261\236I\240\257\014J\000$\364H\300B@J\000\366QI\000\0337J\000$tI\00092I\000\263qI\300\024\236I\300\r\264I@\222\322I\000\007\344I@\211\025J\000)\213H\300\330\'J h\201I\000\223\243I\200\324\341I\200\tnI@\211\225I\300\234\261I\000\272\333I\200\244iI\000\355\224I\000\357gI\000\330VI\000IYI\000\033\267I\340\256;J@\363\255I\000\205\317I\200LNI\200\237UI`*\235J\000|\222I\200<\'I\000\261\236I\2005=I\200\324aI\340\206\230I@\276!J\200\036\254I\000u(I \350\rJ\300\252\205I\200j\311I\200=\022I\200\000\261I\300\243\033J\000\357gI\200\247*I\000\2307H`<\032J\200>zI\000\221MI\300\243\233I\200jII\340\256;J \254\027J\000\033\267I\000\2149I@\372\227I\200\250\225I\000\366\321H\3009\203I\000\0337I\200\217.I\300\350\316I\300\272\254I\000\205\317I\200)\277I@\237;I\300\312\323I\2005=I\200a\214I\000\243JI\000\276\007I\000\234`I\200\275\236H\300wLJ\000\0337J\000\265GI@V\334I\240\353\002J\200\237\325I\000\307DI`\343\223I\000G\206I\260\270\221J\340!\224I\200I\020I\000\026#I\000\rcI\2005=I@q\231I@\310II@T\tJ\000|\222I\200\275PI\200<\247I\3002\231I\200\t\356I\000\232\215I\000\024\315I\200\260gI\000$\364H@Y\235I@\222RJ\200j\311I\000\357gI\240\212\'J\000\361=I\000\2149I\200q\263I \350\rJ\200\021CI\000\205\317I\000G\206I@\307\336I\000|\222I\000\357gI\200a\014J\000\336UI\000\205\317I\300\033\210I\000)\013I\200.\323I\200j\311I\000\205\317I\220KII\200\371FI\200\324\341I\000+^I\300\r4I\000\227LI@\233\222I\000\346*J\300K\200I\300\033\210I@\276\241I\200 \177J\000\260\263H\000IYI\000n>I\000\274\261G@T\tJ\200jII\200\237UI@\276\241I\2005\275I\000\330\326I\200\355\310I\000+\336I \312\022J\000$\364H\000\007dI\000\321lI\340<\203I\000\027\016J\200a\214I\200\313\244I\200\007\233I\200o\335I\200\370\333I\200\000\261I\200\021CI\200\275\320I\000|\222I\300P\224I\000\205OI@T\211I\000|\222H\300B\300I\200a\014J\000\325\230I\300\341dJ\000\024MI\000G\206I\000G\006I\200dJI\000\2149I\000\321\354H\000\326\003I\2005\275I\000$tJ\000\234\340H\000\261\236I\200\007\233I\000u\250I\000\270\210I\300\016\237I\200,\200I\3009\203I\000\206:I\200M9I\000\357gI\000\033\267I\000\0337J\300n\017J@fjI\200\353rI\000\036\365I\000\205\317I\000w{I\200\264\223I\300\243\233I\000\366QI\200\370[I\200\310cI\000+^I\200\226\030J\200,\200J\000~\345H\000\205OI\200\260gI\000CZI\200\217\256I\000\261\036I\000|\222I\200a\214I\000\310/I\0002HI\200\373\034I\200\230kI\200\025\354H\000G\206I\300\272,J\200S\270H\000\254\nI\000k\200I\000\337@I\000\rcJ"
      }
    }
  }
}
node {
  name: "linear/linear/bucketize"
  op: "Bucketize"
  input: "Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "boundaries"
    value {
      list {
        f: 0.0
        f: 200.0
        f: 400.0
        f: 600.0
        f: 800.0
        f: 1000.0
        f: 1200.0
        f: 1400.0
        f: 1600.0
        f: 1800.0
        f: 2000.0
        f: 2200.0
        f: 2400.0
        f: 2600.0
        f: 2800.0
        f: 3000.0
        f: 3200.0
        f: 3400.0
        f: 3600.0
        f: 3800.0
        f: 4000.0
        f: 4200.0
        f: 4400.0
        f: 4600.0
        f: 4800.0
        f: 5000.0
        f: 5200.0
        f: 5400.0
        f: 5600.0
        f: 5800.0
      }
    }
  }
}
node {
  name: "linear/linear/shape"
  op: "Shape"
  input: "linear/linear/bucketize"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/shape"
  input: "linear/linear/strided_slice/stack"
  input: "linear/linear/strided_slice/stack_1"
  input: "linear/linear/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/range"
  op: "Range"
  input: "linear/linear/range/start"
  input: "linear/linear/strided_slice"
  input: "linear/linear/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zeros/shape"
  op: "Pack"
  input: "linear/linear/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zeros"
  op: "Fill"
  input: "linear/linear/zeros/shape"
  input: "linear/linear/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/reshape"
  op: "Reshape"
  input: "linear/linear/bucketize"
  input: "linear/linear/reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/pack"
  op: "Pack"
  input: "linear/linear/range"
  input: "linear/linear/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/transpose/Rank"
  op: "Rank"
  input: "linear/linear/pack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/transpose/sub"
  op: "Sub"
  input: "linear/linear/transpose/Rank"
  input: "linear/linear/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose/Range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/transpose/Range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/transpose/Range"
  op: "Range"
  input: "linear/linear/transpose/Range/start"
  input: "linear/linear/transpose/Rank"
  input: "linear/linear/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose/sub_1"
  op: "Sub"
  input: "linear/linear/transpose/sub"
  input: "linear/linear/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose"
  op: "Transpose"
  input: "linear/linear/pack"
  input: "linear/linear/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/ToInt64"
  op: "Cast"
  input: "linear/linear/transpose"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/pack_1/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/pack_1"
  op: "Pack"
  input: "linear/linear/strided_slice"
  input: "linear/linear/pack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/ToInt64_1"
  op: "Cast"
  input: "linear/linear/pack_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 31
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/Assign"
  op: "Assign"
  input: "linear/size_bucketized/weights/part_0"
  input: "linear/size_bucketized/weights/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/read"
  op: "Identity"
  input: "linear/size_bucketized/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice"
  op: "Slice"
  input: "linear/linear/ToInt64_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice/begin"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Prod"
  op: "Prod"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Gather/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Gather"
  op: "Gather"
  input: "linear/linear/ToInt64_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape/new_shape"
  op: "Pack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Prod"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Gather"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape"
  op: "SparseReshape"
  input: "linear/linear/ToInt64"
  input: "linear/linear/ToInt64_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape/new_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape/Identity"
  op: "Identity"
  input: "linear/linear/reshape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/GreaterEqual"
  op: "GreaterEqual"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape/Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Where"
  op: "Where"
  input: "linear/linear/size_bucketized/size_bucketized_weights/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Reshape"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Where"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Gather_1"
  op: "Gather"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Gather_2"
  op: "Gather"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape/Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Identity"
  op: "Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice/stack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice/stack_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Cast"
  op: "Cast"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/range"
  op: "Range"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/range/start"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Cast"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Cast_1"
  op: "Cast"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1"
  op: "StridedSlice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Gather_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ListDiff"
  op: "ListDiff"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Cast_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2"
  op: "StridedSlice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ExpandDims"
  op: "ExpandDims"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseToDense"
  op: "SparseToDense"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ExpandDims"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Reshape"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Reshape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat"
  op: "Concat"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat/concat_dim"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/zeros_like"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Shape"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ListDiff"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Fill"
  op: "Fill"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_1/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_1"
  op: "Concat"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_1/concat_dim"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Gather_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_2/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_2"
  op: "Concat"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_2/concat_dim"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Gather_2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseReorder"
  op: "SparseReorder"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Identity"
  op: "Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseReorder"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice/stack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice/stack_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Cast"
  op: "Cast"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Unique"
  op: "Unique"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseReorder:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup"
  op: "Gather"
  input: "linear/size_bucketized/weights/part_0/read"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse"
  op: "SparseSegmentSum"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Unique:1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_1"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseToDense"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Shape"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/stack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/stack_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/pack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/pack"
  op: "Pack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/pack/0"
  input: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Tile"
  op: "Tile"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/pack"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights"
  op: "Select"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Tile"
  input: "linear/linear/size_bucketized/size_bucketized_weights/zeros_like"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Cast"
  op: "Cast"
  input: "linear/linear/ToInt64_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1"
  op: "Slice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Cast"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1/begin"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Shape_1"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2"
  op: "Slice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Shape_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2/begin"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/concat"
  op: "Concat"
  input: "linear/linear/size_bucketized/size_bucketized_weights/concat/concat_dim"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_2"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights"
  input: "linear/linear/size_bucketized/size_bucketized_weights/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/avg/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/avg/expand_dims"
  op: "ExpandDims"
  input: "Const_4"
  input: "linear/linear/avg/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/avg/weight/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/avg/weight/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/avg/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/avg/weight/part_0/Assign"
  op: "Assign"
  input: "linear/avg/weight/part_0"
  input: "linear/avg/weight/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/avg/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/avg/weight/part_0/read"
  op: "Identity"
  input: "linear/avg/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/avg/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/avg/weight"
  op: "Identity"
  input: "linear/avg/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/avg/matmul"
  op: "MatMul"
  input: "linear/linear/avg/expand_dims"
  input: "linear/avg/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/bathroom/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/bathroom/expand_dims"
  op: "ExpandDims"
  input: "Const_1"
  input: "linear/linear/bathroom/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/Assign"
  op: "Assign"
  input: "linear/bathroom/weight/part_0"
  input: "linear/bathroom/weight/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/read"
  op: "Identity"
  input: "linear/bathroom/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bathroom/weight"
  op: "Identity"
  input: "linear/bathroom/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/bathroom/matmul"
  op: "MatMul"
  input: "linear/linear/bathroom/expand_dims"
  input: "linear/bathroom/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/bedroom/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/bedroom/expand_dims"
  op: "ExpandDims"
  input: "Const"
  input: "linear/linear/bedroom/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/Assign"
  op: "Assign"
  input: "linear/bedroom/weight/part_0"
  input: "linear/bedroom/weight/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/read"
  op: "Identity"
  input: "linear/bedroom/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bedroom/weight"
  op: "Identity"
  input: "linear/bedroom/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/bedroom/matmul"
  op: "MatMul"
  input: "linear/linear/bedroom/expand_dims"
  input: "linear/bedroom/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/school_rating/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/school_rating/expand_dims"
  op: "ExpandDims"
  input: "Const_3"
  input: "linear/linear/school_rating/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/school_rating/weight/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/school_rating/weight/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_rating/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/school_rating/weight/part_0/Assign"
  op: "Assign"
  input: "linear/school_rating/weight/part_0"
  input: "linear/school_rating/weight/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_rating/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/school_rating/weight/part_0/read"
  op: "Identity"
  input: "linear/school_rating/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_rating/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/school_rating/weight"
  op: "Identity"
  input: "linear/school_rating/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/school_rating/matmul"
  op: "MatMul"
  input: "linear/linear/school_rating/expand_dims"
  input: "linear/school_rating/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/lookup"
  op: "StringToHashBucketFast"
  input: "SparseTensor/values"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
        }
      }
    }
  }
  attr {
    key: "num_buckets"
    value {
      i: 100
    }
  }
}
node {
  name: "linear/property_type/weights/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/Assign"
  op: "Assign"
  input: "linear/property_type/weights/part_0"
  input: "linear/property_type/weights/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/read"
  op: "Identity"
  input: "linear/property_type/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice"
  op: "Slice"
  input: "SparseTensor/shape"
  input: "linear/linear/property_type/property_type_weights/Slice/begin"
  input: "linear/linear/property_type/property_type_weights/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Prod"
  op: "Prod"
  input: "linear/linear/property_type/property_type_weights/Slice"
  input: "linear/linear/property_type/property_type_weights/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Gather/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Gather"
  op: "Gather"
  input: "SparseTensor/shape"
  input: "linear/linear/property_type/property_type_weights/Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseReshape/new_shape"
  op: "Pack"
  input: "linear/linear/property_type/property_type_weights/Prod"
  input: "linear/linear/property_type/property_type_weights/Gather"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseReshape"
  op: "SparseReshape"
  input: "SparseTensor/indices"
  input: "SparseTensor/shape"
  input: "linear/linear/property_type/property_type_weights/SparseReshape/new_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseReshape/Identity"
  op: "Identity"
  input: "linear/linear/lookup"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/GreaterEqual"
  op: "GreaterEqual"
  input: "linear/linear/property_type/property_type_weights/SparseReshape/Identity"
  input: "linear/linear/property_type/property_type_weights/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Where"
  op: "Where"
  input: "linear/linear/property_type/property_type_weights/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Reshape"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights/Where"
  input: "linear/linear/property_type/property_type_weights/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Gather_1"
  op: "Gather"
  input: "linear/linear/property_type/property_type_weights/SparseReshape"
  input: "linear/linear/property_type/property_type_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Gather_2"
  op: "Gather"
  input: "linear/linear/property_type/property_type_weights/SparseReshape/Identity"
  input: "linear/linear/property_type/property_type_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Identity"
  op: "Identity"
  input: "linear/linear/property_type/property_type_weights/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/property_type/property_type_weights/Identity"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice/stack"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice/stack_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Cast"
  op: "Cast"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/range"
  op: "Range"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/range/start"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Cast"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Cast_1"
  op: "Cast"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1"
  op: "StridedSlice"
  input: "linear/linear/property_type/property_type_weights/Gather_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1/stack"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1/stack_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ListDiff"
  op: "ListDiff"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Cast_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2"
  op: "StridedSlice"
  input: "linear/linear/property_type/property_type_weights/Identity"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2/stack"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2/stack_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ExpandDims"
  op: "ExpandDims"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseToDense"
  op: "SparseToDense"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ExpandDims"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Reshape"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Reshape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat"
  op: "Concat"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat/concat_dim"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Reshape"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/zeros_like"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Shape"
  op: "Shape"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ListDiff"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Fill"
  op: "Fill"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Shape"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_1/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_1"
  op: "Concat"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_1/concat_dim"
  input: "linear/linear/property_type/property_type_weights/Gather_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_2/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_2"
  op: "Concat"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_2/concat_dim"
  input: "linear/linear/property_type/property_type_weights/Gather_2"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseReorder"
  op: "SparseReorder"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_2"
  input: "linear/linear/property_type/property_type_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Identity"
  op: "Identity"
  input: "linear/linear/property_type/property_type_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseReorder"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice/stack"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice/stack_1"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Cast"
  op: "Cast"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Unique"
  op: "Unique"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseReorder:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup"
  op: "Gather"
  input: "linear/property_type/weights/part_0/read"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse"
  op: "SparseSegmentSum"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Unique:1"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Reshape_1"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseToDense"
  input: "linear/linear/property_type/property_type_weights/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Shape"
  op: "Shape"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/property_type/property_type_weights/Shape"
  input: "linear/linear/property_type/property_type_weights/strided_slice/stack"
  input: "linear/linear/property_type/property_type_weights/strided_slice/stack_1"
  input: "linear/linear/property_type/property_type_weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/pack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/pack"
  op: "Pack"
  input: "linear/linear/property_type/property_type_weights/pack/0"
  input: "linear/linear/property_type/property_type_weights/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Tile"
  op: "Tile"
  input: "linear/linear/property_type/property_type_weights/Reshape_1"
  input: "linear/linear/property_type/property_type_weights/pack"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights"
  op: "Select"
  input: "linear/linear/property_type/property_type_weights/Tile"
  input: "linear/linear/property_type/property_type_weights/zeros_like"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Cast"
  op: "Cast"
  input: "SparseTensor/shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_1"
  op: "Slice"
  input: "linear/linear/property_type/property_type_weights/Cast"
  input: "linear/linear/property_type/property_type_weights/Slice_1/begin"
  input: "linear/linear/property_type/property_type_weights/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Shape_1"
  op: "Shape"
  input: "linear/linear/property_type/property_type_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_2"
  op: "Slice"
  input: "linear/linear/property_type/property_type_weights/Shape_1"
  input: "linear/linear/property_type/property_type_weights/Slice_2/begin"
  input: "linear/linear/property_type/property_type_weights/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/concat"
  op: "Concat"
  input: "linear/linear/property_type/property_type_weights/concat/concat_dim"
  input: "linear/linear/property_type/property_type_weights/Slice_1"
  input: "linear/linear/property_type/property_type_weights/Slice_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Reshape_2"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights"
  input: "linear/linear/property_type/property_type_weights/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/AddN"
  op: "AddN"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_2"
  input: "linear/linear/avg/matmul"
  input: "linear/linear/bathroom/matmul"
  input: "linear/linear/bedroom/matmul"
  input: "linear/linear/school_rating/matmul"
  input: "linear/linear/property_type/property_type_weights/Reshape_2"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bias_weight/part_0"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Assign"
  op: "Assign"
  input: "linear/bias_weight/part_0"
  input: "linear/bias_weight/part_0/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bias_weight/part_0/read"
  op: "Identity"
  input: "linear/bias_weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bias_weight"
  op: "Identity"
  input: "linear/bias_weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/BiasAdd"
  op: "BiasAdd"
  input: "linear/linear/AddN"
  input: "linear/bias_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Squeeze"
  op: "Squeeze"
  input: "linear/linear/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ExpandDims"
  op: "ExpandDims"
  input: "Const_5"
  input: "ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "linear/linear/BiasAdd"
  input: "ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Square"
  op: "Square"
  input: "sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training_loss"
  op: "Mean"
  input: "Square"
  input: "Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "training_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ExpandDims_1"
  op: "ExpandDims"
  input: "Const_5"
  input: "ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sub_1"
  op: "Sub"
  input: "linear/linear/BiasAdd"
  input: "ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Square_1"
  op: "Square"
  input: "sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "training_loss_1"
  op: "Mean"
  input: "Square_1"
  input: "Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss_1"
      }
    }
  }
}
node {
  name: "loss_1"
  op: "ScalarSummary"
  input: "loss_1/tags"
  input: "training_loss_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/training_loss_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/training_loss_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/training_loss_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/training_loss_1_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "J\r\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/training_loss_1_grad/Tile"
  op: "Tile"
  input: "gradients/training_loss_1_grad/Reshape"
  input: "gradients/training_loss_1_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/training_loss_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "J\r\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/training_loss_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/training_loss_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/training_loss_1_grad/Prod"
  op: "Prod"
  input: "gradients/training_loss_1_grad/Shape"
  input: "gradients/training_loss_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/training_loss_1_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/training_loss_1_grad/Prod_1"
  op: "Prod"
  input: "gradients/training_loss_1_grad/Shape_1"
  input: "gradients/training_loss_1_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/training_loss_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/training_loss_1_grad/Maximum"
  op: "Maximum"
  input: "gradients/training_loss_1_grad/Prod_1"
  input: "gradients/training_loss_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/training_loss_1_grad/floordiv"
  op: "Div"
  input: "gradients/training_loss_1_grad/Prod"
  input: "gradients/training_loss_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/training_loss_1_grad/Cast"
  op: "Cast"
  input: "gradients/training_loss_1_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/training_loss_1_grad/truediv"
  op: "Div"
  input: "gradients/training_loss_1_grad/Tile"
  input: "gradients/training_loss_1_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Square_1_grad/mul/x"
  op: "Const"
  input: "^gradients/training_loss_1_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/Square_1_grad/mul"
  op: "Mul"
  input: "gradients/Square_1_grad/mul/x"
  input: "sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Square_1_grad/mul_1"
  op: "Mul"
  input: "gradients/training_loss_1_grad/truediv"
  input: "gradients/Square_1_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "J\r\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sub_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "J\r\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sub_1_grad/Shape"
  input: "gradients/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_1_grad/Sum"
  op: "Sum"
  input: "gradients/Square_1_grad/mul_1"
  input: "gradients/sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_1_grad/Sum"
  input: "gradients/sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sub_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/Square_1_grad/mul_1"
  input: "gradients/sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sub_1_grad/Neg"
  op: "Neg"
  input: "gradients/sub_1_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "gradients/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sub_1_grad/Neg"
  input: "gradients/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/linear/linear/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/sub_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/linear/linear/size_bucketized/size_bucketized_weights/Reshape_2_grad/Shape"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear/linear/size_bucketized/size_bucketized_weights/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_1_grad/Reshape"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/linear/linear/avg/matmul_grad/MatMul"
  op: "MatMul"
  input: "gradients/sub_1_grad/Reshape"
  input: "linear/avg/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear/linear/avg/matmul_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/avg/expand_dims"
  input: "gradients/sub_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear/linear/bathroom/matmul_grad/MatMul"
  op: "MatMul"
  input: "gradients/sub_1_grad/Reshape"
  input: "linear/bathroom/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear/linear/bathroom/matmul_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/bathroom/expand_dims"
  input: "gradients/sub_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear/linear/bedroom/matmul_grad/MatMul"
  op: "MatMul"
  input: "gradients/sub_1_grad/Reshape"
  input: "linear/bedroom/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear/linear/bedroom/matmul_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/bedroom/expand_dims"
  input: "gradients/sub_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear/linear/school_rating/matmul_grad/MatMul"
  op: "MatMul"
  input: "gradients/sub_1_grad/Reshape"
  input: "linear/school_rating/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear/linear/school_rating/matmul_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/school_rating/expand_dims"
  input: "gradients/sub_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear/linear/property_type/property_type_weights/Reshape_2_grad/Shape"
  op: "Shape"
  input: "linear/linear/property_type/property_type_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear/linear/property_type/property_type_weights/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/sub_1_grad/Reshape"
  input: "gradients/linear/linear/property_type/property_type_weights/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/linear/linear/size_bucketized/size_bucketized_weights_grad/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/size_bucketized/size_bucketized_weights/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/linear/linear/size_bucketized/size_bucketized_weights_grad/Select"
  op: "Select"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Tile"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/Reshape_2_grad/Reshape"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/linear/linear/size_bucketized/size_bucketized_weights_grad/Select_1"
  op: "Select"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Tile"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights_grad/zeros_like"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/linear/linear/property_type/property_type_weights_grad/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/property_type/property_type_weights/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/linear/linear/property_type/property_type_weights_grad/Select"
  op: "Select"
  input: "linear/linear/property_type/property_type_weights/Tile"
  input: "gradients/linear/linear/property_type/property_type_weights/Reshape_2_grad/Reshape"
  input: "gradients/linear/linear/property_type/property_type_weights_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/linear/linear/property_type/property_type_weights_grad/Select_1"
  op: "Select"
  input: "linear/linear/property_type/property_type_weights/Tile"
  input: "gradients/linear/linear/property_type/property_type_weights_grad/zeros_like"
  input: "gradients/linear/linear/property_type/property_type_weights/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/Shape"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/Shape"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/Gather"
  op: "Gather"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights_grad/Select_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/Gather"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Unique:1"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/Shape"
  op: "Shape"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/Shape"
  input: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  input: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  input: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/Gather"
  op: "Gather"
  input: "gradients/linear/linear/property_type/property_type_weights_grad/Select_1"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/Gather"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Unique:1"
  input: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\037\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  op: "Size"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  op: "Concat"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/concat_dim"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Unique"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  op: "Size"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  input: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  input: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  input: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  input: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  op: "Concat"
  input: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/concat_dim"
  input: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  input: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  input: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Unique"
  input: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 31
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/size_bucketized/weights/part_0/Adam"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/Adam/read"
  op: "Identity"
  input: "linear/size_bucketized/weights/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 31
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/size_bucketized/weights/part_0/Adam_1"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/size_bucketized/weights/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/avg/weight/part_0/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/avg/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/avg/weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/avg/weight/part_0/Adam"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/avg/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/avg/weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/avg/weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/avg/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/avg/weight/part_0/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/avg/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/avg/weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/avg/weight/part_0/Adam_1"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/avg/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/avg/weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/avg/weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/avg/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/bathroom/weight/part_0/Adam"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/bathroom/weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/bathroom/weight/part_0/Adam_1"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/bathroom/weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/bedroom/weight/part_0/Adam"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/bedroom/weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/bedroom/weight/part_0/Adam_1"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/bedroom/weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/school_rating/weight/part_0/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_rating/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/school_rating/weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/school_rating/weight/part_0/Adam"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_rating/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/school_rating/weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/school_rating/weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_rating/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/school_rating/weight/part_0/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_rating/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/school_rating/weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/school_rating/weight/part_0/Adam_1"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_rating/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/school_rating/weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/school_rating/weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_rating/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/property_type/weights/part_0/Adam"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/Adam/read"
  op: "Identity"
  input: "linear/property_type/weights/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/property_type/weights/part_0/Adam_1"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/property_type/weights/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/bias_weight/part_0/Adam"
  input: "zeros_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/bias_weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "zeros_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/bias_weight/part_0/Adam_1"
  input: "zeros_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/bias_weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 500
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/Cast_2"
  op: "Cast"
  input: "Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/sub"
  op: "Sub"
  input: "Adam/update_linear/size_bucketized/weights/part_0/sub/x"
  input: "beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/Sqrt"
  op: "Sqrt"
  input: "Adam/update_linear/size_bucketized/weights/part_0/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/mul"
  op: "Mul"
  input: "Adam/update_linear/size_bucketized/weights/part_0/Cast_2"
  input: "Adam/update_linear/size_bucketized/weights/part_0/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/sub_1"
  op: "Sub"
  input: "Adam/update_linear/size_bucketized/weights/part_0/sub_1/x"
  input: "beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/truediv"
  op: "Div"
  input: "Adam/update_linear/size_bucketized/weights/part_0/mul"
  input: "Adam/update_linear/size_bucketized/weights/part_0/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/sub_2"
  op: "Sub"
  input: "Adam/update_linear/size_bucketized/weights/part_0/sub_2/x"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/mul_1"
  op: "Mul"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  input: "Adam/update_linear/size_bucketized/weights/part_0/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/mul_2"
  op: "Mul"
  input: "linear/size_bucketized/weights/part_0/Adam/read"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/Assign"
  op: "Assign"
  input: "linear/size_bucketized/weights/part_0/Adam"
  input: "Adam/update_linear/size_bucketized/weights/part_0/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd"
  op: "ScatterAdd"
  input: "Adam/update_linear/size_bucketized/weights/part_0/Assign"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  input: "Adam/update_linear/size_bucketized/weights/part_0/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/mul_3"
  op: "Mul"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/sub_3"
  op: "Sub"
  input: "Adam/update_linear/size_bucketized/weights/part_0/sub_3/x"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/mul_4"
  op: "Mul"
  input: "Adam/update_linear/size_bucketized/weights/part_0/mul_3"
  input: "Adam/update_linear/size_bucketized/weights/part_0/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/mul_5"
  op: "Mul"
  input: "linear/size_bucketized/weights/part_0/Adam_1/read"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/Assign_1"
  op: "Assign"
  input: "linear/size_bucketized/weights/part_0/Adam_1"
  input: "Adam/update_linear/size_bucketized/weights/part_0/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd_1"
  op: "ScatterAdd"
  input: "Adam/update_linear/size_bucketized/weights/part_0/Assign_1"
  input: "gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  input: "Adam/update_linear/size_bucketized/weights/part_0/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/Sqrt_1"
  op: "Sqrt"
  input: "Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/mul_6"
  op: "Mul"
  input: "Adam/update_linear/size_bucketized/weights/part_0/truediv"
  input: "Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/add"
  op: "Add"
  input: "Adam/update_linear/size_bucketized/weights/part_0/Sqrt_1"
  input: "Adam/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/truediv_1"
  op: "Div"
  input: "Adam/update_linear/size_bucketized/weights/part_0/mul_6"
  input: "Adam/update_linear/size_bucketized/weights/part_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/AssignSub"
  op: "AssignSub"
  input: "linear/size_bucketized/weights/part_0"
  input: "Adam/update_linear/size_bucketized/weights/part_0/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_linear/size_bucketized/weights/part_0/group_deps"
  op: "NoOp"
  input: "^Adam/update_linear/size_bucketized/weights/part_0/AssignSub"
  input: "^Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd"
  input: "^Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
}
node {
  name: "Adam/update_linear/avg/weight/part_0/Cast_2"
  op: "Cast"
  input: "Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/avg/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/avg/weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/avg/weight/part_0"
  input: "linear/avg/weight/part_0/Adam"
  input: "linear/avg/weight/part_0/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/update_linear/avg/weight/part_0/Cast_2"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/linear/linear/avg/matmul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/avg/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_linear/bathroom/weight/part_0/Cast_2"
  op: "Cast"
  input: "Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/bathroom/weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/bathroom/weight/part_0"
  input: "linear/bathroom/weight/part_0/Adam"
  input: "linear/bathroom/weight/part_0/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/update_linear/bathroom/weight/part_0/Cast_2"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/linear/linear/bathroom/matmul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_linear/bedroom/weight/part_0/Cast_2"
  op: "Cast"
  input: "Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/bedroom/weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/bedroom/weight/part_0"
  input: "linear/bedroom/weight/part_0/Adam"
  input: "linear/bedroom/weight/part_0/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/update_linear/bedroom/weight/part_0/Cast_2"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/linear/linear/bedroom/matmul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_linear/school_rating/weight/part_0/Cast_2"
  op: "Cast"
  input: "Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_rating/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/school_rating/weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/school_rating/weight/part_0"
  input: "linear/school_rating/weight/part_0/Adam"
  input: "linear/school_rating/weight/part_0/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/update_linear/school_rating/weight/part_0/Cast_2"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/linear/linear/school_rating/matmul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_rating/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/Cast_2"
  op: "Cast"
  input: "Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/sub"
  op: "Sub"
  input: "Adam/update_linear/property_type/weights/part_0/sub/x"
  input: "beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/Sqrt"
  op: "Sqrt"
  input: "Adam/update_linear/property_type/weights/part_0/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/mul"
  op: "Mul"
  input: "Adam/update_linear/property_type/weights/part_0/Cast_2"
  input: "Adam/update_linear/property_type/weights/part_0/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/sub_1"
  op: "Sub"
  input: "Adam/update_linear/property_type/weights/part_0/sub_1/x"
  input: "beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/truediv"
  op: "Div"
  input: "Adam/update_linear/property_type/weights/part_0/mul"
  input: "Adam/update_linear/property_type/weights/part_0/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/sub_2"
  op: "Sub"
  input: "Adam/update_linear/property_type/weights/part_0/sub_2/x"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/mul_1"
  op: "Mul"
  input: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  input: "Adam/update_linear/property_type/weights/part_0/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/mul_2"
  op: "Mul"
  input: "linear/property_type/weights/part_0/Adam/read"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/Assign"
  op: "Assign"
  input: "linear/property_type/weights/part_0/Adam"
  input: "Adam/update_linear/property_type/weights/part_0/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/ScatterAdd"
  op: "ScatterAdd"
  input: "Adam/update_linear/property_type/weights/part_0/Assign"
  input: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  input: "Adam/update_linear/property_type/weights/part_0/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/mul_3"
  op: "Mul"
  input: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  input: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/sub_3"
  op: "Sub"
  input: "Adam/update_linear/property_type/weights/part_0/sub_3/x"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/mul_4"
  op: "Mul"
  input: "Adam/update_linear/property_type/weights/part_0/mul_3"
  input: "Adam/update_linear/property_type/weights/part_0/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/mul_5"
  op: "Mul"
  input: "linear/property_type/weights/part_0/Adam_1/read"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/Assign_1"
  op: "Assign"
  input: "linear/property_type/weights/part_0/Adam_1"
  input: "Adam/update_linear/property_type/weights/part_0/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/ScatterAdd_1"
  op: "ScatterAdd"
  input: "Adam/update_linear/property_type/weights/part_0/Assign_1"
  input: "gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  input: "Adam/update_linear/property_type/weights/part_0/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/Sqrt_1"
  op: "Sqrt"
  input: "Adam/update_linear/property_type/weights/part_0/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/mul_6"
  op: "Mul"
  input: "Adam/update_linear/property_type/weights/part_0/truediv"
  input: "Adam/update_linear/property_type/weights/part_0/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/add"
  op: "Add"
  input: "Adam/update_linear/property_type/weights/part_0/Sqrt_1"
  input: "Adam/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/truediv_1"
  op: "Div"
  input: "Adam/update_linear/property_type/weights/part_0/mul_6"
  input: "Adam/update_linear/property_type/weights/part_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/AssignSub"
  op: "AssignSub"
  input: "linear/property_type/weights/part_0"
  input: "Adam/update_linear/property_type/weights/part_0/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_linear/property_type/weights/part_0/group_deps"
  op: "NoOp"
  input: "^Adam/update_linear/property_type/weights/part_0/AssignSub"
  input: "^Adam/update_linear/property_type/weights/part_0/ScatterAdd"
  input: "^Adam/update_linear/property_type/weights/part_0/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
}
node {
  name: "Adam/update_linear/bias_weight/part_0/Cast_2"
  op: "Cast"
  input: "Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/update_linear/bias_weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/bias_weight/part_0"
  input: "linear/bias_weight/part_0/Adam"
  input: "linear/bias_weight/part_0/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/update_linear/bias_weight/part_0/Cast_2"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/linear/linear/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "Adam/beta1"
  input: "^Adam/update_linear/size_bucketized/weights/part_0/group_deps"
  input: "^Adam/update_linear/avg/weight/part_0/ApplyAdam"
  input: "^Adam/update_linear/bathroom/weight/part_0/ApplyAdam"
  input: "^Adam/update_linear/bedroom/weight/part_0/ApplyAdam"
  input: "^Adam/update_linear/school_rating/weight/part_0/ApplyAdam"
  input: "^Adam/update_linear/property_type/weights/part_0/group_deps"
  input: "^Adam/update_linear/bias_weight/part_0/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "Adam/beta2"
  input: "^Adam/update_linear/size_bucketized/weights/part_0/group_deps"
  input: "^Adam/update_linear/avg/weight/part_0/ApplyAdam"
  input: "^Adam/update_linear/bathroom/weight/part_0/ApplyAdam"
  input: "^Adam/update_linear/bedroom/weight/part_0/ApplyAdam"
  input: "^Adam/update_linear/school_rating/weight/part_0/ApplyAdam"
  input: "^Adam/update_linear/property_type/weights/part_0/group_deps"
  input: "^Adam/update_linear/bias_weight/part_0/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update"
  op: "NoOp"
  input: "^Adam/update_linear/size_bucketized/weights/part_0/group_deps"
  input: "^Adam/update_linear/avg/weight/part_0/ApplyAdam"
  input: "^Adam/update_linear/bathroom/weight/part_0/ApplyAdam"
  input: "^Adam/update_linear/bedroom/weight/part_0/ApplyAdam"
  input: "^Adam/update_linear/school_rating/weight/part_0/ApplyAdam"
  input: "^Adam/update_linear/property_type/weights/part_0/group_deps"
  input: "^Adam/update_linear/bias_weight/part_0/ApplyAdam"
  input: "^Adam/Assign"
  input: "^Adam/Assign_1"
}
node {
  name: "Adam/value"
  op: "Const"
  input: "^Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Squeeze_1"
  op: "Squeeze"
  input: "linear/linear/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ExpandDims_2"
  op: "ExpandDims"
  input: "Const_5"
  input: "ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ExpandDims_3"
  op: "ExpandDims"
  input: "Squeeze_1"
  input: "ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sub_2"
  op: "Sub"
  input: "ExpandDims_3"
  input: "ExpandDims_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Square_2"
  op: "Square"
  input: "sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3402
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Const_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "eval_loss"
  op: "Mean"
  input: "Square_2"
  input: "Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean/total"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "mean/total/Assign"
  op: "Assign"
  input: "mean/total"
  input: "mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mean/total/read"
  op: "Identity"
  input: "mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean/count"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "mean/count/Assign"
  op: "Assign"
  input: "mean/count"
  input: "mean/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "mean/count/read"
  op: "Identity"
  input: "mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mean/ToFloat_1"
  op: "Cast"
  input: "mean/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean/Sum"
  op: "Sum"
  input: "eval_loss"
  input: "mean/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean/AssignAdd"
  op: "AssignAdd"
  input: "mean/total"
  input: "mean/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "mean/AssignAdd_1"
  op: "AssignAdd"
  input: "mean/count"
  input: "mean/ToFloat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "mean/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean/Greater"
  op: "Greater"
  input: "mean/count/read"
  input: "mean/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean/truediv"
  op: "Div"
  input: "mean/total/read"
  input: "mean/count/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean/value/e"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean/value"
  op: "Select"
  input: "mean/Greater"
  input: "mean/truediv"
  input: "mean/value/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean/Greater_1/y"
  op: "Const"
  input: "^mean/AssignAdd"
  input: "^mean/AssignAdd_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean/Greater_1"
  op: "Greater"
  input: "mean/count/read"
  input: "mean/Greater_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean/truediv_1"
  op: "Div"
  input: "mean/total/read"
  input: "mean/count/read"
  input: "^mean/AssignAdd"
  input: "^mean/AssignAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mean/update_op/e"
  op: "Const"
  input: "^mean/AssignAdd"
  input: "^mean/AssignAdd_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "mean/update_op"
  op: "Select"
  input: "mean/Greater_1"
  input: "mean/truediv_1"
  input: "mean/update_op/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^linear/size_bucketized/weights/part_0/Assign"
  input: "^linear/avg/weight/part_0/Assign"
  input: "^linear/bathroom/weight/part_0/Assign"
  input: "^linear/bedroom/weight/part_0/Assign"
  input: "^linear/school_rating/weight/part_0/Assign"
  input: "^linear/property_type/weights/part_0/Assign"
  input: "^linear/bias_weight/part_0/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^linear/size_bucketized/weights/part_0/Adam/Assign"
  input: "^linear/size_bucketized/weights/part_0/Adam_1/Assign"
  input: "^linear/avg/weight/part_0/Adam/Assign"
  input: "^linear/avg/weight/part_0/Adam_1/Assign"
  input: "^linear/bathroom/weight/part_0/Adam/Assign"
  input: "^linear/bathroom/weight/part_0/Adam_1/Assign"
  input: "^linear/bedroom/weight/part_0/Adam/Assign"
  input: "^linear/bedroom/weight/part_0/Adam_1/Assign"
  input: "^linear/school_rating/weight/part_0/Adam/Assign"
  input: "^linear/school_rating/weight/part_0/Adam_1/Assign"
  input: "^linear/property_type/weights/part_0/Adam/Assign"
  input: "^linear/property_type/weights/part_0/Adam_1/Assign"
  input: "^linear/bias_weight/part_0/Adam/Assign"
  input: "^linear/bias_weight/part_0/Adam_1/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "linear/size_bucketized/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "linear/avg/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/avg/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "linear/bathroom/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "linear/bedroom/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "linear/school_rating/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_rating/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "linear/property_type/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "linear/bias_weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "linear/size_bucketized/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "linear/size_bucketized/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "linear/avg/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/avg/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "linear/avg/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/avg/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "linear/bathroom/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "linear/bathroom/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "linear/bedroom/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "linear/bedroom/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "linear/school_rating/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_rating/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "linear/school_rating/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_rating/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "linear/property_type/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "linear/property_type/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "linear/bias_weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "linear/bias_weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/pack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  attr {
    key: "N"
    value {
      i: 26
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/pack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 26
          }
        }
        string_val: "global_step"
        string_val: "linear/size_bucketized/weights/part_0"
        string_val: "linear/avg/weight/part_0"
        string_val: "linear/bathroom/weight/part_0"
        string_val: "linear/bedroom/weight/part_0"
        string_val: "linear/school_rating/weight/part_0"
        string_val: "linear/property_type/weights/part_0"
        string_val: "linear/bias_weight/part_0"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "linear/size_bucketized/weights/part_0/Adam"
        string_val: "linear/size_bucketized/weights/part_0/Adam_1"
        string_val: "linear/avg/weight/part_0/Adam"
        string_val: "linear/avg/weight/part_0/Adam_1"
        string_val: "linear/bathroom/weight/part_0/Adam"
        string_val: "linear/bathroom/weight/part_0/Adam_1"
        string_val: "linear/bedroom/weight/part_0/Adam"
        string_val: "linear/bedroom/weight/part_0/Adam_1"
        string_val: "linear/school_rating/weight/part_0/Adam"
        string_val: "linear/school_rating/weight/part_0/Adam_1"
        string_val: "linear/property_type/weights/part_0/Adam"
        string_val: "linear/property_type/weights/part_0/Adam_1"
        string_val: "linear/bias_weight/part_0/Adam"
        string_val: "linear/bias_weight/part_0/Adam_1"
        string_val: "mean/total"
        string_val: "mean/count"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 26
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "Concat"
  input: "report_uninitialized_variables/boolean_mask/concat/concat_dim"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 26
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "Concat"
  input: "concat/concat_dim"
  input: "report_uninitialized_variables/boolean_mask/Gather"
  input: "report_uninitialized_resources/Const"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^mean/total/Assign"
  input: "^mean/count/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "loss"
  input: "loss_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/Const"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 24
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "global_step"
        string_val: "linear/avg/weight"
        string_val: "linear/avg/weight/Adam"
        string_val: "linear/avg/weight/Adam_1"
        string_val: "linear/bathroom/weight"
        string_val: "linear/bathroom/weight/Adam"
        string_val: "linear/bathroom/weight/Adam_1"
        string_val: "linear/bedroom/weight"
        string_val: "linear/bedroom/weight/Adam"
        string_val: "linear/bedroom/weight/Adam_1"
        string_val: "linear/bias_weight"
        string_val: "linear/bias_weight/Adam"
        string_val: "linear/bias_weight/Adam_1"
        string_val: "linear/property_type/weights"
        string_val: "linear/property_type/weights/Adam"
        string_val: "linear/property_type/weights/Adam_1"
        string_val: "linear/school_rating/weight"
        string_val: "linear/school_rating/weight/Adam"
        string_val: "linear/school_rating/weight/Adam_1"
        string_val: "linear/size_bucketized/weights"
        string_val: "linear/size_bucketized/weights/Adam"
        string_val: "linear/size_bucketized/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 24
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "100 1 0,100:0,1"
        string_val: "100 1 0,100:0,1"
        string_val: "100 1 0,100:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "31 1 0,31:0,1"
        string_val: "31 1 0,31:0,1"
        string_val: "31 1 0,31:0,1"
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/ShardedFilename"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "global_step"
  input: "linear/avg/weight/part_0/read"
  input: "linear/avg/weight/part_0/Adam/read"
  input: "linear/avg/weight/part_0/Adam_1/read"
  input: "linear/bathroom/weight/part_0/read"
  input: "linear/bathroom/weight/part_0/Adam/read"
  input: "linear/bathroom/weight/part_0/Adam_1/read"
  input: "linear/bedroom/weight/part_0/read"
  input: "linear/bedroom/weight/part_0/Adam/read"
  input: "linear/bedroom/weight/part_0/Adam_1/read"
  input: "linear/bias_weight/part_0/read"
  input: "linear/bias_weight/part_0/Adam/read"
  input: "linear/bias_weight/part_0/Adam_1/read"
  input: "linear/property_type/weights/part_0/read"
  input: "linear/property_type/weights/part_0/Adam/read"
  input: "linear/property_type/weights/part_0/Adam_1/read"
  input: "linear/school_rating/weight/part_0/read"
  input: "linear/school_rating/weight/part_0/Adam/read"
  input: "linear/school_rating/weight/part_0/Adam_1/read"
  input: "linear/size_bucketized/weights/part_0/read"
  input: "linear/size_bucketized/weights/part_0/Adam/read"
  input: "linear/size_bucketized/weights/part_0/Adam_1/read"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/ShardedFilespec"
  op: "ShardedFilespec"
  input: "save/Const"
  input: "save/num_shards"
  input: "^save/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/avg/weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "linear/avg/weight/part_0"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/avg/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/avg/weight/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "linear/avg/weight/part_0/Adam"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/avg/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/avg/weight/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "linear/avg/weight/part_0/Adam_1"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/avg/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bathroom/weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "linear/bathroom/weight/part_0"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bathroom/weight/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "linear/bathroom/weight/part_0/Adam"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bathroom/weight/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "linear/bathroom/weight/part_0/Adam_1"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bedroom/weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "linear/bedroom/weight/part_0"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bedroom/weight/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "linear/bedroom/weight/part_0/Adam"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bedroom/weight/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "linear/bedroom/weight/part_0/Adam_1"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bias_weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "linear/bias_weight/part_0"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bias_weight/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "linear/bias_weight/part_0/Adam"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bias_weight/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "linear/bias_weight/part_0/Adam_1"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/property_type/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "100 1 0,100:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "linear/property_type/weights/part_0"
  input: "save/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/property_type/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "100 1 0,100:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear/property_type/weights/part_0/Adam"
  input: "save/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/property_type/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "100 1 0,100:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear/property_type/weights/part_0/Adam_1"
  input: "save/RestoreV2_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/school_rating/weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear/school_rating/weight/part_0"
  input: "save/RestoreV2_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_rating/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_19/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/school_rating/weight/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_19/tensor_names"
  input: "save/RestoreV2_19/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear/school_rating/weight/part_0/Adam"
  input: "save/RestoreV2_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_rating/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_20/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/school_rating/weight/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_20/tensor_names"
  input: "save/RestoreV2_20/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear/school_rating/weight/part_0/Adam_1"
  input: "save/RestoreV2_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_rating/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_21/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/size_bucketized/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "31 1 0,31:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_21/tensor_names"
  input: "save/RestoreV2_21/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear/size_bucketized/weights/part_0"
  input: "save/RestoreV2_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_22/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/size_bucketized/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "31 1 0,31:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_22/tensor_names"
  input: "save/RestoreV2_22/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "linear/size_bucketized/weights/part_0/Adam"
  input: "save/RestoreV2_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_23/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/size_bucketized/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "31 1 0,31:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_23/tensor_names"
  input: "save/RestoreV2_23/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "linear/size_bucketized/weights/part_0/Adam_1"
  input: "save/RestoreV2_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
versions {
  producer: 17
}
